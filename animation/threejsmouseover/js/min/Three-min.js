var THREE=THREE||{REVISION:"60"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var r=Object.keys(t),i=0,o=r.length;o>i;i++){var a=r[i];Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}else{var n={}.hasOwnProperty;for(var a in t)n.call(t,a)&&(e[a]=t[a])}return e},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[t[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[r]+"CancelAnimationFrame"]||self[t[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),o=self.setTimeout(function(){t(r+i)},i);return e=r+i,o}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+6*(t-e)*(2/3-r):e},o=.5>=r?r*(1+t):r+t-r*t,a=2*r-o;this.r=i(a,o,e+1/3),this.g=i(a,o,e),this.b=i(a,o,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var e={h:0,s:0,l:0};return function(){var t=this.r,r=this.g,i=this.b,o=Math.max(t,r,i),a=Math.min(t,r,i),n,s,h=(a+o)/2;if(a===o)n=0,s=0;else{var l=o-a;switch(s=.5>=h?l/(o+a):l/(2-o-a),o){case t:n=(r-i)/l+(i>r?6:0);break;case r:n=(i-t)/l+2;break;case i:n=(t-r)/l+4}n/=6}return e.h=n,e.s=s,e.l=h,e}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(e){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),o=Math.cos(e._z/2),a=Math.sin(e._x/2),n=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"YXZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"ZXY"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"ZYX"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"YZX"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o-a*n*s):"XZY"===e.order&&(this._x=a*i*o-r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o+a*n*s),t!==!1&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this._updateEuler(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0],i=t[4],o=t[8],a=t[1],n=t[5],s=t[9],h=t[2],l=t[6],c=t[10],u=r+n+c,p;return u>0?(p=.5/Math.sqrt(u+1),this._w=.25/p,this._x=(l-s)*p,this._y=(o-h)*p,this._z=(a-i)*p):r>n&&r>c?(p=2*Math.sqrt(1+r-n-c),this._w=(l-s)/p,this._x=.25*p,this._y=(i+a)/p,this._z=(o+h)/p):n>c?(p=2*Math.sqrt(1+n-r-c),this._w=(o-h)/p,this._x=(i+a)/p,this._y=.25*p,this._z=(s+l)/p):(p=2*Math.sqrt(1+c-r-n),this._w=(a-i)/p,this._x=(o+h)/p,this._y=(s+l)/p,this._z=.25*p),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,o=e._z,a=e._w,n=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+a*n+i*h-o*s,this._y=i*l+a*s+o*n-r*h,this._z=o*l+a*h+r*s-i*n,this._w=a*l-r*n-i*s-o*h,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,o=this._z,a=this._w,n=a*e._w+r*e._x+i*e._y+o*e._z;if(0>n?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,n=-n):this.copy(e),n>=1)return this._w=a,this._x=r,this._y=i,this._z=o,this;var s=Math.acos(n),h=Math.sqrt(1-n*n);if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(o+this._z),this;var l=Math.sin((1-t)*s)/h,c=Math.sin(t*s)/h;return this._w=a*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=o*l+this._z*c,this._updateEuler(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[3]*r+o[6]*i,this.y=o[1]*t+o[4]*r+o[7]*i,this.z=o[2]*t+o[5]*r+o[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12],this.y=o[1]*t+o[5]*r+o[9]*i+o[13],this.z=o[2]*t+o[6]*r+o[10]*i+o[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements,a=1/(o[3]*t+o[7]*r+o[11]*i+o[15]);return this.x=(o[0]*t+o[4]*r+o[8]*i+o[12])*a,this.y=(o[1]*t+o[5]*r+o[9]*i+o[13])*a,this.z=(o[2]*t+o[6]*r+o[10]*i+o[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,o=e.x,a=e.y,n=e.z,s=e.w,h=s*t+a*i-n*r,l=s*r+n*t-o*i,c=s*i+o*r-a*t,u=-o*t-a*r-n*i;return this.x=h*s+u*-o+l*-n-c*-a,this.y=l*s+u*-a+c*-o-h*-n,this.z=c*s+u*-n+h*-a-l*-o,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i,this.y=o[1]*t+o[5]*r+o[9]*i,this.z=o[2]*t+o[6]*r+o[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,o=this.z;return this.x=i*e.z-o*e.y,this.y=o*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,o=e.z,a=t.x,n=t.y,s=t.z;return this.x=i*s-o*n,this.y=o*a-r*s,this.z=r*n-i*a,this},angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},setEulerFromRotationMatrix:function(e,t){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(e,t){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},getColumnFromMatrix:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){return t instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,r){return this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){e.copy(t).normalize();var r=this.dot(e);return this.copy(e).multiplyScalar(r)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t).multiplyScalar(2),this.subVectors(e,this)}}()}),THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*o,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*o,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*o,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*o,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,o,a=.01,n=.1,s=e.elements,h=s[0],l=s[4],c=s[8],u=s[1],p=s[5],f=s[9],E=s[2],d=s[6],m=s[10];if(Math.abs(l-u)<a&&Math.abs(c-E)<a&&Math.abs(f-d)<a){if(Math.abs(l+u)<n&&Math.abs(c+E)<n&&Math.abs(f+d)<n&&Math.abs(h+p+m-3)<n)return this.set(1,0,0,0),this;t=Math.PI;var g=(h+1)/2,v=(p+1)/2,T=(m+1)/2,y=(l+u)/4,R=(c+E)/4,x=(f+d)/4;return g>v&&g>T?a>g?(r=0,i=.707106781,o=.707106781):(r=Math.sqrt(g),i=y/r,o=R/r):v>T?a>v?(r=.707106781,i=0,o=.707106781):(i=Math.sqrt(v),r=y/i,o=x/i):a>T?(r=.707106781,i=.707106781,o=0):(o=Math.sqrt(T),r=R/o,i=x/o),this.set(r,i,o,t),this}var H=Math.sqrt((d-f)*(d-f)+(c-E)*(c-E)+(u-l)*(u-l));return Math.abs(H)<.001&&(H=1),this.x=(d-f)/H,this.y=(c-E)/H,this.z=(u-l)/H,this.w=Math.acos((h+p+m-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,o=i[0],a=i[4],n=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],p=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(n)),Math.abs(n)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l)),Math.abs(l)<.99999?(this._y=Math.atan2(n,p),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(s,o))):"ZYX"===t?(this._y=Math.asin(-r(c)),Math.abs(c)<.99999?(this._x=Math.atan2(u,p),this._z=Math.atan2(s,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===t?(this._z=Math.asin(r(s)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,o)):(this._x=0,this._y=Math.atan2(n,p))):"XZY"===t?(this._z=Math.asin(-r(a)),Math.abs(a)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(n,o)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,r){function i(e){return Math.min(Math.max(e,-1),1)}var o=e.x*e.x,a=e.y*e.y,n=e.z*e.z,s=e.w*e.w;return t=t||this._order,"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-o-a+n),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+o-a-n)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-o-a+n),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-o+a-n)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-o-a+n),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-o+a-n)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-o-a+n),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+o-a-n)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-o+a-n),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+o-a-n),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-o+a-n),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+o-a-n),this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,r!==!1&&this._updateQuaternion(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var o=t.dot(t),a=t.dot(e),n=a/o;return i&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,r){var i=this.closestPointToPointParameter(e,t),o=r||new THREE.Vector3;return this.delta(o).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this
},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)this.addPoint(e[r])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,o=0,a=i.length;a>o;o++)e.copy(i[o]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector3;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,r,i,o,a,n,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,r||0,i||0,void 0!==o?o:1,a||0,n||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,o,a,n,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=o,l[7]=a,l[2]=n,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;i>r;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],o=e[3],a=e[4],n=e[5],s=e[6],h=e[7],l=e[8];return t*a*l-t*n*h-r*o*l+r*n*s+i*o*h-i*a*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var o=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===o){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/o),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,r,i,o,a,n,s,h,l,c,u,p,f,E,d){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=r||0,m[12]=i||0,m[1]=o||0,m[5]=void 0!==a?a:1,m[9]=n||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=p||0,m[7]=f||0,m[11]=E||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,o,a,n,s,h,l,c,u,p,f,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=o,m[5]=a,m[9]=n,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=p,m[7]=f,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,o=1/e.set(i[0],i[1],i[2]).length(),a=1/e.set(i[4],i[5],i[6]).length(),n=1/e.set(i[8],i[9],i[10]).length();return r[0]=i[0]*o,r[1]=i[1]*o,r[2]=i[2]*o,r[4]=i[4]*a,r[5]=i[5]*a,r[6]=i[6]*a,r[8]=i[8]*n,r[9]=i[9]*n,r[10]=i[10]*n,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,r=e.x,i=e.y,o=e.z,a=Math.cos(r),n=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(o),c=Math.sin(o);if("XYZ"===e.order){var u=a*l,p=a*c,f=n*l,E=n*c;t[0]=s*l,t[4]=-s*c,t[8]=h,t[1]=p+f*h,t[5]=u-E*h,t[9]=-n*s,t[2]=E-u*h,t[6]=f+p*h,t[10]=a*s}else if("YXZ"===e.order){var d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d+v*n,t[4]=g*n-m,t[8]=a*h,t[1]=a*c,t[5]=a*l,t[9]=-n,t[2]=m*n-g,t[6]=v+d*n,t[10]=a*s}else if("ZXY"===e.order){var d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d-v*n,t[4]=-a*c,t[8]=g+m*n,t[1]=m+g*n,t[5]=a*l,t[9]=v-d*n,t[2]=-a*h,t[6]=n,t[10]=a*s}else if("ZYX"===e.order){var u=a*l,p=a*c,f=n*l,E=n*c;t[0]=s*l,t[4]=f*h-p,t[8]=u*h+E,t[1]=s*c,t[5]=E*h+u,t[9]=p*h-f,t[2]=-h,t[6]=n*s,t[10]=a*s}else if("YZX"===e.order){var T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=x-T*c,t[8]=R*c+y,t[1]=c,t[5]=a*l,t[9]=-n*l,t[2]=-h*l,t[6]=y*c+R,t[10]=T-x*c}else if("XZY"===e.order){var T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=-c,t[8]=h*l,t[1]=T*c+x,t[5]=a*l,t[9]=y*c-R,t[2]=R*c-y,t[6]=n*l,t[10]=x*c+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=e.w,n=r+r,s=i+i,h=o+o,l=r*n,c=r*s,u=r*h,p=i*s,f=i*h,E=o*h,d=a*n,m=a*s,g=a*h;return t[0]=1-(p+E),t[4]=c-g,t[8]=u+m,t[1]=c+g,t[5]=1-(l+E),t[9]=f-d,t[2]=u-m,t[6]=f+d,t[10]=1-(l+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a){var n=this.elements;return r.subVectors(i,o).normalize(),0===r.length()&&(r.z=1),e.crossVectors(a,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(a,r).normalize()),t.crossVectors(r,e),n[0]=e.x,n[4]=t.x,n[8]=r.x,n[1]=e.y,n[5]=t.y,n[9]=r.y,n[2]=e.z,n[6]=t.z,n[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,o=this.elements,a=r[0],n=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],p=r[13],f=r[2],E=r[6],d=r[10],m=r[14],g=r[3],v=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],_=i[12],b=i[1],w=i[5],M=i[9],S=i[13],A=i[2],C=i[6],P=i[10],L=i[14],D=i[3],F=i[7],V=i[11],U=i[15];return o[0]=a*R+n*b+s*A+h*D,o[4]=a*x+n*w+s*C+h*F,o[8]=a*H+n*M+s*P+h*V,o[12]=a*_+n*S+s*L+h*U,o[1]=l*R+c*b+u*A+p*D,o[5]=l*x+c*w+u*C+p*F,o[9]=l*H+c*M+u*P+p*V,o[13]=l*_+c*S+u*L+p*U,o[2]=f*R+E*b+d*A+m*D,o[6]=f*x+E*w+d*C+m*F,o[10]=f*H+E*M+d*P+m*V,o[14]=f*_+E*S+d*L+m*U,o[3]=g*R+v*b+T*A+y*D,o[7]=g*x+v*w+T*C+y*F,o[11]=g*H+v*M+T*P+y*V,o[15]=g*_+v*S+T*L+y*U,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;i>r;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyProjection(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],o=e[12],a=e[1],n=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],p=e[14],f=e[3],E=e[7],d=e[11],m=e[15];return f*(+o*s*c-i*h*c-o*n*u+r*h*u+i*n*p-r*s*p)+E*(+t*s*p-t*h*u+o*a*u-i*a*p+i*h*l-o*s*l)+d*(+t*h*c-t*n*p-o*a*c+r*a*p+o*n*l-r*h*l)+m*(-i*n*l-t*s*c+t*n*u+i*a*c-r*a*u+r*s*l)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,o=i[0],a=i[4],n=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],p=i[2],f=i[6],E=i[10],d=i[14],m=i[3],g=i[7],v=i[11],T=i[15];r[0]=c*d*g-u*E*g+u*f*v-l*d*v-c*f*T+l*E*T,r[4]=s*E*g-n*d*g-s*f*v+a*d*v+n*f*T-a*E*T,r[8]=n*u*g-s*c*g+s*l*v-a*u*v-n*l*T+a*c*T,r[12]=s*c*f-n*u*f-s*l*E+a*u*E+n*l*d-a*c*d,r[1]=u*E*m-c*d*m-u*p*v+h*d*v+c*p*T-h*E*T,r[5]=n*d*m-s*E*m+s*p*v-o*d*v-n*p*T+o*E*T,r[9]=s*c*m-n*u*m-s*h*v+o*u*v+n*h*T-o*c*T,r[13]=n*u*p-s*c*p+s*h*E-o*u*E-n*h*d+o*c*d,r[2]=l*d*m-u*f*m+u*p*g-h*d*g-l*p*T+h*f*T,r[6]=s*f*m-a*d*m-s*p*g+o*d*g+a*p*T-o*f*T,r[10]=a*u*m-s*l*m+s*h*g-o*u*g-a*h*T+o*l*T,r[14]=s*l*p-a*u*p-s*h*f+o*u*f+a*h*d-o*l*d,r[3]=c*f*m-l*E*m-c*p*g+h*E*g+l*p*v-h*f*v,r[7]=a*E*m-n*f*m+n*p*g-o*E*g-a*p*v+o*f*v,r[11]=n*l*m-a*c*m-n*h*g+o*c*g+a*h*v-o*l*v,r[15]=a*c*p-n*l*p+n*h*f-o*c*f-a*h*E+o*l*E;var y=o*r[0]+h*r[4]+p*r[8]+m*r[12];if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(e){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(e){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(e){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(e){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return t[0]*=r,t[4]*=i,t[8]*=o,t[1]*=r,t[5]*=i,t[9]*=o,t[2]*=r,t[6]*=i,t[10]*=o,t[3]*=r,t[7]*=i,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),o=1-r,a=e.x,n=e.y,s=e.z,h=o*a,l=o*n;return this.set(h*a+r,h*n-i*s,h*s+i*n,0,h*n+i*s,l*n+r,l*s-i*a,0,h*s-i*n,l*s+i*a,o*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,o){var a=this.elements,n=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),h=e.set(a[8],a[9],a[10]).length();r.x=a[12],r.y=a[13],r.z=a[14],t.elements.set(this.elements);var l=1/n,c=1/s,u=1/h;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=u,t.elements[9]*=u,t.elements[10]*=u,i.setFromRotationMatrix(t),o.x=n,o.y=s,o.z=h,this}}(),makeFrustum:function(e,t,r,i,o,a){var n=this.elements,s=2*o/(t-e),h=2*o/(i-r),l=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+o)/(a-o),p=-2*a*o/(a-o);return n[0]=s,n[4]=0,n[8]=l,n[12]=0,n[1]=0,n[5]=h,n[9]=c,n[13]=0,n[2]=0,n[6]=0,n[10]=u,n[14]=p,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(e,t,r,i){var o=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-o,n=a*t,s=o*t;return this.makeFrustum(n,s,a,o,r,i)},makeOrthographic:function(e,t,r,i,o,a){var n=this.elements,s=t-e,h=r-i,l=a-o,c=(t+e)/s,u=(r+i)/h,p=(a+o)/l;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-c,n[1]=0,n[5]=2/h,n[9]=0,n[13]=-u,n[2]=0,n[6]=0,n[10]=-2/l,n[14]=-p,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,r,i){var o=e.clone().add(t).multiplyScalar(.5),a=t.clone().sub(e).normalize(),n=.5*e.distanceTo(t),s=this.origin.clone().sub(o),h=-this.direction.dot(a),l=s.dot(this.direction),c=-s.dot(a),u=s.lengthSq(),p=Math.abs(1-h*h),f,E,d,m;if(p>=0)if(f=h*c-l,E=h*l-c,m=n*p,f>=0)if(E>=-m)if(m>=E){var g=1/p;f*=g,E*=g,d=f*(f+h*E+2*l)+E*(h*f+E+2*c)+u}else E=n,f=Math.max(0,-(h*E+l)),d=-f*f+E*(E+2*c)+u;else E=-n,f=Math.max(0,-(h*E+l)),d=-f*f+E*(E+2*c)+u;else-m>=E?(f=Math.max(0,-(-h*n+l)),E=f>0?-n:Math.min(Math.max(-n,-c),n),d=-f*f+E*(E+2*c)+u):m>=E?(f=0,E=Math.min(Math.max(-n,-c),n),d=E*(E+2*c)+u):(f=Math.max(0,-(h*n+l)),E=f>0?n:Math.min(Math.max(-n,-c),n),d=-f*f+E*(E+2*c)+u);else E=h>0?-n:n,f=Math.max(0,-(h*E+l)),d=-f*f+E*(E+2*c)+u;return r&&r.copy(this.direction.clone().multiplyScalar(f).add(this.origin)),i&&i.copy(a.clone().multiplyScalar(E).add(o)),d},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return 0>r*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,o,a,n,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(r=(e.min.x-u.x)*h,i=(e.max.x-u.x)*h):(r=(e.max.x-u.x)*h,i=(e.min.x-u.x)*h),l>=0?(o=(e.min.y-u.y)*l,a=(e.max.y-u.y)*l):(o=(e.max.y-u.y)*l,a=(e.min.y-u.y)*l),r>a||o>i?null:((o>r||r!==r)&&(r=o),(i>a||i!==i)&&(i=a),c>=0?(n=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(n=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),r>s||n>i?null:((n>r||r!==r)&&(r=n),(i>s||i!==i)&&(i=s),0>i?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(o,a,n,s,h){t.subVectors(a,o),r.subVectors(n,o),i.crossVectors(t,r);var l=this.direction.dot(i),c;if(l>0){if(s)return null;c=1}else{if(!(0>l))return null;c=-1,l=-l}e.subVectors(this.origin,o);var u=c*this.direction.dot(r.crossVectors(e,r));if(0>u)return null;var p=c*this.direction.dot(t.cross(e));if(0>p)return null;if(u+p>l)return null;var f=-c*e.dot(i);return 0>f?null:this.at(f/l,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var o=0,a=0,n=t.length;n>a;a++)o=Math.max(o,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(o),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,o,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==o?o:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,o,a){var n=this.planes;return n[0].copy(e),n[1].copy(t),n[2].copy(r),n[3].copy(i),n[4].copy(o),n[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],o=r[1],a=r[2],n=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],p=r[9],f=r[10],E=r[11],d=r[12],m=r[13],g=r[14],v=r[15];return t[0].setComponents(n-i,c-s,E-u,v-d).normalize(),t[1].setComponents(n+i,c+s,E+u,v+d).normalize(),t[2].setComponents(n+o,c+h,E+p,v+m).normalize(),t[3].setComponents(n-o,c-h,E-p,v-m).normalize(),t[4].setComponents(n-a,c-l,E-f,v-g).normalize(),t[5].setComponents(n+a,c+l,E+f,v+g).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,o=0;6>o;o++){var a=t[o].distanceToPoint(r);if(i>a)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,o=0;6>o;o++){var a=i[o];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var n=a.distanceToPoint(e),s=a.distanceToPoint(t);if(0>n&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){var a=e.subVectors(o,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),i=t||new THREE.Vector3;return i.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&r>0||0>r&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,o=t.delta(e),a=this.normal.dot(o);if(0==a)return 0==this.distanceToPoint(t.start)?i.copy(t.start):void 0;var n=-(t.start.dot(this.normal)+this.constant)/a;return 0>n||n>1?void 0:i.copy(o).multiplyScalar(n).add(t.start)}}(),coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){i=i||(new THREE.Matrix3).getNormalMatrix(r);var o=e.copy(this.normal).applyMatrix3(i),a=this.coplanarPoint(t);return a.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),r=0,i;return function(){for(var o=0;36>o;o++)8==o||13==o||18==o||23==o?t[o]="-":14==o?t[o]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),i=15&r,r>>=4,t[o]=e[19==o?3&i|8:i]);return t.join("")}}(),clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,o){return i+(e-t)*(o-i)/(r-t)},smoothstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()},THREE.Spline=function(e){function t(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t}this.points=e;var r=[],i={x:0,y:0,z:0},o,a,n,s,h,l,c,u,p;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return o=(this.points.length-1)*e,a=Math.floor(o),n=o-a,r[0]=0===a?a:a-1,r[1]=a,r[2]=a>this.points.length-2?this.points.length-1:a+1,r[3]=a>this.points.length-3?this.points.length-1:a+2,l=this.points[r[0]],c=this.points[r[1]],u=this.points[r[2]],p=this.points[r[3]],s=n*n,h=n*s,i.x=t(l.x,c.x,u.x,p.x,n,s,h),i.y=t(l.y,c.y,u.y,p.y,n,s,h),i.z=t(l.z,c.z,u.z,p.z,n,s,h),i},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,o,a=0,n=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,h.copy(this.points[0]),t=1;i>t;t++)r=t/i,o=this.getPoint(r),l.copy(o),u+=l.distanceTo(h),h.copy(o),a=(this.points.length-1)*r,n=Math.floor(a),n!=s&&(c[n]=u,s=n);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,o,a,n,s,h,l,c=[],u=new THREE.Vector3,p=this.getLength();for(c.push(u.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(s=p.chunks[t]-p.chunks[t-1],h=Math.ceil(e*s/p.total),o=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;h-1>r;r++)i=o+r*(1/h)*(a-o),l=this.getPoint(i),c.push(u.copy(l).clone());
c.push(u.copy(this.points[t]).clone())}this.points=c}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=o||new THREE.Vector3;a.subVectors(i,r),e.subVectors(t,r),a.cross(e);var n=a.lengthSq();return n>0?a.multiplyScalar(1/Math.sqrt(n)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a,n,s){e.subVectors(n,o),t.subVectors(a,o),r.subVectors(i,o);var h=e.dot(e),l=e.dot(t),c=e.dot(r),u=t.dot(t),p=t.dot(r),f=h*u-l*l,E=s||new THREE.Vector3;if(0==f)return E.set(-2,-1,-1);var d=1/f,m=(u*c-l*p)*d,g=(h*p-l*c)*d;return E.set(1-m-g,g,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=THREE.Triangle.barycoordFromPoint(t,r,i,o,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,i=r[e].indexOf(t);-1!==i&&r[e].splice(i,1)}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;for(var i=0,o=r.length;o>i;i++)r[i].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,o){this.ray=new e.Ray(t,r),this.near=i||0,this.far=o||1/0};var t=new e.Sphere,r=new e.Ray,i=new e.Plane,o=new e.Vector3,a=new e.Vector3,n=new e.Matrix4,s=function(e,t){return e.distance-t.distance},h=new e.Vector3,l=new e.Vector3,c=new e.Vector3,u=function(i,o,s){if(i instanceof e.Particle){a.getPositionFromMatrix(i.matrixWorld);var p=o.ray.distanceToPoint(a);if(p>i.scale.x)return s;s.push({distance:p,point:i.position,face:null,object:i})}else if(i instanceof e.LOD){a.getPositionFromMatrix(i.matrixWorld);var p=o.ray.origin.distanceTo(a);u(i.getObjectForDistance(p),o,s)}else if(i instanceof e.Mesh){var f=i.geometry;if(null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(i.matrixWorld),o.ray.isIntersectionSphere(t)===!1)return s;if(n.getInverse(i.matrixWorld),r.copy(o.ray).applyMatrix4(n),null!==f.boundingBox&&r.isIntersectionBox(f.boundingBox)===!1)return s;var E=f.vertices;if(f instanceof e.BufferGeometry){var d=i.material;if(void 0===d)return s;if(f.dynamic===!1)return s;var m,g,v,T=o.precision;if(void 0!==f.attributes.index)for(var y=f.offsets,R=f.attributes.index.array,x=f.attributes.position.array,H=f.offsets.length,_=f.attributes.index.array.length/3,b=0;H>b;++b)for(var w=y[b].start,M=y[b].count,S=y[b].index,A=w,C=w+M;C>A;A+=3){m=S+R[A],g=S+R[A+1],v=S+R[A+2],h.set(x[3*m],x[3*m+1],x[3*m+2]),l.set(x[3*g],x[3*g+1],x[3*g+2]),c.set(x[3*v],x[3*v+1],x[3*v+2]);var P=r.intersectTriangle(h,l,c,d.side!==e.DoubleSide);if(null!==P){P.applyMatrix4(i.matrixWorld);var p=o.ray.origin.distanceTo(P);T>p||p<o.near||p>o.far||s.push({distance:p,point:P,face:null,faceIndex:null,object:i})}}else for(var y=f.offsets,x=f.attributes.position.array,H=f.offsets.length,_=f.attributes.position.array.length,A=0;_>A;A+=3){m=A,g=A+1,v=A+2,h.set(x[3*m],x[3*m+1],x[3*m+2]),l.set(x[3*g],x[3*g+1],x[3*g+2]),c.set(x[3*v],x[3*v+1],x[3*v+2]);var P=r.intersectTriangle(h,l,c,d.side!==e.DoubleSide);if(null!==P){P.applyMatrix4(i.matrixWorld);var p=o.ray.origin.distanceTo(P);T>p||p<o.near||p>o.far||s.push({distance:p,point:P,face:null,faceIndex:null,object:i})}}}else if(f instanceof e.Geometry)for(var L=i.material instanceof e.MeshFaceMaterial,D=L===!0?i.material.materials:null,m,g,v,F,T=o.precision,V=0,_=f.faces.length;_>V;V++){var U=f.faces[V],d=L===!0?D[U.materialIndex]:i.material;if(void 0!==d){m=E[U.a],g=E[U.b],v=E[U.c];var P=r.intersectTriangle(m,g,v,d.side!==e.DoubleSide);if(null!==P){P.applyMatrix4(i.matrixWorld);var p=o.ray.origin.distanceTo(P);T>p||p<o.near||p>o.far||s.push({distance:p,point:P,face:U,faceIndex:V,object:i})}}}}else if(i instanceof e.Line){var T=o.linePrecision,z=T*T,f=i.geometry;if(null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(i.matrixWorld),o.ray.isIntersectionSphere(t)===!1)return s;n.getInverse(i.matrixWorld),r.copy(o.ray).applyMatrix4(n);for(var E=f.vertices,B=E.length,N=new e.Vector3,O=new e.Vector3,I=i.type===e.LineStrip?1:2,A=0;B-1>A;A+=I){var k=r.distanceSqToSegment(E[A],E[A+1],O,N);if(!(k>z)){var p=r.origin.distanceTo(O);p<o.near||p>o.far||s.push({distance:p,point:N.clone().applyMatrix4(i.matrixWorld),face:null,faceIndex:null,object:i})}}}},p=function(e,t,r){for(var i=e.getDescendants(),o=0,a=i.length;a>o;o++)u(i[o],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return t===!0&&p(e,this,r),u(e,this,r),r.sort(s),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,o=e.length;o>i;i++)u(e[i],this,r),t===!0&&p(e[i],this,r);return r.sort(s),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this.rotation._quaternion=this.quaternion,this.quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var e=new THREE.Matrix4;return function(t){this.matrix.multiplyMatrices(t,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),e.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(e)}}(),setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var o=this.children[r];if(o.id===e)return o;if(t===!0&&(o=o.getObjectById(e,t),void 0!==o))return o}return void 0},getObjectByName:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var o=this.children[r];if(o.name===e)return o;if(t===!0&&(o=o.getObjectByName(e,t),void 0!==o))return o}return void 0},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;r>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(var r=0;r<this.children.length;r++){var i=this.children[r];e.add(i.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(h===c){var e=new THREE.RenderableObject;return l.push(e),c++,h++,e}return l[h++]}function t(){if(p===E){var e=new THREE.RenderableVertex;return f.push(e),E++,p++,e}return f[p++]}function r(){if(m===v){var e=new THREE.RenderableFace3;return g.push(e),v++,m++,e}return g[m++]}function i(){if(y===x){var e=new THREE.RenderableLine;return R.push(e),x++,y++,e}return R[y++]}function o(){if(_===w){var e=new THREE.RenderableParticle;return b.push(e),w++,_++,e}return b[_++]}function a(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function n(e,t){var r=0,i=1,o=e.z+e.w,a=t.z+t.w,n=-e.z+e.w,s=-t.z+t.w;return o>=0&&a>=0&&n>=0&&s>=0?!0:0>o&&0>a||0>n&&0>s?!1:(0>o?r=Math.max(r,o/(o-a)):0>a&&(i=Math.min(i,o/(o-a))),0>n?r=Math.max(r,n/(n-s)):0>s&&(i=Math.min(i,n/(n-s))),r>i?!1:(e.lerp(t,r),t.lerp(e,1-i),!0))}var s,h,l=[],c=0,u,p,f=[],E=0,d,m,g=[],v=0,T,y,R=[],x=0,H,_,b=[],w=0,M={objects:[],sprites:[],lights:[],elements:[]},S=new THREE.Vector3,A=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),P=new THREE.Box3,L=new Array(3),D=new Array(4),F=new THREE.Matrix4,V=new THREE.Matrix4,U,z=new THREE.Matrix4,B=new THREE.Matrix3,N=new THREE.Matrix3,O=new THREE.Vector3,I=new THREE.Frustum,k=new THREE.Vector4,G=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(V)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),V.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(V)},this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var j=function(t){return s=e(),s.id=t.id,s.object=t,null!==t.renderDepth?s.z=t.renderDepth:(S.getPositionFromMatrix(t.matrixWorld),S.applyProjection(V),s.z=S.z),s},W=function(e){if(e.visible!==!1){e instanceof THREE.Light?M.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(e.frustumCulled===!1||I.intersectsObject(e)===!0)&&M.objects.push(j(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&M.sprites.push(j(e));for(var t=0,r=e.children.length;r>t;t++)W(e.children[t])}},X=function(e,t){h=0,M.objects.length=0,M.sprites.length=0,M.lights.length=0,W(e),t===!0&&M.objects.sort(a)};this.projectScene=function(e,s,h,l){var c=!1,E,g,v,R,x,b,w,S,D,j,W,Y,q,K,Q,Z,J,et,tt,rt,it,ot,at,nt,st,ht;for(m=0,y=0,_=0,M.elements.length=0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),F.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),V.multiplyMatrices(s.projectionMatrix,F),N.getNormalMatrix(F),I.setFromMatrix(V),X(e,h),E=0,g=M.objects.length;g>E;E++)if(q=M.objects[E].object,U=q.matrixWorld,p=0,q instanceof THREE.Mesh){for(K=q.geometry,Q=K.vertices,Z=K.faces,tt=K.faceVertexUvs,B.getNormalMatrix(U),st=q.material instanceof THREE.MeshFaceMaterial,ht=st===!0?q.material:null,v=0,R=Q.length;R>v;v++){u=t(),u.positionWorld.copy(Q[v]).applyMatrix4(U),u.positionScreen.copy(u.positionWorld).applyMatrix4(V);var lt=1/u.positionScreen.w;u.positionScreen.x*=lt,u.positionScreen.y*=lt,u.positionScreen.z*=lt,u.visible=!(u.positionScreen.x<-1||u.positionScreen.x>1||u.positionScreen.y<-1||u.positionScreen.y>1||u.positionScreen.z<-1||u.positionScreen.z>1)}for(x=0,b=Z.length;b>x;x++){J=Z[x];var ct=st===!0?ht.materials[J.materialIndex]:q.material;if(void 0!==ct){var ut=ct.side;if(it=f[J.a],ot=f[J.b],at=f[J.c],L[0]=it.positionScreen,L[1]=ot.positionScreen,L[2]=at.positionScreen,(it.visible===!0||ot.visible===!0||at.visible===!0||C.isIntersectionBox(P.setFromPoints(L)))&&(c=(at.positionScreen.x-it.positionScreen.x)*(ot.positionScreen.y-it.positionScreen.y)-(at.positionScreen.y-it.positionScreen.y)*(ot.positionScreen.x-it.positionScreen.x)<0,ut===THREE.DoubleSide||c===(ut===THREE.FrontSide))){for(d=r(),d.id=q.id,d.v1.copy(it),d.v2.copy(ot),d.v3.copy(at),d.normalModel.copy(J.normal),c!==!1||ut!==THREE.BackSide&&ut!==THREE.DoubleSide||d.normalModel.negate(),d.normalModel.applyMatrix3(B).normalize(),d.normalModelView.copy(d.normalModel).applyMatrix3(N),d.centroidModel.copy(J.centroid).applyMatrix4(U),et=J.vertexNormals,w=0,S=Math.min(et.length,3);S>w;w++){var pt=d.vertexNormalsModel[w];pt.copy(et[w]),c!==!1||ut!==THREE.BackSide&&ut!==THREE.DoubleSide||pt.negate(),pt.applyMatrix3(B).normalize();var ft=d.vertexNormalsModelView[w];ft.copy(pt).applyMatrix3(N)}for(d.vertexNormalsLength=et.length,D=0,j=Math.min(tt.length,3);j>D;D++)if(rt=tt[D][x],void 0!==rt)for(W=0,Y=rt.length;Y>W;W++)d.uvs[D][W]=rt[W];d.color=J.color,d.material=ct,O.copy(d.centroidModel).applyProjection(V),d.z=O.z,M.elements.push(d)}}}}else if(q instanceof THREE.Line){z.multiplyMatrices(V,U),Q=q.geometry.vertices,it=t(),it.positionScreen.copy(Q[0]).applyMatrix4(z);var Et=q.type===THREE.LinePieces?2:1;for(v=1,R=Q.length;R>v;v++)it=t(),it.positionScreen.copy(Q[v]).applyMatrix4(z),(v+1)%Et>0||(ot=f[p-2],k.copy(it.positionScreen),G.copy(ot.positionScreen),n(k,G)===!0&&(k.multiplyScalar(1/k.w),G.multiplyScalar(1/G.w),T=i(),T.id=q.id,T.v1.positionScreen.copy(k),T.v2.positionScreen.copy(G),T.z=Math.max(k.z,G.z),T.material=q.material,q.material.vertexColors===THREE.VertexColors&&(T.vertexColors[0].copy(q.geometry.colors[v]),T.vertexColors[1].copy(q.geometry.colors[v-1])),M.elements.push(T)))}for(E=0,g=M.sprites.length;g>E;E++)if(q=M.sprites[E].object,U=q.matrixWorld,q instanceof THREE.Particle){A.set(U.elements[12],U.elements[13],U.elements[14],1),A.applyMatrix4(V);var lt=1/A.w;A.z*=lt,A.z>0&&A.z<1&&(H=o(),H.id=q.id,H.x=A.x*lt,H.y=A.y*lt,H.z=A.z,H.object=q,H.rotation=q.rotation.z,H.scale.x=q.scale.x*Math.abs(H.x-(A.x+s.projectionMatrix.elements[0])/(A.w+s.projectionMatrix.elements[12])),H.scale.y=q.scale.y*Math.abs(H.y-(A.y+s.projectionMatrix.elements[5])/(A.w+s.projectionMatrix.elements[13])),H.material=q.material,M.elements.push(H))}return l===!0&&M.elements.sort(a),M}},THREE.Face3=function(e,t,r,i,o,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,o,a,n){return new THREE.Face3(e,t,r,o,a,n)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;i>r;r++){var o=this.vertices[r];o.applyMatrix4(e)}for(var r=0,i=this.faces.length;i>r;r++){var a=this.faces[r];a.normal.applyMatrix3(t).normalize();for(var n=0,s=a.vertexNormals.length;s>n;n++)a.vertexNormals[n].applyMatrix3(t).normalize();a.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],r.centroid.set(0,0,0),r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;i>r;r++){var o=this.faces[r],a=this.vertices[o.a],n=this.vertices[o.b],s=this.vertices[o.c];e.subVectors(s,n),t.subVectors(a,n),e.cross(t),e.normalize(),o.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i,o,a,n;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),n=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)n[t]=new THREE.Vector3;for(i=0,o=this.faces.length;o>i;i++)a=this.faces[i],a.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(n=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)n[t].set(0,0,0);if(e){var s,h,l,c,u=new THREE.Vector3,p=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3;for(i=0,o=this.faces.length;o>i;i++)a=this.faces[i],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],u.subVectors(l,h),p.subVectors(s,h),u.cross(p),n[a.a].add(u),n[a.b].add(u),n[a.c].add(u)}else for(i=0,o=this.faces.length;o>i;i++)a=this.faces[i],n[a.a].add(a.normal),n[a.b].add(a.normal),n[a.c].add(a.normal);for(t=0,r=this.vertices.length;r>t;t++)n[t].normalize();for(i=0,o=this.faces.length;o>i;i++)a=this.faces[i],a.vertexNormals[0].copy(n[a.a]),a.vertexNormals[1].copy(n[a.b]),a.vertexNormals[2].copy(n[a.c])},computeMorphNormals:function(){var e,t,r,i,o;for(r=0,i=this.faces.length;i>r;r++)for(o=this.faces[r],o.__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),e=0,t=o.vertexNormals.length;t>e;e++)o.__originalVertexNormals[e]?o.__originalVertexNormals[e].copy(o.vertexNormals[e]):o.__originalVertexNormals[e]=o.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var n=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,h,l;for(r=0,i=this.faces.length;i>r;r++)o=this.faces[r],h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(h),s.push(l)}var c=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var h,l;for(r=0,i=this.faces.length;i>r;r++)o=this.faces[r],h=c.faceNormals[r],l=c.vertexNormals[r],h.copy(o.normal),l.a.copy(o.vertexNormals[0]),l.b.copy(o.vertexNormals[1]),l.c.copy(o.vertexNormals[2])}for(r=0,i=this.faces.length;i>r;r++)o=this.faces[r],o.normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,o,a,n){c=e.vertices[t],u=e.vertices[r],p=e.vertices[i],f=l[o],E=l[a],d=l[n],m=u.x-c.x,g=p.x-c.x,v=u.y-c.y,T=p.y-c.y,y=u.z-c.z,R=p.z-c.z,x=E.x-f.x,H=d.x-f.x,_=E.y-f.y,b=d.y-f.y,w=1/(x*b-H*_),P.set((b*m-_*g)*w,(b*v-_*T)*w,(b*y-_*R)*w),L.set((x*g-H*m)*w,(x*T-H*v)*w,(x*R-H*y)*w),A[t].add(P),A[r].add(P),A[i].add(P),C[t].add(L),C[r].add(L),C[i].add(L)}var t,r,i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,b,w,M,S,A=[],C=[],P=new THREE.Vector3,L=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector3,V=new THREE.Vector3,U;for(i=0,o=this.vertices.length;o>i;i++)A[i]=new THREE.Vector3,C[i]=new THREE.Vector3;for(t=0,r=this.faces.length;r>t;t++)h=this.faces[t],l=this.faceVertexUvs[0][t],e(this,h.a,h.b,h.c,0,1,2);var z=["a","b","c","d"];for(t=0,r=this.faces.length;r>t;t++)for(h=this.faces[t],a=0;a<Math.min(h.vertexNormals.length,3);a++)V.copy(h.vertexNormals[a]),s=h[z[a]],M=A[s],D.copy(M),D.sub(V.multiplyScalar(V.dot(M))).normalize(),F.crossVectors(h.vertexNormals[a],M),S=F.dot(C[s]),U=0>S?-1:1,h.vertexTangents[a]=new THREE.Vector4(D.x,D.y,D.z,U);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e={},t=[],r=[],i,o,a=4,n=Math.pow(10,a),s,h,l,c,u,p,f,E;for(this.__tmpVertices=void 0,s=0,h=this.vertices.length;h>s;s++)i=this.vertices[s],o=Math.round(i.x*n)+"_"+Math.round(i.y*n)+"_"+Math.round(i.z*n),void 0===e[o]?(e[o]=s,t.push(this.vertices[s]),r[s]=t.length-1):r[s]=r[e[o]];var d=[];for(s=0,h=this.faces.length;h>s;s++){l=this.faces[s],l.a=r[l.a],l.b=r[l.b],l.c=r[l.c],c=[l.a,l.b,l.c];for(var m=-1,g=0;3>g;g++)if(c[g]==c[(g+1)%3]){m=g,d.push(s);break}}for(s=d.length-1;s>=0;s--)for(this.faces.splice(s,1),p=0,f=this.faceVertexUvs.length;f>p;p++)this.faceVertexUvs[p].splice(s,1);var v=this.vertices.length-t.length;return this.vertices=t,v},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(var o=this.faces,r=0,i=o.length;i>r;r++)e.faces.push(o[r].clone());for(var a=this.faceVertexUvs[0],r=0,i=a.length;i>r;r++){for(var n=a[r],s=[],h=0,l=n.length;l>h;h++)s.push(new THREE.Vector2(n[h].x,n[h].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,r;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(r=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==r){var i=(new THREE.Matrix3).getNormalMatrix(e);i.multiplyVector3Array(r),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox,r,i,o;e.length>=3&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var a=3,n=e.length;n>a;a+=3)r=e[a],i=e[a+1],o=e[a+2],r<t.min.x?t.min.x=r:r>t.max.x&&(t.max.x=r),i<t.min.y?t.min.y=i:i>t.max.y&&(t.max.y=i),o<t.min.z?t.min.z=o:o>t.max.z&&(t.max.z=o)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){for(var i=this.boundingSphere.center,o=0,a=r.length;a>o;o+=3)t.set(r[o],r[o+1],r[o+2]),e.addPoint(t);e.center(i);for(var n=0,o=0,a=r.length;a>o;o+=3)t.set(r[o],r[o+1],r[o+2]),n=Math.max(n,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(n)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,o=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(o)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var a=this.attributes.position.array,n=this.attributes.normal.array,s,h,l,c,u,p,f=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets;for(r=0,i=T.length;i>r;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(e=y,t=y+R;t>e;e+=3)s=x+v[e],h=x+v[e+1],l=x+v[e+2],c=a[3*s],u=a[3*s+1],p=a[3*s+2],f.set(c,u,p),c=a[3*h],u=a[3*h+1],p=a[3*h+2],E.set(c,u,p),c=a[3*l],u=a[3*l+1],p=a[3*l+2],d.set(c,u,p),m.subVectors(d,E),g.subVectors(f,E),m.cross(g),n[3*s]+=m.x,n[3*s+1]+=m.y,n[3*s+2]+=m.z,n[3*h]+=m.x,n[3*h+1]+=m.y,n[3*h+2]+=m.z,n[3*l]+=m.x,n[3*l+1]+=m.y,n[3*l+2]+=m.z}}else for(e=0,t=a.length;t>e;e+=9)c=a[e],u=a[e+1],p=a[e+2],f.set(c,u,p),c=a[e+3],u=a[e+4],p=a[e+5],E.set(c,u,p),c=a[e+6],u=a[e+7],p=a[e+8],d.set(c,u,p),m.subVectors(d,E),g.subVectors(f,E),m.cross(g),n[e]=m.x,n[e+1]=m.y,n[e+2]=m.z,n[e+3]=m.x,n[e+4]=m.y,n[e+5]=m.z,n[e+6]=m.x,n[e+7]=m.y,n[e+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,r,i,o,a=0,n=e.length;n>a;a+=3)t=e[a],r=e[a+1],i=e[a+2],o=1/Math.sqrt(t*t+r*r+i*i),e[a]*=o,e[a+1]*=o,e[a+2]*=o},computeTangents:function(){function e(e,t,r){p=i[3*e],f=i[3*e+1],E=i[3*e+2],d=i[3*t],m=i[3*t+1],g=i[3*t+2],v=i[3*r],T=i[3*r+1],y=i[3*r+2],R=a[2*e],x=a[2*e+1],H=a[2*t],_=a[2*t+1],b=a[2*r],w=a[2*r+1],M=d-p,S=v-p,A=m-f,C=T-f,P=g-E,L=y-E,D=H-R,F=b-R,V=_-x,U=w-x,z=1/(D*U-F*V),B.set((U*M-V*S)*z,(U*A-V*C)*z,(U*P-V*L)*z),N.set((D*S-F*M)*z,(D*C-F*A)*z,(D*L-F*P)*z),l[e].add(B),l[t].add(B),l[r].add(B),c[e].add(N),c[t].add(N),c[r].add(N)}function t(e){et.x=o[3*e],et.y=o[3*e+1],et.z=o[3*e+2],tt.copy(et),it=l[e],Z.copy(it),Z.sub(et.multiplyScalar(et.dot(it))).normalize(),J.crossVectors(tt,it),ot=J.dot(c[e]),rt=0>ot?-1:1,h[4*e]=Z.x,h[4*e+1]=Z.y,h[4*e+2]=Z.z,h[4*e+3]=rt}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var r=this.attributes.index.array,i=this.attributes.position.array,o=this.attributes.normal.array,a=this.attributes.uv.array,n=i.length/3;if(void 0===this.attributes.tangent){var s=4*n;this.attributes.tangent={itemSize:4,array:new Float32Array(s)}}for(var h=this.attributes.tangent.array,l=[],c=[],u=0;n>u;u++)l[u]=new THREE.Vector3,c[u]=new THREE.Vector3;
var p,f,E,d,m,g,v,T,y,R,x,H,_,b,w,M,S,A,C,P,L,D,F,V,U,z,B=new THREE.Vector3,N=new THREE.Vector3,O,I,k,G,j,W,X,Y=this.offsets;for(k=0,G=Y.length;G>k;++k){var q=Y[k].start,K=Y[k].count,Q=Y[k].index;for(O=q,I=q+K;I>O;O+=3)j=Q+r[O],W=Q+r[O+1],X=Q+r[O+2],e(j,W,X)}var Z=new THREE.Vector3,J=new THREE.Vector3,et=new THREE.Vector3,tt=new THREE.Vector3,rt,it,ot;for(k=0,G=Y.length;G>k;++k){var q=Y[k].start,K=Y[k].count,Q=Y[k].index;for(O=q,I=q+K;I>O;O+=3)j=Q+r[O],W=Q+r[O+1],X=Q+r[O+2],t(j),t(W),t(X)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e.projectionMatrixInverse.copy(this.projectionMatrixInverse),e},THREE.OrthographicCamera=function(e,t,r,i,o,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==o?o:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,o,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=o,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,o=e*t,a=Math.abs(o-i),n=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,r,i,o){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==o?o:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++){var i=e[t];if(i instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function i(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function o(e,t){var o=new Image;o.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=i(this.width),o=i(this.height);e.image.width=t,e.image.height=o,e.image.getContext("2d").drawImage(this,0,0,t,o)}e.needsUpdate=!0},o.crossOrigin=s.crossOrigin,o.src=t}function a(e,r,i,a,n,s,h){var l=/\.dds$/i.test(i),c=t+"/"+i;if(l){var u=THREE.ImageUtils.loadCompressedTexture(c);e[r]=u}else{var u=document.createElement("canvas");e[r]=new THREE.Texture(u)}if(e[r].sourceFile=i,a&&(e[r].repeat.set(a[0],a[1]),1!==a[0]&&(e[r].wrapS=THREE.RepeatWrapping),1!==a[1]&&(e[r].wrapT=THREE.RepeatWrapping)),n&&e[r].offset.set(n[0],n[1]),s){var p={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==p[s[0]]&&(e[r].wrapS=p[s[0]]),void 0!==p[s[1]]&&(e[r].wrapT=p[s[1]])}h&&(e[r].anisotropy=h),l||o(e[r],c)}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,h="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var c=e.shading.toLowerCase();"phong"===c?h="MeshPhongMaterial":"basic"===c&&(h="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(l.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(l.transparent=e.transparent),void 0!==e.depthTest&&(l.depthTest=e.depthTest),void 0!==e.depthWrite&&(l.depthWrite=e.depthWrite),void 0!==e.visible&&(l.visible=e.visible),void 0!==e.flipSided&&(l.side=THREE.BackSide),void 0!==e.doubleSided&&(l.side=THREE.DoubleSide),void 0!==e.wireframe&&(l.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?l.vertexColors=THREE.FaceColors:e.vertexColors&&(l.vertexColors=THREE.VertexColors)),e.colorDiffuse?l.color=n(e.colorDiffuse):e.DbgColor&&(l.color=e.DbgColor),e.colorSpecular&&(l.specular=n(e.colorSpecular)),e.colorAmbient&&(l.ambient=n(e.colorAmbient)),e.transparency&&(l.opacity=e.transparency),e.specularCoef&&(l.shininess=e.specularCoef),e.mapDiffuse&&t&&a(l,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&a(l,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&a(l,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&a(l,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&a(l,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(l.bumpScale=e.mapBumpScale),e.mapNormal){var u=THREE.ShaderLib.normalmap,p=THREE.UniformsUtils.clone(u.uniforms);p.tNormal.value=l.normalMap,e.mapNormalFactor&&p.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),l.map&&(p.tDiffuse.value=l.map,p.enableDiffuse.value=!0),l.specularMap&&(p.tSpecular.value=l.specularMap,p.enableSpecular.value=!0),l.lightMap&&(p.tAO.value=l.lightMap,p.enableAO.value=!0),p.uDiffuseColor.value.setHex(l.color),p.uSpecularColor.value.setHex(l.specular),p.uAmbientColor.value.setHex(l.ambient),p.uShininess.value=l.shininess,void 0!==l.opacity&&(p.uOpacity.value=l.opacity);var f={fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:p,lights:!0,fog:!0},E=new THREE.ShaderMaterial(f);l.transparent&&(E.transparent=!0)}else var E=new THREE[h](l);return void 0!==e.DbgName&&(E.name=e.DbgName),E}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var o=this,a=new XMLHttpRequest;void 0!==t&&a.addEventListener("load",function(r){t(r.target.responseText),o.manager.itemEnd(e)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.open("GET",e,!0),a.send(null),o.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var o=this,a=document.createElement("img");void 0!==t&&a.addEventListener("load",function(r){o.manager.itemEnd(e),t(this)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.src=e,o.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){var i=this;r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,o){var a=new XMLHttpRequest,n=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText),h=e.parse(s,i);r(h.geometry,h.materials)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+a.status+"]");else a.readyState===a.LOADING?o&&(0===n&&(n=a.getResponseHeader("Content-Length")),o({total:n,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==o&&(n=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){function r(t){function r(e,t){return e&1<<t}var i,o,a,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,b,w,M,S,A,C,P,L=e.faces,D=e.vertices,F=e.normals,V=e.colors,U=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&U++;for(i=0;U>i;i++)n.faceVertexUvs[i]=[]}for(s=0,h=D.length;h>s;)R=new THREE.Vector3,R.x=D[s++]*t,R.y=D[s++]*t,R.z=D[s++]*t,n.vertices.push(R);for(s=0,h=L.length;h>s;)if(f=L[s++],E=r(f,0),d=r(f,1),m=r(f,3),g=r(f,4),v=r(f,5),T=r(f,6),y=r(f,7),E){if(H=new THREE.Face3,H.a=L[s],H.b=L[s+1],H.c=L[s+3],_=new THREE.Face3,_.a=L[s+1],_.b=L[s+2],_.c=L[s+3],s+=4,d&&(p=L[s++],H.materialIndex=p,_.materialIndex=p),a=n.faces.length,m)for(i=0;U>i;i++)for(S=e.uvs[i],n.faceVertexUvs[i][a]=[],n.faceVertexUvs[i][a+1]=[],o=0;4>o;o++)u=L[s++],C=S[2*u],P=S[2*u+1],A=new THREE.Vector2(C,P),2!==o&&n.faceVertexUvs[i][a].push(A),0!==o&&n.faceVertexUvs[i][a+1].push(A);if(g&&(c=3*L[s++],H.normal.set(F[c++],F[c++],F[c]),_.normal.copy(H.normal)),v)for(i=0;4>i;i++)c=3*L[s++],M=new THREE.Vector3(F[c++],F[c++],F[c]),2!==i&&H.vertexNormals.push(M),0!==i&&_.vertexNormals.push(M);if(T&&(l=L[s++],w=V[l],H.color.setHex(w),_.color.setHex(w)),y)for(i=0;4>i;i++)l=L[s++],w=V[l],2!==i&&H.vertexColors.push(new THREE.Color(w)),0!==i&&_.vertexColors.push(new THREE.Color(w));n.faces.push(H),n.faces.push(_)}else{if(x=new THREE.Face3,x.a=L[s++],x.b=L[s++],x.c=L[s++],d&&(p=L[s++],x.materialIndex=p),a=n.faces.length,m)for(i=0;U>i;i++)for(S=e.uvs[i],n.faceVertexUvs[i][a]=[],o=0;3>o;o++)u=L[s++],C=S[2*u],P=S[2*u+1],A=new THREE.Vector2(C,P),n.faceVertexUvs[i][a].push(A);if(g&&(c=3*L[s++],x.normal.set(F[c++],F[c++],F[c])),v)for(i=0;3>i;i++)c=3*L[s++],M=new THREE.Vector3(F[c++],F[c++],F[c]),x.vertexNormals.push(M);if(T&&(l=L[s++],x.color.setHex(V[l])),y)for(i=0;3>i;i++)l=L[s++],x.vertexColors.push(new THREE.Color(V[l]));n.faces.push(x)}}function i(){var t,r,i,o,a,s,h,l,c,u;if(e.skinWeights)for(t=0,r=e.skinWeights.length;r>t;t+=2)i=e.skinWeights[t],o=e.skinWeights[t+1],a=0,s=0,n.skinWeights.push(new THREE.Vector4(i,o,a,s));if(e.skinIndices)for(t=0,r=e.skinIndices.length;r>t;t+=2)h=e.skinIndices[t],l=e.skinIndices[t+1],c=0,u=0,n.skinIndices.push(new THREE.Vector4(h,l,c,u));n.bones=e.bones,n.animation=e.animation}function o(t){if(void 0!==e.morphTargets){var r,i,o,a,s,h;for(r=0,i=e.morphTargets.length;i>r;r++)for(n.morphTargets[r]={},n.morphTargets[r].name=e.morphTargets[r].name,n.morphTargets[r].vertices=[],s=n.morphTargets[r].vertices,h=e.morphTargets[r].vertices,o=0,a=h.length;a>o;o+=3){var l=new THREE.Vector3;l.x=h[o]*t,l.y=h[o+1]*t,l.z=h[o+2]*t,s.push(l)}}if(void 0!==e.morphColors){var r,i,c,u,p,f,E;for(r=0,i=e.morphColors.length;i>r;r++)for(n.morphColors[r]={},n.morphColors[r].name=e.morphColors[r].name,n.morphColors[r].colors=[],p=n.morphColors[r].colors,f=e.morphColors[r].colors,c=0,u=f.length;u>c;c+=3)E=new THREE.Color(16755200),E.setRGB(f[c],f[c+1],f[c+2]),p.push(E)}}var a=this,n=new THREE.Geometry,s=void 0!==e.scale?1/e.scale:1;if(r(s),i(),o(s),n.computeCentroids(),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===e.materials)return{geometry:n};var h=this.initMaterials(e.materials,t);return this.needsTangents(h)&&n.computeTangents(),{geometry:n,materials:h}},THREE.LoadingManager=function(e,t,r){var i=this,o=0,a=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,a),o===a&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes,i=e.offsets,o=e.boundingSphere;for(var a in r){var n=r[a];t.attributes[a]={itemSize:n.itemSize,array:new self[n.type](n.array)}}return void 0!==i&&(t.offsets=JSON.parse(JSON.stringify(i))),void 0!==o&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==o.center?o.center:[0,0,0]),o.radius)),t}},THREE.GeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var r=0,i=e.materials.length;i>r;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials),i=this.parseObject(e.object,t,r);return i},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,o=0,a=e.length;a>o;o++){var n,s=e[o];switch(s.type){case"PlaneGeometry":n=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"CubeGeometry":n=new THREE.CubeGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CylinderGeometry":n=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radiusSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":n=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":n=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":n=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":n=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":n=i.parse(s.data);break;case"Geometry":n=r.parse(s.data).geometry}n.uuid=s.uuid,void 0!==s.name&&(n.name=s.name),t[s.uuid]=n}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,o=e.length;o>i;i++){var a=e[i],n=r.parse(a);n.uuid=a.uuid,void 0!==a.name&&(n.name=a.name),t[a.uuid]=n}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var o;switch(t.type){case"Scene":o=new THREE.Scene;break;case"PerspectiveCamera":o=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":o=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":o=new THREE.AmbientLight(t.color);break;case"DirectionalLight":o=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":o=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":o=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":o=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var a=r[t.geometry],n=i[t.material];void 0===a&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===n&&console.error("THREE.ObjectLoader: Undefined material "+t.material),o=new THREE.Mesh(a,n);break;default:o=new THREE.Object3D}if(o.uuid=t.uuid,void 0!==t.name&&(o.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(o.position,o.quaternion,o.scale)):(void 0!==t.position&&o.position.fromArray(t.position),void 0!==t.rotation&&o.rotation.fromArray(t.rotation),void 0!==t.scale&&o.scale.fromArray(t.scale)),void 0!==t.visible&&(o.visible=t.visible),void 0!==t.userData&&(o.userData=t.userData),void 0!==t.children)for(var s in t.children)o.add(this.parseObject(t.children[s],r,i));return o}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(r){o.parse(JSON.parse(r),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,r){function i(e,t){return"relativeToHTML"==t?e:d+"/"+e}function o(){a(C.scene,L.objects)}function a(e,t){var r,o,n,s,h,c;for(var u in t){var p=C.objects[u],f=t[u];if(void 0===p){if(f.type&&f.type in E.hierarchyHandlers){if(void 0===f.loading){var d={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},T={};for(var y in f)y in d||(T[y]=f[y]);g=C.materials[f.material],f.loading=!0;var R=E.hierarchyHandlers[f.type].loaderObject;R.options?R.load(i(f.url,L.urlBaseType),l(u,e,g,f)):R.load(i(f.url,L.urlBaseType),l(u,e,g,f),T)}}else if(void 0!==f.geometry){if(m=C.geometries[f.geometry]){var x=!1;if(g=C.materials[f.material],x=g instanceof THREE.ShaderMaterial,n=f.position,s=f.rotation,h=f.scale,r=f.matrix,c=f.quaternion,f.material||(g=new THREE.MeshFaceMaterial(C.face_materials[f.geometry])),g instanceof THREE.MeshFaceMaterial&&0===g.materials.length&&(g=new THREE.MeshFaceMaterial(C.face_materials[f.geometry])),g instanceof THREE.MeshFaceMaterial)for(var w=0;w<g.materials.length;w++)x=x||g.materials[w]instanceof THREE.ShaderMaterial;x&&m.computeTangents(),f.skin?p=new THREE.SkinnedMesh(m,g):f.morph?(p=new THREE.MorphAnimMesh(m,g),void 0!==f.duration&&(p.duration=f.duration),void 0!==f.time&&(p.time=f.time),void 0!==f.mirroredLoop&&(p.mirroredLoop=f.mirroredLoop),g.morphNormals&&m.computeMorphNormals()):p=new THREE.Mesh(m,g),p.name=u,r?(p.matrixAutoUpdate=!1,p.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(p.position.fromArray(n),c?p.quaternion.fromArray(c):p.rotation.fromArray(s),p.scale.fromArray(h)),p.visible=f.visible,p.castShadow=f.castShadow,p.receiveShadow=f.receiveShadow,e.add(p),C.objects[u]=p}}else"DirectionalLight"===f.type||"PointLight"===f.type||"AmbientLight"===f.type?(_=void 0!==f.color?f.color:16777215,b=void 0!==f.intensity?f.intensity:1,"DirectionalLight"===f.type?(n=f.direction,H=new THREE.DirectionalLight(_,b),H.position.fromArray(n),f.target&&(P.push({object:H,targetName:f.target}),H.target=null)):"PointLight"===f.type?(n=f.position,o=f.distance,H=new THREE.PointLight(_,b,o),H.position.fromArray(n)):"AmbientLight"===f.type&&(H=new THREE.AmbientLight(_)),e.add(H),H.name=u,C.lights[u]=H,C.objects[u]=H):"PerspectiveCamera"===f.type||"OrthographicCamera"===f.type?(n=f.position,s=f.rotation,c=f.quaternion,"PerspectiveCamera"===f.type?v=new THREE.PerspectiveCamera(f.fov,f.aspect,f.near,f.far):"OrthographicCamera"===f.type&&(v=new THREE.OrthographicCamera(f.left,f.right,f.top,f.bottom,f.near,f.far)),v.name=u,v.position.fromArray(n),void 0!==c?v.quaternion.fromArray(c):void 0!==s&&v.rotation.fromArray(s),e.add(v),C.cameras[u]=v,C.objects[u]=v):(n=f.position,s=f.rotation,h=f.scale,c=f.quaternion,p=new THREE.Object3D,p.name=u,p.position.fromArray(n),c?p.quaternion.fromArray(c):p.rotation.fromArray(s),p.scale.fromArray(h),p.visible=void 0!==f.visible?f.visible:!1,e.add(p),C.objects[u]=p,C.empties[u]=p);if(p){if(void 0!==f.userData)for(var M in f.userData){var S=f.userData[M];p.userData[M]=S}if(void 0!==f.groups)for(var w=0;w<f.groups.length;w++){var A=f.groups[w];void 0===C.groups[A]&&(C.groups[A]=[]),C.groups[A].push(u)}}}void 0!==p&&void 0!==f.children&&a(p,f.children)}}function n(e,t,r){C.geometries[r]=e,C.face_materials[r]=t,o()}function s(e,t,r,i,a){var n=a.position,s=a.rotation,h=a.quaternion,l=a.scale;e.position.fromArray(n),h?e.quaternion.fromArray(h):e.rotation.fromArray(s),e.scale.fromArray(l),i&&e.traverse(function(e){e.material=i});var c=void 0!==a.visible?a.visible:!0;e.traverse(function(e){e.visible=c}),r.add(e),e.name=t,C.objects[t]=e,o()}function h(e){return function(t,r){t.name=e,n(t,r,e),w-=1,E.onLoadComplete(),u()}}function l(e,t,r,i){return function(o){var a;a=o.content?o.content:o.dae?o.scene:o,s(a,e,t,r,i),w-=1,E.onLoadComplete(),u()}}function c(e){return function(t,r){t.name=e,C.geometries[e]=t,C.face_materials[e]=r}}function u(){var e={totalModels:S,totalTextures:A,loadedModels:S-w,loadedTextures:A-M};E.callbackProgress(e,C),E.onLoadProgress(),0===w&&0===M&&(p(),t(C))}function p(){for(var e=0;e<P.length;e++){var t=P[e],r=C.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,C.scene.add(t.object.target)),t.object.target.userData.targetInverse=t.object}}function f(e,t){if(t(e),void 0!==e.children)for(var r in e.children)f(e.children[r],t)}var E=this,d=THREE.Loader.prototype.extractUrlBase(r),m,g,v,T,y,R,x,H,_,b,w,M,S,A,C,P=[],L=e;for(var D in this.geometryHandlers){var F=this.geometryHandlers[D].loaderClass;this.geometryHandlers[D].loaderObject=new F}for(var D in this.hierarchyHandlers){var F=this.hierarchyHandlers[D].loaderClass;this.hierarchyHandlers[D].loaderObject=new F}if(w=0,M=0,C={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},L.transform){var V=L.transform.position,U=L.transform.rotation,z=L.transform.scale;V&&C.scene.position.fromArray(V),U&&C.scene.rotation.fromArray(U),z&&C.scene.scale.fromArray(z),(V||U||z)&&(C.scene.updateMatrix(),C.scene.updateMatrixWorld())}var B=function(e){M-=e,u(),E.onLoadComplete()},N=function(e){return function(){B(e)}},O,I;for(O in L.fogs)I=L.fogs[O],"linear"===I.type?T=new THREE.Fog(0,I.near,I.far):"exp2"===I.type&&(T=new THREE.FogExp2(0,I.density)),x=I.color,T.color.setRGB(x[0],x[1],x[2]),C.fogs[O]=T;var k,G;for(k in L.geometries)G=L.geometries[k],G.type in this.geometryHandlers&&(w+=1,E.onLoadStart());for(var j in L.objects)f(L.objects[j],function(e){e.type&&e.type in E.hierarchyHandlers&&(w+=1,E.onLoadStart())});S=w;for(k in L.geometries)if(G=L.geometries[k],"cube"===G.type)m=new THREE.CubeGeometry(G.width,G.height,G.depth,G.widthSegments,G.heightSegments,G.depthSegments),m.name=k,C.geometries[k]=m;else if("plane"===G.type)m=new THREE.PlaneGeometry(G.width,G.height,G.widthSegments,G.heightSegments),m.name=k,C.geometries[k]=m;else if("sphere"===G.type)m=new THREE.SphereGeometry(G.radius,G.widthSegments,G.heightSegments),m.name=k,C.geometries[k]=m;else if("cylinder"===G.type)m=new THREE.CylinderGeometry(G.topRad,G.botRad,G.height,G.radSegs,G.heightSegs),m.name=k,C.geometries[k]=m;else if("torus"===G.type)m=new THREE.TorusGeometry(G.radius,G.tube,G.segmentsR,G.segmentsT),m.name=k,C.geometries[k]=m;else if("icosahedron"===G.type)m=new THREE.IcosahedronGeometry(G.radius,G.subdivisions),m.name=k,C.geometries[k]=m;else if(G.type in this.geometryHandlers){var W={};for(var X in G)"type"!==X&&"url"!==X&&(W[X]=G[X]);var Y=this.geometryHandlers[G.type].loaderObject;Y.load(i(G.url,L.urlBaseType),h(k),W)}else if("embedded"===G.type){var q=L.embeds[G.id],K="";if(q.metadata=L.metadata,q){var Q=this.geometryHandlers.ascii.loaderObject,Z=Q.parse(q,K);c(k)(Z.geometry,Z.materials)}}var J,et;for(J in L.textures)if(et=L.textures[J],et.url instanceof Array){M+=et.url.length;for(var tt=0;tt<et.url.length;tt++)E.onLoadStart()}else M+=1,E.onLoadStart();A=M;for(J in L.textures){if(et=L.textures[J],void 0!==et.mapping&&void 0!==THREE[et.mapping]&&(et.mapping=new THREE[et.mapping]),et.url instanceof Array){for(var rt=et.url.length,it=[],ot=0;rt>ot;ot++)it[ot]=i(et.url[ot],L.urlBaseType);var at=/\.dds$/i.test(it[0]);y=at?THREE.ImageUtils.loadCompressedTextureCube(it,et.mapping,N(rt)):THREE.ImageUtils.loadTextureCube(it,et.mapping,N(rt))}else{var at=/\.dds$/i.test(et.url),nt=i(et.url,L.urlBaseType),st=N(1);if(y=at?THREE.ImageUtils.loadCompressedTexture(nt,et.mapping,st):THREE.ImageUtils.loadTexture(nt,et.mapping,st),void 0!==THREE[et.minFilter]&&(y.minFilter=THREE[et.minFilter]),void 0!==THREE[et.magFilter]&&(y.magFilter=THREE[et.magFilter]),et.anisotropy&&(y.anisotropy=et.anisotropy),et.repeat&&(y.repeat.set(et.repeat[0],et.repeat[1]),1!==et.repeat[0]&&(y.wrapS=THREE.RepeatWrapping),1!==et.repeat[1]&&(y.wrapT=THREE.RepeatWrapping)),et.offset&&y.offset.set(et.offset[0],et.offset[1]),et.wrap){var ht={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==ht[et.wrap[0]]&&(y.wrapS=ht[et.wrap[0]]),void 0!==ht[et.wrap[1]]&&(y.wrapT=ht[et.wrap[1]])}}C.textures[J]=y}var lt,ct,ut;for(lt in L.materials){ct=L.materials[lt];for(ut in ct.parameters)if("envMap"===ut||"map"===ut||"lightMap"===ut||"bumpMap"===ut)ct.parameters[ut]=C.textures[ct.parameters[ut]];
else if("shading"===ut)ct.parameters[ut]="flat"===ct.parameters[ut]?THREE.FlatShading:THREE.SmoothShading;else if("side"===ut)ct.parameters[ut]="double"==ct.parameters[ut]?THREE.DoubleSide:"back"==ct.parameters[ut]?THREE.BackSide:THREE.FrontSide;else if("blending"===ut)ct.parameters[ut]=ct.parameters[ut]in THREE?THREE[ct.parameters[ut]]:THREE.NormalBlending;else if("combine"===ut)ct.parameters[ut]=ct.parameters[ut]in THREE?THREE[ct.parameters[ut]]:THREE.MultiplyOperation;else if("vertexColors"===ut)"face"==ct.parameters[ut]?ct.parameters[ut]=THREE.FaceColors:ct.parameters[ut]&&(ct.parameters[ut]=THREE.VertexColors);else if("wrapRGB"===ut){var pt=ct.parameters[ut];ct.parameters[ut]=new THREE.Vector3(pt[0],pt[1],pt[2])}if(void 0!==ct.parameters.opacity&&ct.parameters.opacity<1&&(ct.parameters.transparent=!0),ct.parameters.normalMap){var ft=THREE.ShaderLib.normalmap,Et=THREE.UniformsUtils.clone(ft.uniforms),dt=ct.parameters.color,mt=ct.parameters.specular,gt=ct.parameters.ambient,vt=ct.parameters.shininess;Et.tNormal.value=C.textures[ct.parameters.normalMap],ct.parameters.normalScale&&Et.uNormalScale.value.set(ct.parameters.normalScale[0],ct.parameters.normalScale[1]),ct.parameters.map&&(Et.tDiffuse.value=ct.parameters.map,Et.enableDiffuse.value=!0),ct.parameters.envMap&&(Et.tCube.value=ct.parameters.envMap,Et.enableReflection.value=!0,Et.uReflectivity.value=ct.parameters.reflectivity),ct.parameters.lightMap&&(Et.tAO.value=ct.parameters.lightMap,Et.enableAO.value=!0),ct.parameters.specularMap&&(Et.tSpecular.value=C.textures[ct.parameters.specularMap],Et.enableSpecular.value=!0),ct.parameters.displacementMap&&(Et.tDisplacement.value=C.textures[ct.parameters.displacementMap],Et.enableDisplacement.value=!0,Et.uDisplacementBias.value=ct.parameters.displacementBias,Et.uDisplacementScale.value=ct.parameters.displacementScale),Et.uDiffuseColor.value.setHex(dt),Et.uSpecularColor.value.setHex(mt),Et.uAmbientColor.value.setHex(gt),Et.uShininess.value=vt,ct.parameters.opacity&&(Et.uOpacity.value=ct.parameters.opacity);var Tt={fragmentShader:ft.fragmentShader,vertexShader:ft.vertexShader,uniforms:Et,lights:!0,fog:!0};g=new THREE.ShaderMaterial(Tt)}else g=new THREE[ct.type](ct.parameters);g.name=lt,C.materials[lt]=g}for(lt in L.materials)if(ct=L.materials[lt],ct.parameters.materials){for(var yt=[],ot=0;ot<ct.parameters.materials.length;ot++){var Rt=ct.parameters.materials[ot];yt.push(C.materials[Rt])}C.materials[lt].materials=yt}o(),C.cameras&&L.defaults.camera&&(C.currentCamera=C.cameras[L.defaults.camera]),C.fogs&&L.defaults.fog&&(C.scene.fog=C.fogs[L.defaults.fog]),E.callbackSync(C),u()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var o=this,a=new THREE.ImageLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){var r=new THREE.Texture(e);r.needsUpdate=!0,void 0!==t&&t(r)})},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,r,i,o,a,n,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==n?n:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i,o=this.children.length;for(i=0;o>i;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==r?r:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var i,o,a,n,s,h;if(this.geometry&&void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)a=this.geometry.bones[i],n=a.pos,s=a.rotq,h=a.scl,o=this.addBone(),o.name=a.name,o.position.set(n[0],n[1],n[2]),o.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?o.scale.set(h[0],h[1],h[2]):o.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)a=this.geometry.bones[i],o=this.bones[i],-1===a.parent?this.add(o):this.bones[a.parent].add(o);var l=this.bones.length;if(this.useVertexTexture){var c;c=l>256?64:l>64?32:l>16?16:8,this.boneTextureWidth=c,this.boneTextureHeight=c,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*l);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var r=0,i=this.children.length;i>r;r++){var o=this.children[r];o instanceof THREE.Bone?o.update(this.identityMatrix,!1):o.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var a=0,n=this.bones.length;n>a;a++){var s=new THREE.Matrix4;s.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(s)}}for(var a=0,n=this.bones.length;n>a;a++)e.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),e.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0!==r?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,o=0,a=e.morphTargets.length;a>o;o++){var n=e.morphTargets[o],s=n.name.match(i);if(s&&s.length>1){var h=s[1],l=s[2];r[h]||(r[h]={start:1/0,end:-1/0});var c=r[h];o<c.start&&(c.start=o),o>c.end&&(c.end=o),t||(t=h)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;r>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(this.objects.length>1){e.getPositionFromMatrix(r.matrixWorld),t.getPositionFromMatrix(this.matrixWorld);var i=e.distanceTo(t);this.objects[0].object.visible=!0;for(var o=1,a=this.objects.length;a>o&&i>=this.objects[o].distance;o++)this.objects[o-1].object.visible=!1,this.objects[o].object.visible=!0;for(;a>o;o++)this.objects[o].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order),this.quaternion.setFromEuler(this.rotation3d),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var r=0;r<e.children.length;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else if(!(e instanceof THREE.Camera)){var t=this.__objects.indexOf(e);if(-1!==t){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var r=this.__objectsAdded.indexOf(e);-1!==r&&this.__objectsAdded.splice(r,1)}}for(var i=0;i<e.children.length;i++)this.__removeObject(e.children[i])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(){Dt.setRGB(0,0,0),Ft.setRGB(0,0,0),Vt.setRGB(0,0,0);for(var e=0,t=b.length;t>e;e++){var r=b[e],i=r.color;r instanceof THREE.AmbientLight?Dt.add(i):r instanceof THREE.DirectionalLight?Ft.add(i):r instanceof THREE.PointLight&&Vt.add(i)}}function r(e,t,r){for(var i=0,o=b.length;o>i;i++){var a=b[i];if(gt.copy(a.color),a instanceof THREE.DirectionalLight){var n=Ut.getPositionFromMatrix(a.matrixWorld).normalize(),s=t.dot(n);if(0>=s)continue;s*=a.intensity,r.add(gt.multiplyScalar(s))}else if(a instanceof THREE.PointLight){var n=Ut.getPositionFromMatrix(a.matrixWorld),s=t.dot(Ut.subVectors(n,e).normalize());if(0>=s)continue;if(s*=0==a.distance?1:1-Math.min(e.distanceTo(n)/a.distance,1),0==s)continue;s*=a.intensity,r.add(gt.multiplyScalar(s))}}}function i(e,t,r){f(r.opacity),E(r.blending);var i,o,a,n,s,h,l;if(r instanceof THREE.ParticleBasicMaterial)if(null===r.map){if(a=t.object.scale.x,n=t.object.scale.y,a*=t.scale.x*C,n*=t.scale.y*P,Lt.min.set(e.x-a,e.y-n),Lt.max.set(e.x+a,e.y+n),Ct.isIntersectionBox(Lt)===!1)return void Lt.makeEmpty();T(r.color.getStyle()),L.save(),L.translate(e.x,e.y),L.rotate(-t.rotation),L.scale(a,n),L.fillRect(-1,-1,2,2),L.restore()}else{if(s=r.map.image,h=s.width>>1,l=s.height>>1,a=t.scale.x*C,n=t.scale.y*P,i=a*h,o=n*l,Lt.min.set(e.x-i,e.y-o),Lt.max.set(e.x+i,e.y+o),Ct.isIntersectionBox(Lt)===!1)return void Lt.makeEmpty();L.save(),L.translate(e.x,e.y),L.rotate(-t.rotation),L.scale(a,-n),L.translate(-h,-l),L.drawImage(s,0,0),L.restore()}else if(r instanceof THREE.ParticleCanvasMaterial){if(i=t.scale.x*C,o=t.scale.y*P,Lt.min.set(e.x-i,e.y-o),Lt.max.set(e.x+i,e.y+o),Ct.isIntersectionBox(Lt)===!1)return void Lt.makeEmpty();v(r.color.getStyle()),T(r.color.getStyle()),L.save(),L.translate(e.x,e.y),L.rotate(-t.rotation),L.scale(i,o),r.program(L),L.restore()}}function o(e,t,r,i){if(f(i.opacity),E(i.blending),L.beginPath(),L.moveTo(e.positionScreen.x,e.positionScreen.y),L.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(d(i.linewidth),m(i.linecap),g(i.linejoin),i.vertexColors!==THREE.VertexColors)v(i.color.getStyle());else{var o=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle();if(o===a)v(o);else{try{var n=L.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);n.addColorStop(0,o),n.addColorStop(1,a)}catch(s){n=o}v(n)}}L.stroke(),Lt.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(d(i.linewidth),m(i.linecap),g(i.linejoin),v(i.color.getStyle()),y(i.dashSize,i.gapSize),L.stroke(),Lt.expandByScalar(2*i.linewidth),y(null,null))
}function a(e,t,i,o,a,p,d,m){if(x.info.render.vertices+=3,x.info.render.faces++,f(m.opacity),E(m.blending),Z=e.positionScreen.x,J=e.positionScreen.y,et=t.positionScreen.x,tt=t.positionScreen.y,rt=i.positionScreen.x,it=i.positionScreen.y,n(Z,J,et,tt,rt,it),(m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial)&&null===m.map)dt.copy(m.color),mt.copy(m.emissive),m.vertexColors===THREE.FaceColors&&dt.multiply(d.color),m.wireframe===!1&&m.shading==THREE.SmoothShading&&3==d.vertexNormalsLength?(ut.copy(Dt),pt.copy(Dt),ft.copy(Dt),r(d.v1.positionWorld,d.vertexNormalsModel[0],ut),r(d.v2.positionWorld,d.vertexNormalsModel[1],pt),r(d.v3.positionWorld,d.vertexNormalsModel[2],ft),ut.multiply(dt).add(mt),pt.multiply(dt).add(mt),ft.multiply(dt).add(mt),Et.addColors(pt,ft).multiplyScalar(.5),xt=u(ut,pt,ft,Et),c(Z,J,et,tt,rt,it,0,0,1,0,0,1,xt)):(ct.copy(Dt),r(d.centroidModel,d.normalModel,ct),ct.multiply(dt).add(mt),m.wireframe===!0?s(ct,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):h(ct));else if(m instanceof THREE.MeshBasicMaterial||m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial)null!==m.map?m.map.mapping instanceof THREE.UVMapping&&(Ht=d.uvs[0],l(Z,J,et,tt,rt,it,Ht[o].x,Ht[o].y,Ht[a].x,Ht[a].y,Ht[p].x,Ht[p].y,m.map)):null!==m.envMap?m.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Ut.copy(d.vertexNormalsModelView[o]),_t=.5*Ut.x+.5,bt=.5*Ut.y+.5,Ut.copy(d.vertexNormalsModelView[a]),wt=.5*Ut.x+.5,Mt=.5*Ut.y+.5,Ut.copy(d.vertexNormalsModelView[p]),St=.5*Ut.x+.5,At=.5*Ut.y+.5,l(Z,J,et,tt,rt,it,_t,bt,wt,Mt,St,At,m.envMap)):(ct.copy(m.color),m.vertexColors===THREE.FaceColors&&ct.multiply(d.color),m.wireframe===!0?s(ct,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):h(ct));else if(m instanceof THREE.MeshDepthMaterial)yt=j.near,Rt=j.far,ut.r=ut.g=ut.b=1-R(e.positionScreen.z*e.positionScreen.w,yt,Rt),pt.r=pt.g=pt.b=1-R(t.positionScreen.z*t.positionScreen.w,yt,Rt),ft.r=ft.g=ft.b=1-R(i.positionScreen.z*i.positionScreen.w,yt,Rt),Et.addColors(pt,ft).multiplyScalar(.5),xt=u(ut,pt,ft,Et),c(Z,J,et,tt,rt,it,0,0,1,0,0,1,xt);else if(m instanceof THREE.MeshNormalMaterial){var g;m.shading==THREE.FlatShading?(g=d.normalModelView,ct.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),m.wireframe===!0?s(ct,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):h(ct)):m.shading==THREE.SmoothShading&&(g=d.vertexNormalsModelView[o],ut.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),g=d.vertexNormalsModelView[a],pt.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),g=d.vertexNormalsModelView[p],ft.setRGB(g.x,g.y,g.z).multiplyScalar(.5).addScalar(.5),Et.addColors(pt,ft).multiplyScalar(.5),xt=u(ut,pt,ft,Et),c(Z,J,et,tt,rt,it,0,0,1,0,0,1,xt))}}function n(e,t,r,i,o,a){L.beginPath(),L.moveTo(e,t),L.lineTo(r,i),L.lineTo(o,a),L.closePath()}function s(e,t,r,i){d(t),m(r),g(i),v(e.getStyle()),L.stroke(),Lt.expandByScalar(2*t)}function h(e){T(e.getStyle()),L.fill()}function l(e,t,r,i,o,a,n,s,l,c,u,p,f){if(!(f instanceof THREE.DataTexture||void 0===f.image||0==f.image.width)){if(f.needsUpdate===!0){var E=f.wrapS==THREE.RepeatWrapping,d=f.wrapT==THREE.RepeatWrapping;vt[f.id]=L.createPattern(f.image,E===!0&&d===!0?"repeat":E===!0&&d===!1?"repeat-x":E===!1&&d===!0?"repeat-y":"no-repeat"),f.needsUpdate=!1}T(void 0===vt[f.id]?"rgba(0,0,0,1)":vt[f.id]);var m,g,v,y,R,x,H,_,b=f.offset.x/f.repeat.x,w=f.offset.y/f.repeat.y,M=f.image.width*f.repeat.x,S=f.image.height*f.repeat.y;if(n=(n+b)*M,s=(1-s+w)*S,l=(l+b)*M,c=(1-c+w)*S,u=(u+b)*M,p=(1-p+w)*S,r-=e,i-=t,o-=e,a-=t,l-=n,c-=s,u-=n,p-=s,H=l*p-u*c,0===H){if(void 0===Tt[f.id]){var A=document.createElement("canvas");A.width=f.image.width,A.height=f.image.height;var C=A.getContext("2d");C.drawImage(f.image,0,0),Tt[f.id]=C.getImageData(0,0,f.image.width,f.image.height).data}var P=Tt[f.id],D=4*(Math.floor(n)+Math.floor(s)*f.image.width);return ct.setRGB(P[D]/255,P[D+1]/255,P[D+2]/255),void h(ct)}_=1/H,m=(p*r-c*o)*_,g=(p*i-c*a)*_,v=(l*o-u*r)*_,y=(l*a-u*i)*_,R=e-m*n-v*s,x=t-g*n-y*s,L.save(),L.transform(m,g,v,y,R,x),L.fill(),L.restore()}}function c(e,t,r,i,o,a,n,s,h,l,c,u,p){var f,E,d,m,g,v,T,y,R=p.width-1,x=p.height-1;n*=R,s*=x,h*=R,l*=x,c*=R,u*=x,r-=e,i-=t,o-=e,a-=t,h-=n,l-=s,c-=n,u-=s,T=h*u-c*l,y=1/T,f=(u*r-l*o)*y,E=(u*i-l*a)*y,d=(h*o-c*r)*y,m=(h*a-c*i)*y,g=e-f*n-d*s,v=t-E*n-m*s,L.save(),L.transform(f,E,d,m,g,v),L.clip(),L.drawImage(p,0,0),L.restore()}function u(e,t,r,i){return Ot[0]=255*e.r|0,Ot[1]=255*e.g|0,Ot[2]=255*e.b|0,Ot[4]=255*t.r|0,Ot[5]=255*t.g|0,Ot[6]=255*t.b|0,Ot[8]=255*r.r|0,Ot[9]=255*r.g|0,Ot[10]=255*r.b|0,Ot[12]=255*i.r|0,Ot[13]=255*i.g|0,Ot[14]=255*i.b|0,Bt.putImageData(Nt,0,0),kt.drawImage(zt,0,0),It}function p(e,t,r){var i=t.x-e.x,o=t.y-e.y,a=i*i+o*o,n;0!==a&&(n=r/Math.sqrt(a),i*=n,o*=n,t.x+=i,t.y+=o,e.x-=i,e.y-=o)}function f(e){V!==e&&(L.globalAlpha=e,V=e)}function E(e){U!==e&&(e===THREE.NormalBlending?L.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?L.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(L.globalCompositeOperation="darker"),U=e)}function d(e){N!==e&&(L.lineWidth=e,N=e)}function m(e){O!==e&&(L.lineCap=e,O=e)}function g(e){I!==e&&(L.lineJoin=e,I=e)}function v(e){z!==e&&(L.strokeStyle=e,z=e)}function T(e){B!==e&&(L.fillStyle=e,B=e)}function y(e,t){(k!==e||G!==t)&&(L.setLineDash([e,t]),k=e,G=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var R=THREE.Math.smoothstep;e=e||{};var x=this,H,_,b,w=new THREE.Projector,M=void 0!==e.canvas?e.canvas:document.createElement("canvas"),S,A,C,P,L=M.getContext("2d"),D=new THREE.Color(0),F=0,V=1,U=0,z=null,B=null,N=null,O=null,I=null,k=null,G=0,j,W,X,Y,q,K=new THREE.RenderableVertex,Q=new THREE.RenderableVertex,Z,J,et,tt,rt,it,ot,at,nt,st,ht,lt,ct=new THREE.Color,ut=new THREE.Color,pt=new THREE.Color,ft=new THREE.Color,Et=new THREE.Color,dt=new THREE.Color,mt=new THREE.Color,gt=new THREE.Color,vt={},Tt={},yt,Rt,xt,Ht,_t,bt,wt,Mt,St,At,Ct=new THREE.Box2,Pt=new THREE.Box2,Lt=new THREE.Box2,Dt=new THREE.Color,Ft=new THREE.Color,Vt=new THREE.Color,Ut=new THREE.Vector3,zt,Bt,Nt,Ot,It,kt,Gt=16;zt=document.createElement("canvas"),zt.width=zt.height=2,Bt=zt.getContext("2d"),Bt.fillStyle="rgba(0,0,0,1)",Bt.fillRect(0,0,2,2),Nt=Bt.getImageData(0,0,2,2),Ot=Nt.data,It=document.createElement("canvas"),It.width=It.height=Gt,kt=It.getContext("2d"),kt.translate(-Gt/2,-Gt/2),kt.scale(Gt,Gt),Gt--,void 0===L.setLineDash&&(L.setLineDash=void 0!==L.mozDash?function(e){L.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=M,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,r){S=e*this.devicePixelRatio,A=t*this.devicePixelRatio,C=Math.floor(S/2),P=Math.floor(A/2),M.width=S,M.height=A,1!==this.devicePixelRatio&&r!==!1&&(M.style.width=e+"px",M.style.height=t+"px"),Ct.set(new THREE.Vector2(-C,-P),new THREE.Vector2(C,P)),Pt.set(new THREE.Vector2(-C,-P),new THREE.Vector2(C,P)),V=1,U=0,z=null,B=null,N=null,O=null,I=null},this.setClearColor=function(e,t){D.set(e),F=void 0!==t?t:1,Pt.set(new THREE.Vector2(-C,-P),new THREE.Vector2(C,P))},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){L.setTransform(1,0,0,-1,C,P),Pt.empty()===!1&&(Pt.intersect(Ct),Pt.expandByScalar(2),1>F&&L.clearRect(0|Pt.min.x,0|Pt.min.y,Pt.max.x-Pt.min.x|0,Pt.max.y-Pt.min.y|0),F>0&&(E(THREE.NormalBlending),f(1),T("rgba("+Math.floor(255*D.r)+","+Math.floor(255*D.g)+","+Math.floor(255*D.b)+","+F+")"),L.fillRect(0|Pt.min.x,0|Pt.min.y,Pt.max.x-Pt.min.x|0,Pt.max.y-Pt.min.y|0)),Pt.makeEmpty())},this.render=function(e,r){if(r instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),L.setTransform(1,0,0,-1,C,P),x.info.render.vertices=0,x.info.render.faces=0,H=w.projectScene(e,r,this.sortObjects,this.sortElements),_=H.elements,b=H.lights,j=r,t();for(var n=0,s=_.length;s>n;n++){var h=_[n],l=h.material;if(void 0!==l&&l.visible!==!1){if(Lt.makeEmpty(),h instanceof THREE.RenderableParticle)W=h,W.x*=C,W.y*=P,i(W,h,l);else if(h instanceof THREE.RenderableLine)W=h.v1,X=h.v2,W.positionScreen.x*=C,W.positionScreen.y*=P,X.positionScreen.x*=C,X.positionScreen.y*=P,Lt.setFromPoints([W.positionScreen,X.positionScreen]),Ct.isIntersectionBox(Lt)===!0&&o(W,X,h,l);else if(h instanceof THREE.RenderableFace3){if(W=h.v1,X=h.v2,Y=h.v3,W.positionScreen.z<-1||W.positionScreen.z>1)continue;if(X.positionScreen.z<-1||X.positionScreen.z>1)continue;if(Y.positionScreen.z<-1||Y.positionScreen.z>1)continue;W.positionScreen.x*=C,W.positionScreen.y*=P,X.positionScreen.x*=C,X.positionScreen.y*=P,Y.positionScreen.x*=C,Y.positionScreen.y*=P,l.overdraw>0&&(p(W.positionScreen,X.positionScreen,l.overdraw),p(X.positionScreen,Y.positionScreen,l.overdraw),p(Y.positionScreen,W.positionScreen,l.overdraw)),Lt.setFromPoints([W.positionScreen,X.positionScreen,Y.positionScreen]),Ct.isIntersectionBox(Lt)===!0&&a(W,X,Y,0,1,2,h,l)}Pt.union(Lt)}}L.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,o={};
for(t=0;t<e.length;t++){i=this.clone(e[t]);for(r in i)o[r]=i[r]}return o},clone:function(e){var t,r,i,o,a={};for(t in e){a[t]={};for(r in e[t])o=e[t][r],a[t][r]=o instanceof THREE.Color||o instanceof THREE.Vector2||o instanceof THREE.Vector3||o instanceof THREE.Vector4||o instanceof THREE.Matrix4||o instanceof THREE.Texture?o.clone():o instanceof Array?o.slice():o}return a}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=yr.createBuffer(),e.__webglColorBuffer=yr.createBuffer(),Bt.info.memory.geometries++}function r(e){e.__webglVertexBuffer=yr.createBuffer(),e.__webglColorBuffer=yr.createBuffer(),e.__webglLineDistanceBuffer=yr.createBuffer(),Bt.info.memory.geometries++}function i(e){e.__webglVertexBuffer=yr.createBuffer(),e.__webglColorBuffer=yr.createBuffer(),e.__webglNormalBuffer=yr.createBuffer(),Bt.info.memory.geometries++}function o(e){e.__webglVertexBuffer=yr.createBuffer(),e.__webglNormalBuffer=yr.createBuffer(),e.__webglTangentBuffer=yr.createBuffer(),e.__webglColorBuffer=yr.createBuffer(),e.__webglUVBuffer=yr.createBuffer(),e.__webglUV2Buffer=yr.createBuffer(),e.__webglSkinIndicesBuffer=yr.createBuffer(),e.__webglSkinWeightsBuffer=yr.createBuffer(),e.__webglFaceBuffer=yr.createBuffer(),e.__webglLineBuffer=yr.createBuffer();var t,r;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;r>t;t++)e.__webglMorphTargetsBuffers.push(yr.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;r>t;t++)e.__webglMorphNormalsBuffers.push(yr.createBuffer());Bt.info.memory.geometries++}function a(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var o in i.attributes){var a=i.attributes[o];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var n=1;"v2"===a.type?n=2:"v3"===a.type?n=3:"v4"===a.type?n=4:"c"===a.type&&(n=3),a.size=n,a.array=new Float32Array(r*n),a.buffer=yr.createBuffer(),a.buffer.belongsToAttribute=o,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}}function n(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,a(e,t)}function s(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,a(e,t)}function h(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__normalArray=new Float32Array(3*r),e.__webglVertexCount=r,a(e,t)}function l(e,t){var r=t.geometry,i=e.faces3,o=3*i.length,a=1*i.length,n=3*i.length,s=c(t,e),h=E(s),l=p(s),u=f(s);e.__vertexArray=new Float32Array(3*o),l&&(e.__normalArray=new Float32Array(3*o)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*o)),u&&(e.__colorArray=new Float32Array(3*o)),h&&(r.faceVertexUvs.length>0&&(e.__uvArray=new Float32Array(2*o)),r.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*o))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*o),e.__skinWeightArray=new Float32Array(4*o)),e.__faceArray=new Uint16Array(3*a),e.__lineArray=new Uint16Array(2*n);var d,m;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],d=0,m=e.numMorphTargets;m>d;d++)e.__morphTargetsArrays.push(new Float32Array(3*o));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],d=0,m=e.numMorphNormals;m>d;d++)e.__morphNormalsArrays.push(new Float32Array(3*o));if(e.__webglFaceCount=3*a,e.__webglLineCount=2*n,s.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var g in s.attributes){var v=s.attributes[g],T={};for(var y in v)T[y]=v[y];if(!T.__webglInitialized||T.createUniqueBuffers){T.__webglInitialized=!0;var R=1;"v2"===T.type?R=2:"v3"===T.type?R=3:"v4"===T.type?R=4:"c"===T.type&&(R=3),T.size=R,T.array=new Float32Array(o*R),T.buffer=yr.createBuffer(),T.buffer.belongsToAttribute=g,v.needsUpdate=!0,T.__original=v}e.__webglCustomAttributesList.push(T)}}e.__inittedArrays=!0}function c(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function u(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function p(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:u(e)?THREE.SmoothShading:THREE.FlatShading}function f(e){return e.vertexColors?e.vertexColors:!1}function E(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function d(e){var t,r,i;for(t in e.attributes)i="index"===t?yr.ELEMENT_ARRAY_BUFFER:yr.ARRAY_BUFFER,r=e.attributes[t],void 0===r.numItems&&(r.numItems=r.array.length),r.buffer=yr.createBuffer(),yr.bindBuffer(i,r.buffer),yr.bufferData(i,r.array,yr.STATIC_DRAW)}function m(e,t,r){var i,o,a,n,s,h,l=e.vertices,c=l.length,u=e.colors,p=u.length,f=e.__vertexArray,E=e.__colorArray,d=e.__sortArray,m=e.verticesNeedUpdate,g=e.elementsNeedUpdate,v=e.colorsNeedUpdate,T=e.__webglCustomAttributesList,y,R,x,H,_,w,M;if(r.sortParticles){for(dr.copy(Er),dr.multiply(r.matrixWorld),i=0;c>i;i++)a=l[i],mr.copy(a),mr.applyProjection(dr),d[i]=[mr.z,i];
for(d.sort(b),i=0;c>i;i++)a=l[d[i][1]],n=3*i,f[n]=a.x,f[n+1]=a.y,f[n+2]=a.z;for(o=0;p>o;o++)n=3*o,h=u[d[o][1]],E[n]=h.r,E[n+1]=h.g,E[n+2]=h.b;if(T)for(y=0,R=T.length;R>y;y++)if(M=T[y],void 0===M.boundTo||"vertices"===M.boundTo)if(n=0,_=M.value.length,1===M.size)for(H=0;_>H;H++)s=d[H][1],M.array[H]=M.value[s];else if(2===M.size)for(H=0;_>H;H++)s=d[H][1],w=M.value[s],M.array[n]=w.x,M.array[n+1]=w.y,n+=2;else if(3===M.size)if("c"===M.type)for(H=0;_>H;H++)s=d[H][1],w=M.value[s],M.array[n]=w.r,M.array[n+1]=w.g,M.array[n+2]=w.b,n+=3;else for(H=0;_>H;H++)s=d[H][1],w=M.value[s],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,n+=3;else if(4===M.size)for(H=0;_>H;H++)s=d[H][1],w=M.value[s],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,M.array[n+3]=w.w,n+=4}else{if(m)for(i=0;c>i;i++)a=l[i],n=3*i,f[n]=a.x,f[n+1]=a.y,f[n+2]=a.z;if(v)for(o=0;p>o;o++)h=u[o],n=3*o,E[n]=h.r,E[n+1]=h.g,E[n+2]=h.b;if(T)for(y=0,R=T.length;R>y;y++)if(M=T[y],M.needsUpdate&&(void 0===M.boundTo||"vertices"===M.boundTo))if(_=M.value.length,n=0,1===M.size)for(H=0;_>H;H++)M.array[H]=M.value[H];else if(2===M.size)for(H=0;_>H;H++)w=M.value[H],M.array[n]=w.x,M.array[n+1]=w.y,n+=2;else if(3===M.size)if("c"===M.type)for(H=0;_>H;H++)w=M.value[H],M.array[n]=w.r,M.array[n+1]=w.g,M.array[n+2]=w.b,n+=3;else for(H=0;_>H;H++)w=M.value[H],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,n+=3;else if(4===M.size)for(H=0;_>H;H++)w=M.value[H],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,M.array[n+3]=w.w,n+=4}if((m||r.sortParticles)&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglVertexBuffer),yr.bufferData(yr.ARRAY_BUFFER,f,t)),(v||r.sortParticles)&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglColorBuffer),yr.bufferData(yr.ARRAY_BUFFER,E,t)),T)for(y=0,R=T.length;R>y;y++)M=T[y],(M.needsUpdate||r.sortParticles)&&(yr.bindBuffer(yr.ARRAY_BUFFER,M.buffer),yr.bufferData(yr.ARRAY_BUFFER,M.array,t))}function g(e,t){var r,i,o,a,n,s,h=e.vertices,l=e.colors,c=e.lineDistances,u=h.length,p=l.length,f=c.length,E=e.__vertexArray,d=e.__colorArray,m=e.__lineDistanceArray,g=e.verticesNeedUpdate,v=e.colorsNeedUpdate,T=e.lineDistancesNeedUpdate,y=e.__webglCustomAttributesList,R,x,H,_,b,w,M;if(g){for(r=0;u>r;r++)a=h[r],n=3*r,E[n]=a.x,E[n+1]=a.y,E[n+2]=a.z;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglVertexBuffer),yr.bufferData(yr.ARRAY_BUFFER,E,t)}if(v){for(i=0;p>i;i++)s=l[i],n=3*i,d[n]=s.r,d[n+1]=s.g,d[n+2]=s.b;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglColorBuffer),yr.bufferData(yr.ARRAY_BUFFER,d,t)}if(T){for(o=0;f>o;o++)m[o]=c[o];yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglLineDistanceBuffer),yr.bufferData(yr.ARRAY_BUFFER,m,t)}if(y)for(R=0,x=y.length;x>R;R++)if(M=y[R],M.needsUpdate&&(void 0===M.boundTo||"vertices"===M.boundTo)){if(n=0,b=M.value.length,1===M.size)for(_=0;b>_;_++)M.array[_]=M.value[_];else if(2===M.size)for(_=0;b>_;_++)w=M.value[_],M.array[n]=w.x,M.array[n+1]=w.y,n+=2;else if(3===M.size)if("c"===M.type)for(_=0;b>_;_++)w=M.value[_],M.array[n]=w.r,M.array[n+1]=w.g,M.array[n+2]=w.b,n+=3;else for(_=0;b>_;_++)w=M.value[_],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,n+=3;else if(4===M.size)for(_=0;b>_;_++)w=M.value[_],M.array[n]=w.x,M.array[n+1]=w.y,M.array[n+2]=w.z,M.array[n+3]=w.w,n+=4;yr.bindBuffer(yr.ARRAY_BUFFER,M.buffer),yr.bufferData(yr.ARRAY_BUFFER,M.array,t)}}function v(e,t){var r,i,o,a,n,s,h,l,c,u,p,f,E,d=e.vertices,m=e.colors,g=e.normals,v=d.length,T=m.length,y=g.length,R=e.__vertexArray,x=e.__colorArray,H=e.__normalArray,_=e.verticesNeedUpdate,b=e.colorsNeedUpdate,w=e.normalsNeedUpdate,M=e.__webglCustomAttributesList;if(_){for(r=0;v>r;r++)a=d[r],n=3*r,R[n]=a.x,R[n+1]=a.y,R[n+2]=a.z;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglVertexBuffer),yr.bufferData(yr.ARRAY_BUFFER,R,t)}if(b){for(i=0;T>i;i++)s=m[i],n=3*i,x[n]=s.r,x[n+1]=s.g,x[n+2]=s.b;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglColorBuffer),yr.bufferData(yr.ARRAY_BUFFER,x,t)}if(w){for(o=0;y>o;o++)h=g[o],n=3*o,H[n]=h.x,H[n+1]=h.y,H[n+2]=h.z;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglNormalBuffer),yr.bufferData(yr.ARRAY_BUFFER,H,t)}if(M)for(l=0,c=M.length;c>l;l++)if(f=M[l],f.needsUpdate&&(void 0===f.boundTo||"vertices"===f.boundTo)){if(n=0,p=f.value.length,1===f.size)for(u=0;p>u;u++)f.array[u]=f.value[u];else if(2===f.size)for(u=0;p>u;u++)E=f.value[u],f.array[n]=E.x,f.array[n+1]=E.y,n+=2;else if(3===f.size)if("c"===f.type)for(u=0;p>u;u++)E=f.value[u],f.array[n]=E.r,f.array[n+1]=E.g,f.array[n+2]=E.b,n+=3;else for(u=0;p>u;u++)E=f.value[u],f.array[n]=E.x,f.array[n+1]=E.y,f.array[n+2]=E.z,n+=3;else if(4===f.size)for(u=0;p>u;u++)E=f.value[u],f.array[n]=E.x,f.array[n+1]=E.y,f.array[n+2]=E.z,f.array[n+3]=E.w,n+=4;yr.bindBuffer(yr.ARRAY_BUFFER,f.buffer),yr.bufferData(yr.ARRAY_BUFFER,f.array,t)}}function T(e,t,r,i,o){if(e.__inittedArrays){var a=p(o),n=f(o),s=E(o),h=a===THREE.SmoothShading,l,c,u,d,m,g,v,T,y,R,x,H,_,b,w,M,S,A,C,P,L,D,F,V,U,z,B,N,O,I,k,G,j,W,X,Y,q,K,Q,Z,J,et,tt,rt,it,ot,at,nt,st,ht,lt,ct,ut,pt,ft,Et,dt,mt,gt=0,vt=0,Tt=0,yt=0,Rt=0,xt=0,Ht=0,_t=0,bt=0,wt=0,Mt=0,St=0,At=0,Ct,Pt=e.__vertexArray,Lt=e.__uvArray,Dt=e.__uv2Array,Ft=e.__normalArray,Vt=e.__tangentArray,Ut=e.__colorArray,zt=e.__skinIndexArray,Bt=e.__skinWeightArray,Nt=e.__morphTargetsArrays,Ot=e.__morphNormalsArrays,It=e.__webglCustomAttributesList,kt,Gt=e.__faceArray,jt=e.__lineArray,Wt=t.geometry,Xt=Wt.verticesNeedUpdate,Yt=Wt.elementsNeedUpdate,qt=Wt.uvsNeedUpdate,Kt=Wt.normalsNeedUpdate,Qt=Wt.tangentsNeedUpdate,Zt=Wt.colorsNeedUpdate,Jt=Wt.morphTargetsNeedUpdate,$t=Wt.vertices,er=e.faces3,tr=Wt.faces,rr=Wt.faceVertexUvs[0],ir=Wt.faceVertexUvs[1],or=Wt.colors,ar=Wt.skinIndices,nr=Wt.skinWeights,sr=Wt.morphTargets,hr=Wt.morphNormals;if(Xt){for(l=0,c=er.length;c>l;l++)d=tr[er[l]],_=$t[d.a],b=$t[d.b],w=$t[d.c],Pt[vt]=_.x,Pt[vt+1]=_.y,Pt[vt+2]=_.z,Pt[vt+3]=b.x,Pt[vt+4]=b.y,Pt[vt+5]=b.z,Pt[vt+6]=w.x,Pt[vt+7]=w.y,Pt[vt+8]=w.z,vt+=9;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglVertexBuffer),yr.bufferData(yr.ARRAY_BUFFER,Pt,r)}if(Jt)for(ct=0,ut=sr.length;ut>ct;ct++){for(Mt=0,l=0,c=er.length;c>l;l++)Et=er[l],d=tr[Et],_=sr[ct].vertices[d.a],b=sr[ct].vertices[d.b],w=sr[ct].vertices[d.c],pt=Nt[ct],pt[Mt]=_.x,pt[Mt+1]=_.y,pt[Mt+2]=_.z,pt[Mt+3]=b.x,pt[Mt+4]=b.y,pt[Mt+5]=b.z,pt[Mt+6]=w.x,pt[Mt+7]=w.y,pt[Mt+8]=w.z,o.morphNormals&&(h?(dt=hr[ct].vertexNormals[Et],L=dt.a,D=dt.b,F=dt.c):(L=hr[ct].faceNormals[Et],D=L,F=L),ft=Ot[ct],ft[Mt]=L.x,ft[Mt+1]=L.y,ft[Mt+2]=L.z,ft[Mt+3]=D.x,ft[Mt+4]=D.y,ft[Mt+5]=D.z,ft[Mt+6]=F.x,ft[Mt+7]=F.y,ft[Mt+8]=F.z),Mt+=9;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[ct]),yr.bufferData(yr.ARRAY_BUFFER,Nt[ct],r),o.morphNormals&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[ct]),yr.bufferData(yr.ARRAY_BUFFER,Ot[ct],r))}if(nr.length){for(l=0,c=er.length;c>l;l++)d=tr[er[l]],O=nr[d.a],I=nr[d.b],k=nr[d.c],Bt[wt]=O.x,Bt[wt+1]=O.y,Bt[wt+2]=O.z,Bt[wt+3]=O.w,Bt[wt+4]=I.x,Bt[wt+5]=I.y,Bt[wt+6]=I.z,Bt[wt+7]=I.w,Bt[wt+8]=k.x,Bt[wt+9]=k.y,Bt[wt+10]=k.z,Bt[wt+11]=k.w,j=ar[d.a],W=ar[d.b],X=ar[d.c],zt[wt]=j.x,zt[wt+1]=j.y,zt[wt+2]=j.z,zt[wt+3]=j.w,zt[wt+4]=W.x,zt[wt+5]=W.y,zt[wt+6]=W.z,zt[wt+7]=W.w,zt[wt+8]=X.x,zt[wt+9]=X.y,zt[wt+10]=X.z,zt[wt+11]=X.w,wt+=12;wt>0&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),yr.bufferData(yr.ARRAY_BUFFER,zt,r),yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),yr.bufferData(yr.ARRAY_BUFFER,Bt,r))}if(Zt&&n){for(l=0,c=er.length;c>l;l++)d=tr[er[l]],T=d.vertexColors,y=d.color,3===T.length&&n===THREE.VertexColors?(U=T[0],z=T[1],B=T[2]):(U=y,z=y,B=y),Ut[bt]=U.r,Ut[bt+1]=U.g,Ut[bt+2]=U.b,Ut[bt+3]=z.r,Ut[bt+4]=z.g,Ut[bt+5]=z.b,Ut[bt+6]=B.r,Ut[bt+7]=B.g,Ut[bt+8]=B.b,bt+=9;bt>0&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglColorBuffer),yr.bufferData(yr.ARRAY_BUFFER,Ut,r))}if(Qt&&Wt.hasTangents){for(l=0,c=er.length;c>l;l++)d=tr[er[l]],R=d.vertexTangents,S=R[0],A=R[1],C=R[2],Vt[Ht]=S.x,Vt[Ht+1]=S.y,Vt[Ht+2]=S.z,Vt[Ht+3]=S.w,Vt[Ht+4]=A.x,Vt[Ht+5]=A.y,Vt[Ht+6]=A.z,Vt[Ht+7]=A.w,Vt[Ht+8]=C.x,Vt[Ht+9]=C.y,Vt[Ht+10]=C.z,Vt[Ht+11]=C.w,Ht+=12;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglTangentBuffer),yr.bufferData(yr.ARRAY_BUFFER,Vt,r)}if(Kt&&a){for(l=0,c=er.length;c>l;l++)if(d=tr[er[l]],m=d.vertexNormals,g=d.normal,3===m.length&&h)for(at=0;3>at;at++)st=m[at],Ft[xt]=st.x,Ft[xt+1]=st.y,Ft[xt+2]=st.z,xt+=3;else for(at=0;3>at;at++)Ft[xt]=g.x,Ft[xt+1]=g.y,Ft[xt+2]=g.z,xt+=3;yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglNormalBuffer),yr.bufferData(yr.ARRAY_BUFFER,Ft,r)}if(qt&&rr&&s){for(l=0,c=er.length;c>l;l++)if(u=er[l],x=rr[u],void 0!==x)for(at=0;3>at;at++)ht=x[at],Lt[Tt]=ht.x,Lt[Tt+1]=ht.y,Tt+=2;Tt>0&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglUVBuffer),yr.bufferData(yr.ARRAY_BUFFER,Lt,r))}if(qt&&ir&&s){for(l=0,c=er.length;c>l;l++)if(u=er[l],H=ir[u],void 0!==H)for(at=0;3>at;at++)lt=H[at],Dt[yt]=lt.x,Dt[yt+1]=lt.y,yt+=2;yt>0&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglUV2Buffer),yr.bufferData(yr.ARRAY_BUFFER,Dt,r))}if(Yt){for(l=0,c=er.length;c>l;l++)Gt[Rt]=gt,Gt[Rt+1]=gt+1,Gt[Rt+2]=gt+2,Rt+=3,jt[_t]=gt,jt[_t+1]=gt+1,jt[_t+2]=gt,jt[_t+3]=gt+2,jt[_t+4]=gt+1,jt[_t+5]=gt+2,_t+=6,gt+=3;yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),yr.bufferData(yr.ELEMENT_ARRAY_BUFFER,Gt,r),yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),yr.bufferData(yr.ELEMENT_ARRAY_BUFFER,jt,r)}if(It)for(at=0,nt=It.length;nt>at;at++)if(kt=It[at],kt.__original.needsUpdate){if(St=0,At=0,1===kt.size){if(void 0===kt.boundTo||"vertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)d=tr[er[l]],kt.array[St]=kt.value[d.a],kt.array[St+1]=kt.value[d.b],kt.array[St+2]=kt.value[d.c],St+=3;else if("faces"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],kt.array[St]=Ct,kt.array[St+1]=Ct,kt.array[St+2]=Ct,St+=3}else if(2===kt.size){if(void 0===kt.boundTo||"vertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)d=tr[er[l]],_=kt.value[d.a],b=kt.value[d.b],w=kt.value[d.c],kt.array[St]=_.x,kt.array[St+1]=_.y,kt.array[St+2]=b.x,kt.array[St+3]=b.y,kt.array[St+4]=w.x,kt.array[St+5]=w.y,St+=6;else if("faces"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],_=Ct,b=Ct,w=Ct,kt.array[St]=_.x,kt.array[St+1]=_.y,kt.array[St+2]=b.x,kt.array[St+3]=b.y,kt.array[St+4]=w.x,kt.array[St+5]=w.y,St+=6}else if(3===kt.size){var lr;if(lr="c"===kt.type?["r","g","b"]:["x","y","z"],void 0===kt.boundTo||"vertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)d=tr[er[l]],_=kt.value[d.a],b=kt.value[d.b],w=kt.value[d.c],kt.array[St]=_[lr[0]],kt.array[St+1]=_[lr[1]],kt.array[St+2]=_[lr[2]],kt.array[St+3]=b[lr[0]],kt.array[St+4]=b[lr[1]],kt.array[St+5]=b[lr[2]],kt.array[St+6]=w[lr[0]],kt.array[St+7]=w[lr[1]],kt.array[St+8]=w[lr[2]],St+=9;else if("faces"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],_=Ct,b=Ct,w=Ct,kt.array[St]=_[lr[0]],kt.array[St+1]=_[lr[1]],kt.array[St+2]=_[lr[2]],kt.array[St+3]=b[lr[0]],kt.array[St+4]=b[lr[1]],kt.array[St+5]=b[lr[2]],kt.array[St+6]=w[lr[0]],kt.array[St+7]=w[lr[1]],kt.array[St+8]=w[lr[2]],St+=9;else if("faceVertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],_=Ct[0],b=Ct[1],w=Ct[2],kt.array[St]=_[lr[0]],kt.array[St+1]=_[lr[1]],kt.array[St+2]=_[lr[2]],kt.array[St+3]=b[lr[0]],kt.array[St+4]=b[lr[1]],kt.array[St+5]=b[lr[2]],kt.array[St+6]=w[lr[0]],kt.array[St+7]=w[lr[1]],kt.array[St+8]=w[lr[2]],St+=9}else if(4===kt.size)if(void 0===kt.boundTo||"vertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)d=tr[er[l]],_=kt.value[d.a],b=kt.value[d.b],w=kt.value[d.c],kt.array[St]=_.x,kt.array[St+1]=_.y,kt.array[St+2]=_.z,kt.array[St+3]=_.w,kt.array[St+4]=b.x,kt.array[St+5]=b.y,kt.array[St+6]=b.z,kt.array[St+7]=b.w,kt.array[St+8]=w.x,kt.array[St+9]=w.y,kt.array[St+10]=w.z,kt.array[St+11]=w.w,St+=12;else if("faces"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],_=Ct,b=Ct,w=Ct,kt.array[St]=_.x,kt.array[St+1]=_.y,kt.array[St+2]=_.z,kt.array[St+3]=_.w,kt.array[St+4]=b.x,kt.array[St+5]=b.y,kt.array[St+6]=b.z,kt.array[St+7]=b.w,kt.array[St+8]=w.x,kt.array[St+9]=w.y,kt.array[St+10]=w.z,kt.array[St+11]=w.w,St+=12;else if("faceVertices"===kt.boundTo)for(l=0,c=er.length;c>l;l++)Ct=kt.value[er[l]],_=Ct[0],b=Ct[1],w=Ct[2],kt.array[St]=_.x,kt.array[St+1]=_.y,kt.array[St+2]=_.z,kt.array[St+3]=_.w,kt.array[St+4]=b.x,kt.array[St+5]=b.y,kt.array[St+6]=b.z,kt.array[St+7]=b.w,kt.array[St+8]=w.x,kt.array[St+9]=w.y,kt.array[St+10]=w.z,kt.array[St+11]=w.w,St+=12;yr.bindBuffer(yr.ARRAY_BUFFER,kt.buffer),yr.bufferData(yr.ARRAY_BUFFER,kt.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function y(e,t,r){var i=e.attributes,o,a;for(o in i)a=i[o],a.needsUpdate&&("index"===o?(yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,a.buffer),yr.bufferData(yr.ELEMENT_ARRAY_BUFFER,a.array,t)):(yr.bindBuffer(yr.ARRAY_BUFFER,a.buffer),yr.bufferData(yr.ARRAY_BUFFER,a.array,t)),a.needsUpdate=!1),r&&!a.dynamic&&(a.array=null)}function R(e){pr[e]||(yr.enableVertexAttribArray(e),pr[e]=!0)}function x(){for(var e in pr)pr[e]&&(yr.disableVertexAttribArray(e),pr[e]=!1)}function H(e,t,r){var i=e.program.attributes;if(-1!==r.morphTargetBase&&i.position>=0?(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),R(i.position),yr.vertexAttribPointer(i.position,3,yr.FLOAT,!1,0,0)):i.position>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglVertexBuffer),R(i.position),yr.vertexAttribPointer(i.position,3,yr.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var o=0,a=r.morphTargetForcedOrder,n=r.morphTargetInfluences;o<e.numSupportedMorphTargets&&o<a.length;)i["morphTarget"+o]>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[o]]),R(i["morphTarget"+o]),yr.vertexAttribPointer(i["morphTarget"+o],3,yr.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[o]]),R(i["morphNormal"+o]),yr.vertexAttribPointer(i["morphNormal"+o],3,yr.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[a[o]],o++;else{var s,h=[],n=r.morphTargetInfluences,l,c=n.length;for(l=0;c>l;l++)s=n[l],s>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(b),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(b):0===h.length&&h.push([0,0]);for(var u,o=0;o<e.numSupportedMorphTargets;)h[o]?(u=h[o][1],i["morphTarget"+o]>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[u]),R(i["morphTarget"+o]),yr.vertexAttribPointer(i["morphTarget"+o],3,yr.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(yr.bindBuffer(yr.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[u]),R(i["morphNormal"+o]),yr.vertexAttribPointer(i["morphNormal"+o],3,yr.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[u]):r.__webglMorphTargetInfluences[o]=0,o++}null!==e.program.uniforms.morphTargetInfluences&&yr.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function _(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function b(e,t){return t[0]-e[0]}function w(e,t,r){if(e.length)for(var i=0,o=e.length;o>i;i++)It=null,Wt=null,Qt=-1,er=-1,tr=-1,qt=-1,Kt=-1,jt=-1,Gt=-1,vr=!0,e[i].render(t,r,cr,ur),It=null,Wt=null,Qt=-1,er=-1,tr=-1,qt=-1,Kt=-1,jt=-1,Gt=-1,vr=!0}function M(e,t,r,i,o,a,n,s){var h,l,c,u,p,f,E;t?(p=e.length-1,f=-1,E=-1):(p=0,f=e.length,E=1);for(var d=p;d!==f;d+=E)if(h=e[d],h.render){if(l=h.object,c=h.buffer,s)u=s;else{if(u=h[r],!u)continue;n&&Bt.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),Bt.setDepthTest(u.depthTest),Bt.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}Bt.setMaterialFaces(u),c instanceof THREE.BufferGeometry?Bt.renderBufferDirect(i,o,a,u,c,l):Bt.renderBuffer(i,o,a,u,c,l)}}function S(e,t,r,i,o,a,n){for(var s,h,l,c,u=0,p=e.length;p>u;u++)if(s=e[u],h=s.object,h.visible){if(n)l=n;else{if(l=s[t],!l)continue;a&&Bt.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Bt.setDepthTest(l.depthTest),Bt.setDepthWrite(l.depthWrite),st(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Bt.renderImmediateObject(r,i,o,l,h)}}function A(e){var t=e.object,r=t.material;r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null)}function C(e){var t=e.object,r=e.buffer,i,o,a;a=t.material,a instanceof THREE.MeshFaceMaterial?(o=r.materialIndex,i=a.materials[o],i.transparent?(e.transparent=i,e.opaque=null):(e.opaque=i,e.transparent=null)):(i=a,i&&(i.transparent?(e.transparent=i,e.opaque=null):(e.opaque=i,e.transparent=null)))}function P(e,t){var r,i,o,a,n,s,h={},l=e.morphTargets.length,c=e.morphNormals.length,u=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},r=0,i=e.faces.length;i>r;r++)o=e.faces[r],a=u?o.materialIndex:0,void 0===h[a]&&(h[a]={hash:a,counter:0}),s=h[a].hash+"_"+h[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c}),n=3,e.geometryGroups[s].vertices+n>65535&&(h[a].counter+=1,s=h[a].hash+"_"+h[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c})),e.geometryGroups[s].faces3.push(r),e.geometryGroups[s].vertices+=n;e.geometryGroupsList=[];for(var p in e.geometryGroups)e.geometryGroups[p].id=Xt++,e.geometryGroupsList.push(e.geometryGroups[p])}function L(e,a){var c,u,p,f;if(void 0===e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",qr)),u=e.geometry,void 0===u);else if(u instanceof THREE.BufferGeometry)d(u);else if(e instanceof THREE.Mesh){p=e.material,void 0===u.geometryGroups&&P(u,p);for(c in u.geometryGroups)f=u.geometryGroups[c],f.__webglVertexBuffer||(o(f),l(f,e),u.verticesNeedUpdate=!0,u.morphTargetsNeedUpdate=!0,u.elementsNeedUpdate=!0,u.uvsNeedUpdate=!0,u.normalsNeedUpdate=!0,u.tangentsNeedUpdate=!0,u.colorsNeedUpdate=!0)}else e instanceof THREE.Ribbon?u.__webglVertexBuffer||(i(u),h(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.normalsNeedUpdate=!0):e instanceof THREE.Line?u.__webglVertexBuffer||(r(u),s(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&(u.__webglVertexBuffer||(t(u),n(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0));if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(u=e.geometry,u instanceof THREE.BufferGeometry)D(a.__webglObjects,u,e);else if(u instanceof THREE.Geometry)for(c in u.geometryGroups)f=u.geometryGroups[c],D(a.__webglObjects,f,e)}else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(u=e.geometry,D(a.__webglObjects,u,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?F(a.__webglObjectsImmediate,e):e instanceof THREE.Sprite?a.__webglSprites.push(e):e instanceof THREE.LensFlare&&a.__webglFlares.push(e);e.__webglActive=!0}}function D(e,t,r){e.push({id:null,buffer:t,object:r,opaque:null,transparent:null,z:0})}function F(e,t){e.push({id:null,object:t,opaque:null,transparent:null,z:0})}function V(e){var t=e.geometry,r,i,o;if(t instanceof THREE.BufferGeometry)y(t,yr.DYNAMIC_DRAW,!t.dynamic);else if(e instanceof THREE.Mesh){for(var a=0,n=t.geometryGroupsList.length;n>a;a++)r=t.geometryGroupsList[a],o=c(e,r),t.buffersNeedUpdate&&l(r,e),i=o.attributes&&U(o),(t.verticesNeedUpdate||t.morphTargetsNeedUpdate||t.elementsNeedUpdate||t.uvsNeedUpdate||t.normalsNeedUpdate||t.colorsNeedUpdate||t.tangentsNeedUpdate||i)&&T(r,e,yr.DYNAMIC_DRAW,!t.dynamic,o);t.verticesNeedUpdate=!1,t.morphTargetsNeedUpdate=!1,t.elementsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.tangentsNeedUpdate=!1,t.buffersNeedUpdate=!1,o.attributes&&z(o)}else e instanceof THREE.Ribbon?(o=c(e,t),i=o.attributes&&U(o),(t.verticesNeedUpdate||t.colorsNeedUpdate||t.normalsNeedUpdate||i)&&v(t,yr.DYNAMIC_DRAW),t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,t.normalsNeedUpdate=!1,o.attributes&&z(o)):e instanceof THREE.Line?(o=c(e,t),i=o.attributes&&U(o),(t.verticesNeedUpdate||t.colorsNeedUpdate||t.lineDistancesNeedUpdate||i)&&g(t,yr.DYNAMIC_DRAW),t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,t.lineDistancesNeedUpdate=!1,o.attributes&&z(o)):e instanceof THREE.ParticleSystem&&(o=c(e,t),i=o.attributes&&U(o),(t.verticesNeedUpdate||t.colorsNeedUpdate||e.sortParticles||i)&&m(t,yr.DYNAMIC_DRAW,e),t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,o.attributes&&z(o))}function U(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function z(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function B(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line?N(t.__webglObjects,e):e instanceof THREE.Sprite?O(t.__webglSprites,e):e instanceof THREE.LensFlare?O(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&N(t.__webglObjectsImmediate,e),delete e.__webglActive}function N(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function O(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function I(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}function k(e,t,r,i,o){Yt=0,i.needsUpdate&&(i.program&&ri(i),Bt.initMaterial(i,t,r,o),i.needsUpdate=!1),i.morphTargets&&(o.__webglMorphTargetInfluences||(o.__webglMorphTargetInfluences=new Float32Array(Bt.maxMorphTargets)));var a=!1,n=i.program,s=n.uniforms,h=i.uniforms;if(n!==It&&(yr.useProgram(n),It=n,a=!0),i.id!==Gt&&(Gt=i.id,a=!0),(a||e!==Wt)&&(yr.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==Wt&&(Wt=e)),i.skinning)if(Lr&&o.useVertexTexture){if(null!==s.boneTexture){var l=et();yr.uniform1i(s.boneTexture,l),Bt.setTexture(o.boneTexture,l)}}else null!==s.boneGlobalMatrices&&yr.uniformMatrix4fv(s.boneGlobalMatrices,!1,o.boneMatrices);return a&&(r&&i.fog&&Y(h,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(vr&&(at(n,t),vr=!1),Q(h,Tr)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&G(h,i),i instanceof THREE.LineBasicMaterial?j(h,i):i instanceof THREE.LineDashedMaterial?(j(h,i),W(h,i)):i instanceof THREE.ParticleBasicMaterial?X(h,i):i instanceof THREE.MeshPhongMaterial?q(h,i):i instanceof THREE.MeshLambertMaterial?K(h,i):i instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(h.opacity.value=i.opacity),o.receiveShadow&&!i._shadowPass&&Z(h,t),tt(n,i.uniformsList),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==s.cameraPosition&&(mr.getPositionFromMatrix(e.matrixWorld),yr.uniform3f(s.cameraPosition,mr.x,mr.y,mr.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==s.viewMatrix&&yr.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)),J(s,o),null!==s.modelMatrix&&yr.uniformMatrix4fv(s.modelMatrix,!1,o.matrixWorld.elements),n}function G(e,t){e.opacity.value=t.opacity,Bt.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap),void 0!==r){var i=r.offset,o=r.repeat;e.offsetRepeat.value.set(i.x,i.y,o.x,o.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,e.reflectivity.value=Bt.gammaInput?t.reflectivity:t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function j(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function W(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function X(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=At.height/2,e.map.value=t.map}function Y(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function q(e,t){e.shininess.value=t.shininess,Bt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function K(e,t){Bt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function Q(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function Z(e,t){if(e.shadowMatrix)for(var r=0,i=0,o=t.length;o>i;i++){var a=t[i];a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++)}}function J(e,t){yr.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&yr.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function et(){var e=Yt;return e>=wr&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+wr),Yt+=1,e}function tt(e,t){var r,i,o,a,n,s,h,l,c,u,p;for(c=0,u=t.length;u>c;c++)if(a=e.uniforms[t[c][1]])if(r=t[c][0],o=r.type,i=r.value,"i"===o)yr.uniform1i(a,i);else if("f"===o)yr.uniform1f(a,i);else if("v2"===o)yr.uniform2f(a,i.x,i.y);else if("v3"===o)yr.uniform3f(a,i.x,i.y,i.z);else if("v4"===o)yr.uniform4f(a,i.x,i.y,i.z,i.w);else if("c"===o)yr.uniform3f(a,i.r,i.g,i.b);else if("iv1"===o)yr.uniform1iv(a,i);else if("iv"===o)yr.uniform3iv(a,i);else if("fv1"===o)yr.uniform1fv(a,i);else if("fv"===o)yr.uniform3fv(a,i);else if("v2v"===o){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),h=0,l=i.length;l>h;h++)p=2*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y;yr.uniform2fv(a,r._array)}else if("v3v"===o){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),h=0,l=i.length;l>h;h++)p=3*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y,r._array[p+2]=i[h].z;yr.uniform3fv(a,r._array)}else if("v4v"===o){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),h=0,l=i.length;l>h;h++)p=4*h,r._array[p]=i[h].x,r._array[p+1]=i[h].y,r._array[p+2]=i[h].z,r._array[p+3]=i[h].w;yr.uniform4fv(a,r._array)}else if("m4"===o)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),yr.uniformMatrix4fv(a,!1,r._array);else if("m4v"===o){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),h=0,l=i.length;l>h;h++)i[h].flattenToArrayOffset(r._array,16*h);yr.uniformMatrix4fv(a,!1,r._array)}else if("t"===o){if(n=i,s=et(),yr.uniform1i(a,s),!n)continue;n.image instanceof Array&&6===n.image.length?gt(n,s):n instanceof THREE.WebGLRenderTargetCube?vt(n,s):Bt.setTexture(n,s)}else if("tv"===o){for(void 0===r._array&&(r._array=[]),h=0,l=r.value.length;l>h;h++)r._array[h]=et();for(yr.uniform1iv(a,r._array),h=0,l=r.value.length;l>h;h++)n=r.value[h],s=r._array[h],n&&Bt.setTexture(n,s)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o)}function rt(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function it(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function ot(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function at(e,t){var r,i,o,a,n=0,s=0,h=0,l,c,u,p,f,E,d,m=Tr,g=m.directional.colors,v=m.directional.positions,T=m.point.colors,y=m.point.positions,R=m.point.distances,x=m.spot.colors,H=m.spot.positions,_=m.spot.distances,b=m.spot.directions,w=m.spot.anglesCos,M=m.spot.exponents,S=m.hemi.skyColors,A=m.hemi.groundColors,C=m.hemi.positions,P=0,L=0,D=0,F=0,V=0,U=0,z=0,B=0,N=0,O=0,I=0,k=0;for(r=0,i=t.length;i>r;r++)if(o=t[r],!o.onlyShadow)if(l=o.color,p=o.intensity,d=o.distance,o instanceof THREE.AmbientLight){if(!o.visible)continue;Bt.gammaInput?(n+=l.r*l.r,s+=l.g*l.g,h+=l.b*l.b):(n+=l.r,s+=l.g,h+=l.b)}else if(o instanceof THREE.DirectionalLight){if(V+=1,!o.visible)continue;if(gr.getPositionFromMatrix(o.matrixWorld),mr.getPositionFromMatrix(o.target.matrixWorld),gr.sub(mr),gr.normalize(),0===gr.x&&0===gr.y&&0===gr.z)continue;N=3*P,v[N]=gr.x,v[N+1]=gr.y,v[N+2]=gr.z,Bt.gammaInput?it(g,N,l,p*p):ot(g,N,l,p),P+=1}else if(o instanceof THREE.PointLight){if(U+=1,!o.visible)continue;O=3*L,Bt.gammaInput?it(T,O,l,p*p):ot(T,O,l,p),mr.getPositionFromMatrix(o.matrixWorld),y[O]=mr.x,y[O+1]=mr.y,y[O+2]=mr.z,R[L]=d,L+=1}else if(o instanceof THREE.SpotLight){if(z+=1,!o.visible)continue;I=3*D,Bt.gammaInput?it(x,I,l,p*p):ot(x,I,l,p),mr.getPositionFromMatrix(o.matrixWorld),H[I]=mr.x,H[I+1]=mr.y,H[I+2]=mr.z,_[D]=d,gr.copy(mr),mr.getPositionFromMatrix(o.target.matrixWorld),gr.sub(mr),gr.normalize(),b[I]=gr.x,b[I+1]=gr.y,b[I+2]=gr.z,w[D]=Math.cos(o.angle),M[D]=o.exponent,D+=1}else if(o instanceof THREE.HemisphereLight){if(B+=1,!o.visible)continue;if(gr.getPositionFromMatrix(o.matrixWorld),gr.normalize(),0===gr.x&&0===gr.y&&0===gr.z)continue;k=3*F,C[k]=gr.x,C[k+1]=gr.y,C[k+2]=gr.z,c=o.color,u=o.groundColor,Bt.gammaInput?(f=p*p,it(S,k,c,f),it(A,k,u,f)):(ot(S,k,c,p),ot(A,k,u,p)),F+=1}for(r=3*P,i=Math.max(g.length,3*V);i>r;r++)g[r]=0;for(r=3*L,i=Math.max(T.length,3*U);i>r;r++)T[r]=0;for(r=3*D,i=Math.max(x.length,3*z);i>r;r++)x[r]=0;for(r=3*F,i=Math.max(S.length,3*B);i>r;r++)S[r]=0;for(r=3*F,i=Math.max(A.length,3*B);i>r;r++)A[r]=0;m.directional.length=P,m.point.length=L,m.spot.length=D,m.hemi.length=F,m.ambient[0]=n,m.ambient[1]=s,m.ambient[2]=h}function nt(e){e!==ar&&(yr.lineWidth(e),ar=e)}function st(e,t,r){rr!==e&&(e?yr.enable(yr.POLYGON_OFFSET_FILL):yr.disable(yr.POLYGON_OFFSET_FILL),rr=e),!e||ir===t&&or===r||(yr.polygonOffset(t,r),ir=t,or=r)}function ht(e){var t,r,i=[];for(var o in e)t=e[o],t!==!1&&(r="#define "+o+" "+t,i.push(r));return i.join("\n")}function lt(e,t,r,i,o,a,n,s){var h,l,c,u,p,f=[];e?f.push(e):(f.push(t),f.push(r));for(c in a)f.push(c),f.push(a[c]);for(h in n)f.push(h),f.push(n[h]);for(p=f.join(),h=0,l=Nt.length;l>h;h++){var E=Nt[h];if(E.code===p)return E.usedTimes++,E.program}var d="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?d="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(d="SHADOWMAP_TYPE_PCF_SOFT");var m=ht(a);u=yr.createProgram();var g=["precision "+Ct+" float;","precision "+Ct+" int;",m,Pr?"#define VERTEX_TEXTURES":"",Bt.gammaInput?"#define GAMMA_INPUT":"",Bt.gammaOutput?"#define GAMMA_OUTPUT":"",Bt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.boneTextureWidth?"#define N_BONE_PIXEL_X "+n.boneTextureWidth.toFixed(1):"",n.boneTextureHeight?"#define N_BONE_PIXEL_Y "+n.boneTextureHeight.toFixed(1):"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+Ct+" float;","precision "+Ct+" int;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",m,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",Bt.gammaInput?"#define GAMMA_INPUT":"",Bt.gammaOutput?"#define GAMMA_OUTPUT":"",Bt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),T=ft("vertex",g+r),y=ft("fragment",v+t);
yr.attachShader(u,T),yr.attachShader(u,y),s&&yr.bindAttribLocation(u,0,s),yr.linkProgram(u),yr.getProgramParameter(u,yr.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+yr.getProgramParameter(u,yr.VALIDATE_STATUS)+", gl error ["+yr.getError()+"]"),console.error("Program Info Log: "+yr.getProgramInfoLog(u))),yr.deleteShader(y),yr.deleteShader(T),u.uniforms={},u.attributes={};var R,x,H,_;R=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],R.push(n.useVertexTexture?"boneTexture":"boneGlobalMatrices");for(x in i)R.push(x);for(ct(u,R),R=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],_=0;_<n.maxMorphTargets;_++)R.push("morphTarget"+_);for(_=0;_<n.maxMorphNormals;_++)R.push("morphNormal"+_);for(H in o)R.push(H);return ut(u,R),u.id=Ot++,Nt.push({program:u,code:p,usedTimes:1}),Bt.info.memory.programs=Nt.length,u}function ct(e,t){var r,i,o;for(r=0,i=t.length;i>r;r++)o=t[r],e.uniforms[o]=yr.getUniformLocation(e,o)}function ut(e,t){var r,i,o;for(r=0,i=t.length;i>r;r++)o=t[r],e.attributes[o]=yr.getAttribLocation(e,o)}function pt(e){for(var t=e.split("\n"),r=0,i=t.length;i>r;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function ft(e,t){var r;return"fragment"===e?r=yr.createShader(yr.FRAGMENT_SHADER):"vertex"===e&&(r=yr.createShader(yr.VERTEX_SHADER)),yr.shaderSource(r,t),yr.compileShader(r),yr.getShaderParameter(r,yr.COMPILE_STATUS)?r:(console.error(yr.getShaderInfoLog(r)),console.error(pt(t)),null)}function Et(e){return 0===(e&e-1)}function dt(e,t,r){r?(yr.texParameteri(e,yr.TEXTURE_WRAP_S,Ht(t.wrapS)),yr.texParameteri(e,yr.TEXTURE_WRAP_T,Ht(t.wrapT)),yr.texParameteri(e,yr.TEXTURE_MAG_FILTER,Ht(t.magFilter)),yr.texParameteri(e,yr.TEXTURE_MIN_FILTER,Ht(t.minFilter))):(yr.texParameteri(e,yr.TEXTURE_WRAP_S,yr.CLAMP_TO_EDGE),yr.texParameteri(e,yr.TEXTURE_WRAP_T,yr.CLAMP_TO_EDGE),yr.texParameteri(e,yr.TEXTURE_MAG_FILTER,xt(t.magFilter)),yr.texParameteri(e,yr.TEXTURE_MIN_FILTER,xt(t.minFilter))),_r&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(yr.texParameterf(e,_r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Cr)),t.__oldAnisotropy=t.anisotropy)}function mt(e,t){if(e.width<=t&&e.height<=t)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),o=Math.floor(e.height*t/r),a=document.createElement("canvas");a.width=i,a.height=o;var n=a.getContext("2d");return n.drawImage(e,0,0,e.width,e.height,0,0,i,o),a}function gt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",Kr),e.image.__webglTextureCube=yr.createTexture(),Bt.info.memory.textures++),yr.activeTexture(yr.TEXTURE0+t),yr.bindTexture(yr.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),yr.pixelStorei(yr.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],o=0;6>o;o++)i[o]=Bt.autoScaleCubemaps&&!r?mt(e.image[o],Ar):e.image[o];var a=i[0],n=Et(a.width)&&Et(a.height),s=Ht(e.format),h=Ht(e.type);dt(yr.TEXTURE_CUBE_MAP,e,n);for(var o=0;6>o;o++)if(r)for(var l,c=i[o].mipmaps,u=0,p=c.length;p>u;u++)l=c[u],yr.compressedTexImage2D(yr.TEXTURE_CUBE_MAP_POSITIVE_X+o,u,s,l.width,l.height,0,l.data);else yr.texImage2D(yr.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,s,s,h,i[o]);e.generateMipmaps&&n&&yr.generateMipmap(yr.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else yr.activeTexture(yr.TEXTURE0+t),yr.bindTexture(yr.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function vt(e,t){yr.activeTexture(yr.TEXTURE0+t),yr.bindTexture(yr.TEXTURE_CUBE_MAP,e.__webglTexture)}function Tt(e,t,r){yr.bindFramebuffer(yr.FRAMEBUFFER,e),yr.framebufferTexture2D(yr.FRAMEBUFFER,yr.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function yt(e,t){yr.bindRenderbuffer(yr.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(yr.renderbufferStorage(yr.RENDERBUFFER,yr.DEPTH_COMPONENT16,t.width,t.height),yr.framebufferRenderbuffer(yr.FRAMEBUFFER,yr.DEPTH_ATTACHMENT,yr.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(yr.renderbufferStorage(yr.RENDERBUFFER,yr.DEPTH_STENCIL,t.width,t.height),yr.framebufferRenderbuffer(yr.FRAMEBUFFER,yr.DEPTH_STENCIL_ATTACHMENT,yr.RENDERBUFFER,e)):yr.renderbufferStorage(yr.RENDERBUFFER,yr.RGBA4,t.width,t.height)}function Rt(e){e instanceof THREE.WebGLRenderTargetCube?(yr.bindTexture(yr.TEXTURE_CUBE_MAP,e.__webglTexture),yr.generateMipmap(yr.TEXTURE_CUBE_MAP),yr.bindTexture(yr.TEXTURE_CUBE_MAP,null)):(yr.bindTexture(yr.TEXTURE_2D,e.__webglTexture),yr.generateMipmap(yr.TEXTURE_2D),yr.bindTexture(yr.TEXTURE_2D,null))}function xt(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?yr.NEAREST:yr.LINEAR}function Ht(e){if(e===THREE.RepeatWrapping)return yr.REPEAT;if(e===THREE.ClampToEdgeWrapping)return yr.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return yr.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return yr.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return yr.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return yr.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return yr.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return yr.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return yr.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return yr.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return yr.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return yr.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return yr.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return yr.BYTE;if(e===THREE.ShortType)return yr.SHORT;if(e===THREE.UnsignedShortType)return yr.UNSIGNED_SHORT;if(e===THREE.IntType)return yr.INT;if(e===THREE.UnsignedIntType)return yr.UNSIGNED_INT;if(e===THREE.FloatType)return yr.FLOAT;if(e===THREE.AlphaFormat)return yr.ALPHA;if(e===THREE.RGBFormat)return yr.RGB;if(e===THREE.RGBAFormat)return yr.RGBA;if(e===THREE.LuminanceFormat)return yr.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return yr.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return yr.FUNC_ADD;if(e===THREE.SubtractEquation)return yr.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return yr.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return yr.ZERO;if(e===THREE.OneFactor)return yr.ONE;if(e===THREE.SrcColorFactor)return yr.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return yr.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return yr.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return yr.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return yr.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return yr.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return yr.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return yr.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return yr.SRC_ALPHA_SATURATE;if(void 0!==br){if(e===THREE.RGB_S3TC_DXT1_Format)return br.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return br.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return br.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return br.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function _t(e){if(Lr&&e&&e.useVertexTexture)return 1024;var t=yr.getParameter(yr.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4),i=r;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.bones.length,i),i<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function bt(e){for(var t=0,r=0,i=0,o=0,a=0,n=e.length;n>a;a++){var s=e[a];s.onlyShadow||(s instanceof THREE.DirectionalLight&&t++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&o++)}return{directional:t,point:r,spot:i,hemi:o}}function wt(e){for(var t=0,r=0,i=e.length;i>r;r++){var o=e[r];o.castShadow&&(o instanceof THREE.SpotLight&&t++,o instanceof THREE.DirectionalLight&&!o.shadowCascade&&t++)}return t}function Mt(){try{var e={alpha:Pt,premultipliedAlpha:Lt,antialias:Dt,stencil:Ft,preserveDrawingBuffer:Vt};if(yr=At.getContext("webgl",e)||At.getContext("experimental-webgl",e),null===yr)throw"Error creating WebGL context."}catch(t){console.error(t)}Rr=yr.getExtension("OES_texture_float"),xr=yr.getExtension("OES_texture_float_linear"),Hr=yr.getExtension("OES_standard_derivatives"),_r=yr.getExtension("EXT_texture_filter_anisotropic")||yr.getExtension("MOZ_EXT_texture_filter_anisotropic")||yr.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),br=yr.getExtension("WEBGL_compressed_texture_s3tc")||yr.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||yr.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Rr||console.log("THREE.WebGLRenderer: Float textures not supported."),Hr||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),_r||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),br||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===yr.getShaderPrecisionFormat&&(yr.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function St(){yr.clearColor(0,0,0,1),yr.clearDepth(1),yr.clearStencil(0),yr.enable(yr.DEPTH_TEST),yr.depthFunc(yr.LEQUAL),yr.frontFace(yr.CCW),yr.cullFace(yr.BACK),yr.enable(yr.CULL_FACE),yr.enable(yr.BLEND),yr.blendEquation(yr.FUNC_ADD),yr.blendFunc(yr.SRC_ALPHA,yr.ONE_MINUS_SRC_ALPHA),yr.clearColor(Ut.r,Ut.g,Ut.b,zt)}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var At=void 0!==e.canvas?e.canvas:document.createElement("canvas"),Ct=void 0!==e.precision?e.precision:"highp",Pt=void 0!==e.alpha?e.alpha:!0,Lt=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Dt=void 0!==e.antialias?e.antialias:!1,Ft=void 0!==e.stencil?e.stencil:!0,Vt=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,Ut=new THREE.Color(0),zt=0;void 0!==e.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),Ut.setHex(e.clearColor)),void 0!==e.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),zt=e.clearAlpha),this.domElement=At,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Bt=this,Nt=[],Ot=0,It=null,kt=null,Gt=-1,jt=null,Wt=null,Xt=0,Yt=0,qt=-1,Kt=-1,Qt=-1,Zt=-1,Jt=-1,$t=-1,er=-1,tr=-1,rr=null,ir=null,or=null,ar=null,nr=0,sr=0,hr=0,lr=0,cr=0,ur=0,pr={},fr=new THREE.Frustum,Er=new THREE.Matrix4,dr=new THREE.Matrix4,mr=new THREE.Vector3,gr=new THREE.Vector3,vr=!0,Tr={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}},yr,Rr,xr,Hr,_r,br;Mt(),St(),this.context=yr;var wr=yr.getParameter(yr.MAX_TEXTURE_IMAGE_UNITS),Mr=yr.getParameter(yr.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Sr=yr.getParameter(yr.MAX_TEXTURE_SIZE),Ar=yr.getParameter(yr.MAX_CUBE_MAP_TEXTURE_SIZE),Cr=_r?yr.getParameter(_r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Pr=Mr>0,Lr=Pr&&Rr,Dr=br?yr.getParameter(yr.COMPRESSED_TEXTURE_FORMATS):[],Fr=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.HIGH_FLOAT),Vr=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.MEDIUM_FLOAT),Ur=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.LOW_FLOAT),zr=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.HIGH_FLOAT),Br=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.MEDIUM_FLOAT),Nr=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.LOW_FLOAT),Or=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.HIGH_INT),Ir=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.MEDIUM_INT),kr=yr.getShaderPrecisionFormat(yr.VERTEX_SHADER,yr.LOW_INT),Gr=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.HIGH_INT),jr=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.MEDIUM_INT),Wr=yr.getShaderPrecisionFormat(yr.FRAGMENT_SHADER,yr.LOW_INT),Xr=Fr.precision>0&&zr.precision>0,Yr=Vr.precision>0&&Br.precision>0;"highp"!==Ct||Xr||(Yr?(Ct="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(Ct="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==Ct||Yr||(Ct="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return yr},this.supportsVertexTextures=function(){return Pr},this.supportsFloatTextures=function(){return Rr},this.supportsStandardDerivatives=function(){return Hr},this.supportsCompressedTextureS3TC=function(){return br},this.getMaxAnisotropy=function(){return Cr},this.getPrecision=function(){return Ct},this.setSize=function(e,t,r){At.width=e*this.devicePixelRatio,At.height=t*this.devicePixelRatio,1!==this.devicePixelRatio&&r!==!1&&(At.style.width=e+"px",At.style.height=t+"px"),this.setViewport(0,0,At.width,At.height)},this.setViewport=function(e,t,r,i){nr=void 0!==e?e:0,sr=void 0!==t?t:0,hr=void 0!==r?r:At.width,lr=void 0!==i?i:At.height,yr.viewport(nr,sr,hr,lr)},this.setScissor=function(e,t,r,i){yr.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?yr.enable(yr.SCISSOR_TEST):yr.disable(yr.SCISSOR_TEST)},this.setClearColor=function(e,t){Ut.set(e),zt=void 0!==t?t:1,yr.clearColor(Ut.r,Ut.g,Ut.b,zt)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return Ut},this.getClearAlpha=function(){return zt},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=yr.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=yr.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=yr.STENCIL_BUFFER_BIT),yr.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){It=null,Qt=-1,er=-1,tr=-1,jt=-1,Gt=-1,vr=!0,qt=-1,Kt=-1,this.shadowMapPlugin.update(e,t)};var qr=function(e){var t=e.target;t.removeEventListener("dispose",qr),$r(t)},Kr=function(e){var t=e.target;t.removeEventListener("dispose",Kr),ei(t),Bt.info.memory.textures--},Qr=function(e){var t=e.target;t.removeEventListener("dispose",Qr),ti(t),Bt.info.memory.textures--},Zr=function(e){var t=e.target;t.removeEventListener("dispose",Zr),ri(t)},Jr=function(e){if(void 0!==e.__webglVertexBuffer&&yr.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&yr.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&yr.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&yr.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&yr.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&yr.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&yr.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&yr.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&yr.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&yr.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&yr.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)yr.deleteBuffer(e.__webglCustomAttributesList[t].buffer);Bt.info.memory.geometries--},$r=function(e){if(e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t=e.attributes;for(var r in t)void 0!==t[r].buffer&&yr.deleteBuffer(t[r].buffer);Bt.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(var i in e.geometryGroups){var o=e.geometryGroups[i];if(void 0!==o.numMorphTargets)for(var a=0,n=o.numMorphTargets;n>a;a++)yr.deleteBuffer(o.__webglMorphTargetsBuffers[a]);if(void 0!==o.numMorphNormals)for(var a=0,n=o.numMorphNormals;n>a;a++)yr.deleteBuffer(o.__webglMorphNormalsBuffers[a]);Jr(o)}else Jr(e)},ei=function(e){if(e.image&&e.image.__webglTextureCube)yr.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,yr.deleteTexture(e.__webglTexture)}},ti=function(e){if(e&&e.__webglTexture)if(yr.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)yr.deleteFramebuffer(e.__webglFramebuffer[t]),yr.deleteRenderbuffer(e.__webglRenderbuffer[t]);else yr.deleteFramebuffer(e.__webglFramebuffer),yr.deleteRenderbuffer(e.__webglRenderbuffer)},ri=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var r,i,o,a=!1;for(r=0,i=Nt.length;i>r;r++)if(o=Nt[r],o.program===t){o.usedTimes--,0===o.usedTimes&&(a=!0);break}if(a===!0){var n=[];for(r=0,i=Nt.length;i>r;r++)o=Nt[r],o.program!==t&&n.push(o);Nt=n,yr.deleteProgram(t),Bt.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=yr.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=yr.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=yr.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=yr.createBuffer()),e.hasPositions&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglVertexBuffer),yr.bufferData(yr.ARRAY_BUFFER,e.positionArray,yr.DYNAMIC_DRAW),yr.enableVertexAttribArray(t.attributes.position),yr.vertexAttribPointer(t.attributes.position,3,yr.FLOAT,!1,0,0)),e.hasNormals){if(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,o,a,n,s,h,l,c,u,p,f,E,d,m,g=3*e.count;for(m=0;g>m;m+=9)d=e.normalArray,n=d[m],l=d[m+1],p=d[m+2],s=d[m+3],c=d[m+4],f=d[m+5],h=d[m+6],u=d[m+7],E=d[m+8],i=(n+s+h)/3,o=(l+c+u)/3,a=(p+f+E)/3,d[m]=i,d[m+1]=o,d[m+2]=a,d[m+3]=i,d[m+4]=o,d[m+5]=a,d[m+6]=i,d[m+7]=o,d[m+8]=a}yr.bufferData(yr.ARRAY_BUFFER,e.normalArray,yr.DYNAMIC_DRAW),yr.enableVertexAttribArray(t.attributes.normal),yr.vertexAttribPointer(t.attributes.normal,3,yr.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglUvBuffer),yr.bufferData(yr.ARRAY_BUFFER,e.uvArray,yr.DYNAMIC_DRAW),yr.enableVertexAttribArray(t.attributes.uv),yr.vertexAttribPointer(t.attributes.uv,2,yr.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(yr.bindBuffer(yr.ARRAY_BUFFER,e.__webglColorBuffer),yr.bufferData(yr.ARRAY_BUFFER,e.colorArray,yr.DYNAMIC_DRAW),yr.enableVertexAttribArray(t.attributes.color),yr.vertexAttribPointer(t.attributes.color,3,yr.FLOAT,!1,0,0)),yr.drawArrays(yr.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,o,a){if(i.visible!==!1){var n,s,h,l,c,u,p,f=k(e,t,r,i,a),E=f.attributes,d=o.attributes,m=!1,g=i.wireframe?1:0,v=16777215*o.id+2*f.id+g;if(v!==jt&&(jt=v,m=!0),m&&x(),a instanceof THREE.Mesh){var T=d.index;if(T){var y=o.offsets;y.length>1&&(m=!0);for(var H=0,_=y.length;_>H;H++){var b=y[H].index;if(m){for(c in E)u=E[c],l=d[c],u>=0&&(l?(p=l.itemSize,yr.bindBuffer(yr.ARRAY_BUFFER,l.buffer),R(u),yr.vertexAttribPointer(u,p,yr.FLOAT,!1,0,b*p*4)):i.defaultAttributeValues&&(2===i.defaultAttributeValues[c].length?yr.vertexAttrib2fv(u,i.defaultAttributeValues[c]):3===i.defaultAttributeValues[c].length&&yr.vertexAttrib3fv(u,i.defaultAttributeValues[c])));yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,T.buffer)}yr.drawElements(yr.TRIANGLES,y[H].count,yr.UNSIGNED_SHORT,2*y[H].start),Bt.info.render.calls++,Bt.info.render.vertices+=y[H].count,Bt.info.render.faces+=y[H].count/3}}else{if(m)for(c in E)"index"!==c&&(u=E[c],l=d[c],u>=0&&(l?(p=l.itemSize,yr.bindBuffer(yr.ARRAY_BUFFER,l.buffer),R(u),yr.vertexAttribPointer(u,p,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[c]&&(2===i.defaultAttributeValues[c].length?yr.vertexAttrib2fv(u,i.defaultAttributeValues[c]):3===i.defaultAttributeValues[c].length&&yr.vertexAttrib3fv(u,i.defaultAttributeValues[c]))));var w=o.attributes.position;yr.drawArrays(yr.TRIANGLES,0,w.numItems/3),Bt.info.render.calls++,Bt.info.render.vertices+=w.numItems/3,Bt.info.render.faces+=w.numItems/3/3}}else if(a instanceof THREE.ParticleSystem){if(m){for(c in E)u=E[c],l=d[c],u>=0&&(l?(p=l.itemSize,yr.bindBuffer(yr.ARRAY_BUFFER,l.buffer),R(u),yr.vertexAttribPointer(u,p,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[c]&&(2===i.defaultAttributeValues[c].length?yr.vertexAttrib2fv(u,i.defaultAttributeValues[c]):3===i.defaultAttributeValues[c].length&&yr.vertexAttrib3fv(u,i.defaultAttributeValues[c])));var w=d.position;yr.drawArrays(yr.POINTS,0,w.numItems/3),Bt.info.render.calls++,Bt.info.render.points+=w.numItems/3}}else if(a instanceof THREE.Line&&m){for(c in E)u=E[c],l=d[c],u>=0&&(l?(p=l.itemSize,yr.bindBuffer(yr.ARRAY_BUFFER,l.buffer),R(u),yr.vertexAttribPointer(u,p,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[c]&&(2===i.defaultAttributeValues[c].length?yr.vertexAttrib2fv(u,i.defaultAttributeValues[c]):3===i.defaultAttributeValues[c].length&&yr.vertexAttrib3fv(u,i.defaultAttributeValues[c])));var M=a.type===THREE.LineStrip?yr.LINE_STRIP:yr.LINES;nt(i.linewidth);var w=d.position;yr.drawArrays(M,0,w.numItems/3),Bt.info.render.calls++,Bt.info.render.points+=w.numItems}}},this.renderBuffer=function(e,t,r,i,o,a){if(i.visible!==!1){var n,s,h,l,c,u=k(e,t,r,i,a),p=u.attributes,f=!1,E=i.wireframe?1:0,d=16777215*o.id+2*u.id+E;if(d!==jt&&(jt=d,f=!0),f&&x(),!i.morphTargets&&p.position>=0?f&&(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglVertexBuffer),R(p.position),yr.vertexAttribPointer(p.position,3,yr.FLOAT,!1,0,0)):a.morphTargetBase&&H(i,o,a),f){if(o.__webglCustomAttributesList)for(l=0,c=o.__webglCustomAttributesList.length;c>l;l++)h=o.__webglCustomAttributesList[l],p[h.buffer.belongsToAttribute]>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,h.buffer),R(p[h.buffer.belongsToAttribute]),yr.vertexAttribPointer(p[h.buffer.belongsToAttribute],h.size,yr.FLOAT,!1,0,0));p.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglColorBuffer),R(p.color),yr.vertexAttribPointer(p.color,3,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&yr.vertexAttrib3fv(p.color,i.defaultAttributeValues.color)),p.normal>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglNormalBuffer),R(p.normal),yr.vertexAttribPointer(p.normal,3,yr.FLOAT,!1,0,0)),p.tangent>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglTangentBuffer),R(p.tangent),yr.vertexAttribPointer(p.tangent,4,yr.FLOAT,!1,0,0)),p.uv>=0&&(a.geometry.faceVertexUvs[0]?(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglUVBuffer),R(p.uv),yr.vertexAttribPointer(p.uv,2,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&yr.vertexAttrib2fv(p.uv,i.defaultAttributeValues.uv)),p.uv2>=0&&(a.geometry.faceVertexUvs[1]?(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglUV2Buffer),R(p.uv2),yr.vertexAttribPointer(p.uv2,2,yr.FLOAT,!1,0,0)):i.defaultAttributeValues&&yr.vertexAttrib2fv(p.uv2,i.defaultAttributeValues.uv2)),i.skinning&&p.skinIndex>=0&&p.skinWeight>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),R(p.skinIndex),yr.vertexAttribPointer(p.skinIndex,4,yr.FLOAT,!1,0,0),yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),R(p.skinWeight),yr.vertexAttribPointer(p.skinWeight,4,yr.FLOAT,!1,0,0)),p.lineDistance>=0&&(yr.bindBuffer(yr.ARRAY_BUFFER,o.__webglLineDistanceBuffer),R(p.lineDistance),yr.vertexAttribPointer(p.lineDistance,1,yr.FLOAT,!1,0,0))}if(a instanceof THREE.Mesh)i.wireframe?(nt(i.wireframeLinewidth),f&&yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),yr.drawElements(yr.LINES,o.__webglLineCount,yr.UNSIGNED_SHORT,0)):(f&&yr.bindBuffer(yr.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),yr.drawElements(yr.TRIANGLES,o.__webglFaceCount,yr.UNSIGNED_SHORT,0)),Bt.info.render.calls++,Bt.info.render.vertices+=o.__webglFaceCount,Bt.info.render.faces+=o.__webglFaceCount/3;else if(a instanceof THREE.Line){var m=a.type===THREE.LineStrip?yr.LINE_STRIP:yr.LINES;nt(i.linewidth),yr.drawArrays(m,0,o.__webglLineCount),Bt.info.render.calls++}else a instanceof THREE.ParticleSystem?(yr.drawArrays(yr.POINTS,0,o.__webglParticleCount),Bt.info.render.calls++,Bt.info.render.points+=o.__webglParticleCount):a instanceof THREE.Ribbon&&(yr.drawArrays(yr.TRIANGLE_STRIP,0,o.__webglVertexCount),Bt.info.render.calls++)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var o,a,n,s,h,l=e.__lights,c=e.fog;for(Gt=-1,vr=!0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Er.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),fr.setFromMatrix(Er),this.autoUpdateObjects&&this.initWebGLObjects(e),w(this.renderPluginsPre,e,t),Bt.info.render.calls=0,Bt.info.render.vertices=0,Bt.info.render.faces=0,Bt.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),h=e.__webglObjects,o=0,a=h.length;a>o;o++)n=h[o],s=n.object,n.id=o,n.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!fr.intersectsObject(s)||(rt(s,t),C(n),n.render=!0,this.sortObjects===!0&&(null!==s.renderDepth?n.z=s.renderDepth:(mr.getPositionFromMatrix(s.matrixWorld),mr.applyProjection(Er),n.z=mr.z))));for(this.sortObjects&&h.sort(_),h=e.__webglObjectsImmediate,o=0,a=h.length;a>o;o++)n=h[o],s=n.object,s.visible&&(rt(s,t),A(n));if(e.overrideMaterial){var u=e.overrideMaterial;this.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),this.setDepthTest(u.depthTest),this.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits),M(e.__webglObjects,!1,"",t,l,c,!0,u),S(e.__webglObjectsImmediate,"",t,l,c,!1,u)}else{var u=null;this.setBlending(THREE.NoBlending),M(e.__webglObjects,!0,"opaque",t,l,c,!1,u),S(e.__webglObjectsImmediate,"opaque",t,l,c,!1,u),M(e.__webglObjects,!1,"transparent",t,l,c,!0,u),S(e.__webglObjectsImmediate,"transparent",t,l,c,!0,u)}w(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&Rt(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,i,o){var a=k(e,t,r,i,o);jt=-1,Bt.setMaterialFaces(i),o.immediateRenderCallback?o.immediateRenderCallback(a,yr,fr):o.render(function(e){Bt.renderBufferImmediate(e,a,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)L(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)B(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;r>t;t++){var i=e.__webglObjects[t].object;void 0===i.__webglInit&&(void 0!==i.__webglActive&&B(i,e),L(i,e)),V(i)}},this.initMaterial=function(e,t,r,i){e.addEventListener("dispose",Zr);var o,a,n,s,h,l,c,u,p;e instanceof THREE.MeshDepthMaterial?p="depth":e instanceof THREE.MeshNormalMaterial?p="normal":e instanceof THREE.MeshBasicMaterial?p="basic":e instanceof THREE.MeshLambertMaterial?p="lambert":e instanceof THREE.MeshPhongMaterial?p="phong":e instanceof THREE.LineBasicMaterial?p="basic":e instanceof THREE.LineDashedMaterial?p="dashed":e instanceof THREE.ParticleBasicMaterial&&(p="particle_basic"),p&&I(e,THREE.ShaderLib[p]),l=bt(t),u=wt(t),c=_t(i),h={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Lr&&i&&i.useVertexTexture,boneTextureWidth:i&&i.boneTextureWidth,boneTextureHeight:i&&i.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=lt(p,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,h,e.index0AttributeName);var f=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var E,d="morphTarget";for(s=0;s<this.maxMorphTargets;s++)E=d+s,f[E]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var E,d="morphNormal";for(s=0;s<this.maxMorphNormals;s++)E=d+s,f[E]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(o in e.uniforms)e.uniformsList.push([e.uniforms[o],o])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?yr.disable(yr.CULL_FACE):(yr.frontFace(t===THREE.FrontFaceDirectionCW?yr.CW:yr.CCW),yr.cullFace(e===THREE.CullFaceBack?yr.BACK:e===THREE.CullFaceFront?yr.FRONT:yr.FRONT_AND_BACK),yr.enable(yr.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;qt!==t&&(t?yr.disable(yr.CULL_FACE):yr.enable(yr.CULL_FACE),qt=t),Kt!==r&&(yr.frontFace(r?yr.CW:yr.CCW),Kt=r)},this.setDepthTest=function(e){er!==e&&(e?yr.enable(yr.DEPTH_TEST):yr.disable(yr.DEPTH_TEST),er=e)},this.setDepthWrite=function(e){tr!==e&&(yr.depthMask(e),tr=e)},this.setBlending=function(e,t,r,i){e!==Qt&&(e===THREE.NoBlending?yr.disable(yr.BLEND):e===THREE.AdditiveBlending?(yr.enable(yr.BLEND),yr.blendEquation(yr.FUNC_ADD),yr.blendFunc(yr.SRC_ALPHA,yr.ONE)):e===THREE.SubtractiveBlending?(yr.enable(yr.BLEND),yr.blendEquation(yr.FUNC_ADD),yr.blendFunc(yr.ZERO,yr.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(yr.enable(yr.BLEND),yr.blendEquation(yr.FUNC_ADD),yr.blendFunc(yr.ZERO,yr.SRC_COLOR)):e===THREE.CustomBlending?yr.enable(yr.BLEND):(yr.enable(yr.BLEND),yr.blendEquationSeparate(yr.FUNC_ADD,yr.FUNC_ADD),yr.blendFuncSeparate(yr.SRC_ALPHA,yr.ONE_MINUS_SRC_ALPHA,yr.ONE,yr.ONE_MINUS_SRC_ALPHA)),Qt=e),e===THREE.CustomBlending?(t!==Zt&&(yr.blendEquation(Ht(t)),Zt=t),(r!==Jt||i!==$t)&&(yr.blendFunc(Ht(r),Ht(i)),Jt=r,$t=i)):(Zt=null,Jt=null,$t=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Kr),e.__webglTexture=yr.createTexture(),Bt.info.memory.textures++),yr.activeTexture(yr.TEXTURE0+t),yr.bindTexture(yr.TEXTURE_2D,e.__webglTexture),yr.pixelStorei(yr.UNPACK_FLIP_Y_WEBGL,e.flipY),yr.pixelStorei(yr.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),yr.pixelStorei(yr.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=Et(r.width)&&Et(r.height),o=Ht(e.format),a=Ht(e.type);dt(yr.TEXTURE_2D,e,i);var n,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;l>h;h++)n=s[h],yr.texImage2D(yr.TEXTURE_2D,h,o,n.width,n.height,0,o,a,n.data);e.generateMipmaps=!1}else yr.texImage2D(yr.TEXTURE_2D,0,o,r.width,r.height,0,o,a,r.data);else if(e instanceof THREE.CompressedTexture)for(var h=0,l=s.length;l>h;h++)n=s[h],yr.compressedTexImage2D(yr.TEXTURE_2D,h,o,n.width,n.height,0,n.data);else if(s.length>0&&i){for(var h=0,l=s.length;l>h;h++)n=s[h],yr.texImage2D(yr.TEXTURE_2D,h,o,o,a,n);e.generateMipmaps=!1}else yr.texImage2D(yr.TEXTURE_2D,0,o,o,a,e.image);e.generateMipmaps&&i&&yr.generateMipmap(yr.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else yr.activeTexture(yr.TEXTURE0+t),yr.bindTexture(yr.TEXTURE_2D,e.__webglTexture)
},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Qr),e.__webglTexture=yr.createTexture(),Bt.info.memory.textures++;var r=Et(e.width)&&Et(e.height),i=Ht(e.format),o=Ht(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],yr.bindTexture(yr.TEXTURE_CUBE_MAP,e.__webglTexture),dt(yr.TEXTURE_CUBE_MAP,e,r);for(var a=0;6>a;a++)e.__webglFramebuffer[a]=yr.createFramebuffer(),e.__webglRenderbuffer[a]=yr.createRenderbuffer(),yr.texImage2D(yr.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,i,e.width,e.height,0,i,o,null),Tt(e.__webglFramebuffer[a],e,yr.TEXTURE_CUBE_MAP_POSITIVE_X+a),yt(e.__webglRenderbuffer[a],e);r&&yr.generateMipmap(yr.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=yr.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:yr.createRenderbuffer(),yr.bindTexture(yr.TEXTURE_2D,e.__webglTexture),dt(yr.TEXTURE_2D,e,r),yr.texImage2D(yr.TEXTURE_2D,0,i,e.width,e.height,0,i,o,null),Tt(e.__webglFramebuffer,e,yr.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?yr.framebufferRenderbuffer(yr.FRAMEBUFFER,yr.DEPTH_ATTACHMENT,yr.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&yr.framebufferRenderbuffer(yr.FRAMEBUFFER,yr.DEPTH_STENCIL_ATTACHMENT,yr.RENDERBUFFER,e.__webglRenderbuffer):yt(e.__webglRenderbuffer,e),r&&yr.generateMipmap(yr.TEXTURE_2D);t?yr.bindTexture(yr.TEXTURE_CUBE_MAP,null):yr.bindTexture(yr.TEXTURE_2D,null),yr.bindRenderbuffer(yr.RENDERBUFFER,null),yr.bindFramebuffer(yr.FRAMEBUFFER,null)}var n,s,h,l,c;e?(n=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,h=e.height,l=0,c=0):(n=null,s=hr,h=lr,l=nr,c=sr),n!==kt&&(yr.bindFramebuffer(yr.FRAMEBUFFER,n),yr.viewport(l,c,s,h),kt=n),cr=s,ur=h},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableParticle=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,r){var i,o,a=e.vertices.length,n=e.faceVertexUvs[0].length,s=t instanceof THREE.Mesh?t.geometry:t,h=e.vertices,l=s.vertices,c=e.faces,u=s.faces,p=e.faceVertexUvs[0],f=s.faceVertexUvs[0];void 0===r&&(r=0),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,o=(new THREE.Matrix3).getNormalMatrix(i));for(var E=0,d=l.length;d>E;E++){var m=l[E],g=m.clone();i&&g.applyMatrix4(i),h.push(g)}for(E=0,d=u.length;d>E;E++){var v=u[E],T,y,R,x=v.vertexNormals,H=v.vertexColors;T=new THREE.Face3(v.a+a,v.b+a,v.c+a),T.normal.copy(v.normal),o&&T.normal.applyMatrix3(o).normalize();for(var _=0,b=x.length;b>_;_++)y=x[_].clone(),o&&y.applyMatrix3(o).normalize(),T.vertexNormals.push(y);T.color.copy(v.color);for(var _=0,b=H.length;b>_;_++)R=H[_],T.vertexColors.push(R.clone());T.materialIndex=v.materialIndex+r,T.centroid.copy(v.centroid),i&&T.centroid.applyMatrix4(i),c.push(T)}for(E=0,d=f.length;d>E;E++){for(var w=f[E],M=[],_=0,b=w.length;b>_;_++)M.push(new THREE.Vector2(w[_].x,w[_].y));p.push(M)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,r,i){var o=new THREE.Vector3,a=THREE.Math.random16(),n=THREE.Math.random16();a+n>1&&(a=1-a,n=1-n);var s=1-a-n;return o.copy(t),o.multiplyScalar(a),e.copy(r),e.multiplyScalar(n),o.add(e),e.copy(i),e.multiplyScalar(s),o.add(e),o}}(),randomPointInFace:function(e,t,r){var i,o,a,n;return i=t.vertices[e.a],o=t.vertices[e.b],a=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,o,a)},randomPointsInGeometry:function(e,t){function r(e){function t(r,i){if(r>i)return r;var o=r+Math.floor((i-r)/2);return l[o]>e?t(r,o-1):l[o]<e?t(o+1,i):o}var r=t(0,l.length-1);return r}var i,o,a=e.faces,n=e.vertices,s=a.length,h=0,l=[],c,u,p,f;for(o=0;s>o;o++)i=a[o],c=n[i.a],u=n[i.b],p=n[i.c],i._area=THREE.GeometryUtils.triangleArea(c,u,p),h+=i._area,l[o]=h;var E,d,m=[],g={};for(o=0;t>o;o++)E=THREE.Math.random16()*h,d=r(E),m[o]=THREE.GeometryUtils.randomPointInFace(a[d],e,!0),g[d]?g[d]+=1:g[d]=1;return m},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){return e.subVectors(i,r),t.subVectors(o,r),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},triangulateQuads:function(e){var t,r,i,o,a=[],n=[];for(t=0,r=e.faceVertexUvs.length;r>t;t++)n[t]=[];for(t=0,r=e.faces.length;r>t;t++){var s=e.faces[t];for(a.push(s),i=0,o=e.faceVertexUvs.length;o>i;i++)n[i].push(e.faceVertexUvs[i][t])}e.faces=a,e.faceVertexUvs=n,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r,i){var o=new Image,a=new THREE.Texture(o,t),n=new THREE.ImageLoader;return n.crossOrigin=this.crossOrigin,n.load(e,function(e){a.image=e,a.needsUpdate=!0,r&&r(a)}),a.sourceFile=e,a},loadCompressedTexture:function(e,t,r,i){var o=new THREE.CompressedTexture;o.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,r&&r(o)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},loadTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.Texture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var n=0,s=e.length;s>n;++n){var h=new Image;o[n]=h,h.onload=function(){o.loadCount+=1,6===o.loadCount&&(a.needsUpdate=!0,r&&r(a))},h.onerror=i,h.crossOrigin=this.crossOrigin,h.src=e[n]}return a},loadCompressedTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var n=function(e,t){return function(){var i=e.response,n=THREE.ImageUtils.parseDDS(i,!0);t.format=n.format,t.mipmaps=n.mipmaps,t.width=n.width,t.height=n.height,o.loadCount+=1,6===o.loadCount&&(a.format=n.format,a.needsUpdate=!0,r&&r(a))}};if(e instanceof Array)for(var s=0,h=e.length;h>s;++s){var l={};o[s]=l;var c=new XMLHttpRequest;c.onload=n(c,l),c.onerror=i;var u=e[s];c.open("GET",u,!0),c.responseType="arraybuffer",c.send(null)}else{var u=e,c=new XMLHttpRequest;c.onload=function(){var e=c.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,n=0;i>n;n++){o[n]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[n].mipmaps.push(t.mipmaps[n*t.mipmapCount+s]),o[n].format=t.format,o[n].width=t.width,o[n].height=t.height}a.format=t.format,a.needsUpdate=!0,r&&r(a)}},c.onerror=i,c.open("GET",u,!0),c.responseType="arraybuffer",c.send(null)}return a},parseDDS:function(e,t){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}var o={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},a=542327876,n=1,s=2,h=4,l=8,c=4096,u=131072,p=524288,f=8388608,E=8,d=4194304,m=4096,g=512,v=1024,T=2048,y=4096,R=8192,x=16384,H=32768,_=2097152,b=1,w=2,M=4,S=64,A=512,C=131072,P=r("DXT1"),L=r("DXT3"),D=r("DXT5"),F=31,V=0,U=1,z=2,B=3,N=4,O=7,I=20,k=21,G=27,j=28,W=29,X=30,Y=new Int32Array(e,0,F);if(Y[V]!==a)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),o;if(!Y[I]&M)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),o;var q,K=Y[k];switch(K){case P:q=8,o.format=THREE.RGB_S3TC_DXT1_Format;break;case L:q=16,o.format=THREE.RGBA_S3TC_DXT3_Format;break;case D:q=16,o.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",i(K)),o}o.mipmapCount=1,Y[z]&u&&t!==!1&&(o.mipmapCount=Math.max(1,Y[O])),o.isCubemap=Y[j]&g?!0:!1,o.width=Y[N],o.height=Y[B];for(var Q=Y[U]+4,Z=o.width,J=o.height,et=o.isCubemap?6:1,tt=0;et>tt;tt++){for(var rt=0;rt<o.mipmapCount;rt++){var it=Math.max(4,Z)/4*Math.max(4,J)/4*q,ot=new Uint8Array(e,Q,it),at={data:ot,width:Z,height:J};o.mipmaps.push(at),Q+=it,Z=Math.max(.5*Z,1),J=Math.max(.5*J,1)}Z=o.width,J=o.height}return o},getNormalMap:function(e,t){var r=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},o=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var a=e.width,n=e.height,s=document.createElement("canvas");s.width=a,s.height=n;var h=s.getContext("2d");h.drawImage(e,0,0);for(var l=h.getImageData(0,0,a,n).data,c=h.createImageData(a,n),u=c.data,p=0;a>p;p++)for(var f=0;n>f;f++){var E=0>f-1?0:f-1,d=f+1>n-1?n-1:f+1,m=0>p-1?0:p-1,g=p+1>a-1?a-1:p+1,v=[],T=[0,0,l[4*(f*a+p)]/255*t];v.push([-1,0,l[4*(f*a+m)]/255*t]),v.push([-1,-1,l[4*(E*a+m)]/255*t]),v.push([0,-1,l[4*(E*a+p)]/255*t]),v.push([1,-1,l[4*(E*a+g)]/255*t]),v.push([1,0,l[4*(f*a+g)]/255*t]),v.push([1,1,l[4*(d*a+g)]/255*t]),v.push([0,1,l[4*(d*a+p)]/255*t]),v.push([-1,1,l[4*(d*a+m)]/255*t]);for(var y=[],R=v.length,x=0;R>x;x++){var H=v[x],_=v[(x+1)%R];H=i(H,T),_=i(_,T),y.push(o(r(H,_)))}for(var b=[0,0,0],x=0;x<y.length;x++)b[0]+=y[x][0],b[1]+=y[x][1],b[2]+=y[x][2];b[0]/=y.length,b[1]/=y.length,b[2]/=y.length;var w=4*(f*a+p);u[w]=(b[0]+1)/2*255|0,u[w+1]=(b[1]+1)/2*255|0,u[w+2]=255*b[2]|0,u[w+3]=255}return h.putImageData(c,0,0),s},generateDataTexture:function(e,t,r){for(var i=e*t,o=new Uint8Array(3*i),a=Math.floor(255*r.r),n=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;i>h;h++)o[3*h]=a,o[3*h+1]=n,o[3*h+2]=s;var l=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,o=t.length;o>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;var i=r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t=[],r=[],i,o,a=this.getFace(),n=this.size/a.resolution,s=0,h=String(e).split(""),l=h.length,c=[];for(i=0;l>i;i++){var u=new THREE.Path,p=this.extractGlyphPoints(h[i],a,n,s,u);s+=p.offset,c.push(p.path)}var f=s/2;return{paths:c,offset:f}},extractGlyphPoints:function(e,t,r,i,o){var a=[],n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,b=t.glyphs[e]||t.glyphs["?"];if(b){if(b.o)for(l=b._cachedOutline||(b._cachedOutline=b.o.split(" ")),u=l.length,p=r,f=r,n=0;u>n;)switch(c=l[n++]){case"m":E=l[n++]*p+i,d=l[n++]*f,o.moveTo(E,d);break;case"l":E=l[n++]*p+i,d=l[n++]*f,o.lineTo(E,d);break;case"q":if(m=l[n++]*p+i,g=l[n++]*f,y=l[n++]*p+i,R=l[n++]*f,o.quadraticCurveTo(y,R,m,g),_=a[a.length-1])for(v=_.x,T=_.y,s=1,h=this.divisions;h>=s;s++)var w=s/h,M=THREE.Shape.Utils.b2(w,v,y,m),S=THREE.Shape.Utils.b2(w,T,R,g);break;case"b":if(m=l[n++]*p+i,g=l[n++]*f,y=l[n++]*p+i,R=l[n++]*-f,x=l[n++]*p+i,H=l[n++]*-f,o.bezierCurveTo(m,g,y,R,x,H),_=a[a.length-1])for(v=_.x,T=_.y,s=1,h=this.divisions;h>=s;s++)var w=s/h,M=THREE.Shape.Utils.b3(w,v,y,x,m),S=THREE.Shape.Utils.b3(w,T,R,H,g)}return{offset:b.ha*r,path:o}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,o=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",n=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=o,THREE.FontUtils.weight=a,THREE.FontUtils.style=n;for(var s=THREE.FontUtils.drawText(e),h=s.paths,l=[],c=0,u=h.length;u>c;c++)Array.prototype.push.apply(l,h[c].toShapes());return l},function(e){var t=1e-10,r=function(e,t){var r=e.length;if(3>r)return null;var a=[],n=[],s=[],h,l,c;if(i(e)>0)for(l=0;r>l;l++)n[l]=l;else for(l=0;r>l;l++)n[l]=r-1-l;var u=r,p=2*u;for(l=u-1;u>2;){if(p--<=0)return console.log("Warning, unable to triangulate polygon!"),t?s:a;if(h=l,h>=u&&(h=0),l=h+1,l>=u&&(l=0),c=l+1,c>=u&&(c=0),o(e,h,l,c,u,n)){var f,E,d,m,g;for(f=n[h],E=n[l],d=n[c],a.push([e[f],e[E],e[d]]),s.push([n[h],n[l],n[c]]),m=l,g=l+1;u>g;m++,g++)n[m]=n[g];u--,p=2*u}}return t?s:a},i=function(e){for(var t=e.length,r=0,i=t-1,o=0;t>o;i=o++)r+=e[i].x*e[o].y-e[o].x*e[i].y;return.5*r},o=function(e,r,i,o,a,n){var s,h,l,c,u,p,f,E,d;if(h=e[n[r]].x,l=e[n[r]].y,c=e[n[i]].x,u=e[n[i]].y,p=e[n[o]].x,f=e[n[o]].y,t>(c-h)*(f-l)-(u-l)*(p-h))return!1;var m,g,v,T,y,R,x,H,_,b,w,M,S,A,C;for(m=p-c,g=f-u,v=h-p,T=l-f,y=c-h,R=u-l,s=0;a>s;s++)if(s!==r&&s!==i&&s!==o&&(E=e[n[s]].x,d=e[n[s]].y,x=E-h,H=d-l,_=E-c,b=d-u,w=E-p,M=d-f,C=m*b-g*_,S=y*H-R*x,A=v*M-T*w,C>=-t&&A>=-t&&S>=-t))return!1;return!0};return e.Triangulate=r,e.Triangulate.area=i,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r,i=this.getPoint(0),o,a=0;for(t.push(0),o=1;e>=o;o++)r=this.getPoint(o/e),a+=r.distanceTo(i),t.push(a),i=r;return this.cacheArcLengths=t,t},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r=this.getLengths(),i=0,o=r.length,a;a=t?t:e*r[o-1];for(var n=0,s=o-1,h;s>=n;)if(i=Math.floor(n+(s-n)/2),h=r[i]-a,0>h)n=i+1;else{if(!(h>0)){s=i;break}s=i-1}if(i=s,r[i]==a){var l=i/(o-1);return l}var c=r[i],u=r[i+1],p=u-c,f=(a-c)/p,l=(i+f)/(o-1);return l},THREE.Curve.prototype.getTangent=function(e){var t=1e-4,r=e-t,i=e+t;0>r&&(r=0),i>1&&(i=1);var o=this.getPoint(r),a=this.getPoint(i),n=a.clone().sub(o);return n.normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,o){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*o},tangentSpline:function(e,t,r,i,o){var a=6*e*e-6*e,n=3*e*e-4*e+1,s=-6*e*e+6*e,h=3*e*e-2*e;return a+n+s+h},interpolate:function(e,t,r,i,o){var a=.5*(r-e),n=.5*(i-t),s=o*o,h=o*s;return(2*t-2*r+a+n)*h+(-3*t+3*r-2*a-n)*s+a*o+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),i=0,o,a;i<r.length;){if(r[i]>=t){o=r[i]-t,a=this.curves[i];var n=1-o/a.getLength();return a.getPointAt(n);break}i++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,r,i=this.curves.length;for(r=0;i>r;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,r,i,o,a,n;t=r=Number.NEGATIVE_INFINITY,o=a=Number.POSITIVE_INFINITY;var s,h,l,c,u=e[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=e.length;l>h;h++)s=e[h],s.x>t?t=s.x:s.x<o&&(o=s.x),s.y>r?r=s.y:s.y<a&&(a=s.y),u&&(s.z>i?i=s.z:s.z<n&&(n=s.z)),c.add(s);var p={minX:o,minY:a,maxX:t,maxY:r,centroid:c.divideScalar(l)};return u&&(p.maxZ=i,p.minZ=n),p},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r=this.getPoints(e),i,o;for(t||(t=this.bends),i=0,o=t.length;o>i;i++)r=this.getWrapPoints(r,t[i]);return r},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r=this.getSpacedPoints(e),i,o;for(t||(t=this.bends),i=0,o=t.length;o>i;i++)r=this.getWrapPoints(r,t[i]);return r},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r=this.getBoundingBox(),i,o,a,n,s,h;for(i=0,o=e.length;o>i;i++){a=e[i],n=a.x,s=a.y,h=n/r.maxX,h=t.getUtoTmapping(h,n);var l=t.getPoint(h),c=t.getNormalVector(h).multiplyScalar(s);a.x=l.x+c.x,a.y=l.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,o=i[i.length-2],a=i[i.length-1],n=new THREE.LineCurve(new THREE.Vector2(o,a),new THREE.Vector2(e,t));this.curves.push(n),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var o=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,n=a[a.length-2],s=a[a.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(n,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:o})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,o,a){var n=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(o,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:n})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],o=r[r.length-1],a=[new THREE.Vector2(i,o)];Array.prototype.push.apply(a,e);var n=new THREE.SplineCurve(a);this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,o,a){var n=this.actions[this.actions.length-1].args,s=n[n.length-2],h=n[n.length-1];this.absarc(e+s,t+h,r,i,o,a)},THREE.Path.prototype.absarc=function(e,t,r,i,o,a){this.absellipse(e,t,r,r,i,o,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,o,a,n){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(e+h,t+l,r,i,o,a,n)},THREE.Path.prototype.absellipse=function(e,t,r,i,o,a,n){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,o,a,n);this.curves.push(h);var l=h.getPoint(n?1:0);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;e>i;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r=[],i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y;for(i=0,o=this.actions.length;o>i;i++)switch(a=this.actions[i],n=a.action,s=a.args,n){case THREE.PathActions.MOVE_TO:r.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(h=s[2],l=s[3],p=s[0],f=s[1],r.length>0?(m=r[r.length-1],E=m.x,d=m.y):(m=this.actions[i-1].args,E=m[m.length-2],d=m[m.length-1]),g=1;e>=g;g++)v=g/e,T=THREE.Shape.Utils.b2(v,E,p,h),y=THREE.Shape.Utils.b2(v,d,f,l),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.BEZIER_CURVE_TO:for(h=s[4],l=s[5],p=s[0],f=s[1],c=s[2],u=s[3],r.length>0?(m=r[r.length-1],E=m.x,d=m.y):(m=this.actions[i-1].args,E=m[m.length-2],d=m[m.length-1]),g=1;e>=g;g++)v=g/e,T=THREE.Shape.Utils.b3(v,E,p,c,h),y=THREE.Shape.Utils.b3(v,d,f,u,l),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.CSPLINE_THRU:m=this.actions[i-1].args;var R=new THREE.Vector2(m[m.length-2],m[m.length-1]),x=[R],H=e*s[0].length;x=x.concat(s[0]);var _=new THREE.SplineCurve(x);for(g=1;H>=g;g++)r.push(_.getPointAt(g/H));break;case THREE.PathActions.ARC:var b=s[0],w=s[1],M=s[2],S=s[3],A=s[4],C=!!s[5],P=A-S,L,D=2*e;for(g=1;D>=g;g++)v=g/D,C||(v=1-v),L=S+v*P,T=b+M*Math.cos(L),y=w+M*Math.sin(L),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.ELLIPSE:var b=s[0],w=s[1],F=s[2],V=s[3],S=s[4],A=s[5],C=!!s[6],P=A-S,L,D=2*e;for(g=1;D>=g;g++)v=g/D,C||(v=1-v),L=S+v*P,T=b+F*Math.cos(L),y=w+V*Math.sin(L),r.push(new THREE.Vector2(T,y))}var U=r[r.length-1],z=1e-10;return Math.abs(U.x-r[0].x)<z&&Math.abs(U.y-r[0].y)<z&&r.splice(r.length-1,1),t&&r.push(r[0]),r},THREE.Path.prototype.toShapes=function(e){var t,r,i,o,a,n=[],s=new THREE.Path;for(t=0,r=this.actions.length;r>t;t++)i=this.actions[t],a=i.args,o=i.action,o==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(n.push(s),s=new THREE.Path),s[o].apply(s,a);if(0!=s.actions.length&&n.push(s),0==n.length)return[];var h,l,c,u=[];if(1==n.length)return l=n[0],c=new THREE.Shape,c.actions=l.actions,c.curves=l.curves,u.push(c),u;var p=!THREE.Shape.Utils.isClockWise(n[0].getPoints());if(p=e?!p:p)for(c=new THREE.Shape,t=0,r=n.length;r>t;t++)l=n[t],h=THREE.Shape.Utils.isClockWise(l.getPoints()),h=e?!h:h,h?(c.actions=l.actions,c.curves=l.curves,u.push(c),c=new THREE.Shape):c.holes.push(l);else{for(c=void 0,t=0,r=n.length;r>t;t++)l=n[t],h=THREE.Shape.Utils.isClockWise(l.getPoints()),h=e?!h:h,h?(c&&u.push(c),c=new THREE.Shape,c.actions=l.actions,c.curves=l.curves):c.holes.push(l);u.push(c)}return u},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){var t=new THREE.ExtrudeGeometry(this,e);return t},THREE.Shape.prototype.makeGeometry=function(e){var t=new THREE.ShapeGeometry(this,e);return t},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var r=e.concat(),i=r.concat(),o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_=[];for(p=0;p<t.length;p++){for(E=t[p],Array.prototype.push.apply(i,E),d=Number.POSITIVE_INFINITY,f=0;f<E.length;f++){v=E[f];var b=[];for(g=0;g<r.length;g++)T=r[g],m=v.distanceToSquared(T),b.push(m),d>m&&(d=m,h=f,l=g)}o=l-1>=0?l-1:r.length-1,n=h-1>=0?h-1:E.length-1;var w=[E[h],r[l],r[o]],M=THREE.FontUtils.Triangulate.area(w),S=[E[h],E[n],r[l]],A=THREE.FontUtils.Triangulate.area(S),C=1,P=-1,L=l,D=h;l+=C,h+=P,0>l&&(l+=r.length),l%=r.length,0>h&&(h+=E.length),h%=E.length,o=l-1>=0?l-1:r.length-1,n=h-1>=0?h-1:E.length-1,w=[E[h],r[l],r[o]];var F=THREE.FontUtils.Triangulate.area(w);S=[E[h],E[n],r[l]];var V=THREE.FontUtils.Triangulate.area(S);M+A>F+V&&(l=L,h=D,0>l&&(l+=r.length),l%=r.length,0>h&&(h+=E.length),h%=E.length,o=l-1>=0?l-1:r.length-1,n=h-1>=0?h-1:E.length-1),y=r.slice(0,l),R=r.slice(l),x=E.slice(h),H=E.slice(0,h);var U=[E[h],r[l],r[o]],z=[E[h],E[n],r[l]];_.push(U),_.push(z),r=y.concat(x).concat(H).concat(R)}return{shape:r,isolatedPts:_,allpoints:i}},triangulateShape:function(e,t){var r=THREE.Shape.Utils.removeHoles(e,t),i=r.shape,o=r.allpoints,a=r.isolatedPts,n=THREE.FontUtils.Triangulate(i,!1),s,h,l,c,u,p,f={},E={};for(s=0,h=o.length;h>s;s++)u=o[s].x+":"+o[s].y,void 0!==f[u]&&console.log("Duplicate point",u),f[u]=s;for(s=0,h=n.length;h>s;s++)for(c=n[s],l=0;3>l;l++)u=c[l].x+":"+c[l].y,p=f[u],void 0!==p&&(c[l]=p);for(s=0,h=a.length;h>s;s++)for(c=a[s],l=0;3>l;l++)u=c[l].x+":"+c[l].y,p=f[u],void 0!==p&&(c[l]=p);return n.concat(a)},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){var r=1-e;return 3*r*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,o){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,o)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)
},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,r=[],i=this.points,o,a,n;return o=(i.length-1)*e,a=Math.floor(o),n=o-a,r[0]=0==a?a:a-1,r[1]=a,r[2]=a>i.length-2?i.length-1:a+1,r[3]=a>i.length-3?i.length-1:a+2,t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,n),t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,n),t},THREE.EllipseCurve=function(e,t,r,i,o,a,n){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=n},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var r=this.aStartAngle+e*t,i=this.aX+this.xRadius*Math.cos(r),o=this.aY+this.yRadius*Math.sin(r);return new THREE.Vector2(i,o)},THREE.ArcCurve=function(e,t,r,i,o,a){THREE.EllipseCurve.call(this,e,t,r,r,i,o,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,o,a,n;o=(i.length-1)*e,a=Math.floor(o),n=o-a,r[0]=0==a?a:a-1,r[1]=a,r[2]=a>i.length-2?i.length-1:a+1,r[3]=a>i.length-3?i.length-1:a+2;var s=i[r[0]],h=i[r[1]],l=i[r[2]],c=i[r[3]];return t.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,n),t.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,n),t.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,n),t}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,o,a,n;return o=(i.length-0)*e,a=Math.floor(o),n=o-a,a+=a>0?0:(Math.floor(Math.abs(a)/i.length)+1)*i.length,r[0]=(a-1)%i.length,r[1]=a%i.length,r[2]=(a+1)%i.length,r[3]=(a+2)%i.length,t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,n),t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,n),t.z=THREE.Curve.Utils.interpolate(i[r[0]].z,i[r[1]].z,i[r[2]].z,i[r[3]].z,n),t}),THREE.AnimationHandler=function(){var e=[],t={},r={};r.update=function(t){for(var r=0;r<e.length;r++)e[r].update(t)},r.addToUpdate=function(t){-1===e.indexOf(t)&&e.push(t)},r.removeFromUpdate=function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},r.add=function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,o(e)},r.get=function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},r.parse=function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;r<e.bones.length;r++)t.push(e.bones[r]);else i(e,t);return t};var i=function(e,t){t.push(e);for(var r=0;r<e.children.length;r++)i(e.children[r],t)},o=function(e){if(e.initialized!==!0){for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(var o={},r=0;r<e.hierarchy[t].keys.length;r++)for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++){var n=e.hierarchy[t].keys[r].morphTargets[a];o[n]=-1}e.hierarchy[t].usedMorphTargets=o;for(var r=0;r<e.hierarchy[t].keys.length;r++){var s={};for(var n in o){for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++)if(e.hierarchy[t].keys[r].morphTargets[a]===n){s[n]=e.hierarchy[t].keys[r].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[r].morphTargets.length&&(s[n]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=s}}for(var r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(var r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}var h=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(var t=0;t<e.hierarchy.length;t++)e.JIT.hierarchy.push(new Array(h));e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==r?r:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var r,i=this.hierarchy.length,o;for(r=0;i>r;r++){o=this.hierarchy[r],o.matrixAutoUpdate=!0,void 0===o.animationCache&&(o.animationCache={},o.animationCache.prevKey={pos:0,rot:0,scl:0},o.animationCache.nextKey={pos:0,rot:0,scl:0},o.animationCache.originalMatrix=o instanceof THREE.Bone?o.skinMatrix:o.matrix);var a=o.animationCache.prevKey,n=o.animationCache.nextKey;a.pos=this.data.hierarchy[r].keys[0],a.rot=this.data.hierarchy[r].keys[0],a.scl=this.data.hierarchy[r].keys[0],n.pos=this.getNextKeyWith("pos",r,1),n.rot=this.getNextKeyWith("rot",r,1),n.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(this.isPlaying!==!1){var t=["pos","rot","scl"],r,i,o,a,n,s,h,l,c,u,p=this.data.JIT.hierarchy,f,E,d,m,g;this.currentTime+=e*this.timeScale,E=this.currentTime,f=this.currentTime=this.currentTime%this.data.length,u=parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);for(var v=0,T=this.hierarchy.length;T>v;v++){l=this.hierarchy[v],c=l.animationCache;for(var y=0;3>y;y++){if(r=t[y],s=c.prevKey[r],h=c.nextKey[r],h.time<=E){if(E>f){if(!this.loop)return void this.stop();for(s=this.data.hierarchy[v].keys[0],h=this.getNextKeyWith(r,v,1);h.time<f;)s=h,h=this.getNextKeyWith(r,v,h.index+1)}else do s=h,h=this.getNextKeyWith(r,v,h.index+1);while(h.time<f);c.prevKey[r]=s,c.nextKey[r]=h}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0,i=(f-s.time)/(h.time-s.time),a=s[r],n=h[r],(0>i||i>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+i+" on bone "+v),i=0>i?0:1),"pos"===r?(o=l.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(o.x=a[0]+(n[0]-a[0])*i,o.y=a[1]+(n[1]-a[1])*i,o.z=a[2]+(n[2]-a[2])*i):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",v,s.index-1).pos,this.points[1]=a,this.points[2]=n,this.points[3]=this.getNextKeyWith("pos",v,h.index+1).pos,i=.33*i+.33,d=this.interpolateCatmullRom(this.points,i),o.x=d[0],o.y=d[1],o.z=d[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(m=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(m[0],m[1],m[2]),this.target.sub(o),this.target.y=0,this.target.normalize(),g=Math.atan2(this.target.x,this.target.z),l.rotation.set(0,g,0)))):"rot"===r?THREE.Quaternion.slerp(a,n,l.quaternion,i):"scl"===r&&(o=l.scale,o.x=a[0]+(n[0]-a[0])*i,o.y=a[1]+(n[1]-a[1])*i,o.z=a[2]+(n[2]-a[2])*i)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var r=[],i=[],o,a,n,s,h,l,c,u,p;return o=(e.length-1)*t,a=Math.floor(o),n=o-a,r[0]=0===a?a:a-1,r[1]=a,r[2]=a>e.length-2?a:a+1,r[3]=a>e.length-3?a:a+2,l=e[r[0]],c=e[r[1]],u=e[r[2]],p=e[r[3]],s=n*n,h=n*s,i[0]=this.interpolate(l[0],c[0],u[0],p[0],n,s,h),i[1]=this.interpolate(l[1],c[1],u[1],p[1],n,s,h),i[2]=this.interpolate(l[2],c[2],u[2],p[2],n,s,h),i},THREE.Animation.prototype.interpolate=function(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==r?r:!0;for(var i=0,o=this.hierarchy.length;o>i;i++){var a=this.data.hierarchy[i].keys,n=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(a.length&&n){for(var h=0;h<n.length;h++){var l=n[h],c=this.getNextKeyWith(l,i,0);c&&c.apply(l)}s.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var r,i=this.hierarchy.length,o,a;for(r=0;i>r;r++){o=this.hierarchy[r],a=this.data.hierarchy[r],void 0===a.animationCache&&(a.animationCache={},a.animationCache.prevKey=null,a.animationCache.nextKey=null,a.animationCache.originalMatrix=o instanceof THREE.Bone?o.skinMatrix:o.matrix);var n=this.data.hierarchy[r].keys;n.length&&(a.animationCache.prevKey=n[0],a.animationCache.nextKey=n[1],this.startTime=Math.min(n[0].time,this.startTime),this.endTime=Math.max(n[n.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,r,i,o,a,n=this.data.JIT.hierarchy,s,h,l;if(this.currentTime+=e*this.timeScale,h=this.currentTime,s=this.currentTime=this.currentTime%this.data.length,s<this.startTimeMs&&(s=this.currentTime=this.startTimeMs+s),a=parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10),l=h>s,l&&!this.loop){for(var c=0,u=this.hierarchy.length;u>c;c++){var p=this.data.hierarchy[c].keys,f=this.data.hierarchy[c].sids,E=p.length-1,d=this.hierarchy[c];if(p.length){for(var m=0;m<f.length;m++){var g=f[m],v=this.getPrevKeyWith(g,c,E);v&&v.apply(g)}this.data.hierarchy[c].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}return void this.stop()}if(!(s<this.startTime)){for(var c=0,u=this.hierarchy.length;u>c;c++){i=this.hierarchy[c],o=this.data.hierarchy[c];var p=o.keys,T=o.animationCache;if(this.JITCompile&&void 0!==n[c][a])i instanceof THREE.Bone?(i.skinMatrix=n[c][a],i.matrixWorldNeedsUpdate=!1):(i.matrix=n[c][a],i.matrixWorldNeedsUpdate=!0);else if(p.length){if(this.JITCompile&&T&&(i instanceof THREE.Bone?i.skinMatrix=T.originalMatrix:i.matrix=T.originalMatrix),t=T.prevKey,r=T.nextKey,t&&r){if(r.time<=h){if(l&&this.loop)for(t=p[0],r=p[1];r.time<s;)t=r,r=p[t.index+1];else if(!l)for(var y=p.length-1;r.time<s&&r.index!==y;)t=r,r=p[t.index+1];T.prevKey=t,T.nextKey=r}r.time>=s?t.interpolate(r,s):t.interpolate(r,r.time)}this.data.hierarchy[c].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===n[0][a]){this.hierarchy[0].updateMatrixWorld(!0);for(var c=0;c<this.hierarchy.length;c++)n[c][a]=this.hierarchy[c]instanceof THREE.Bone?this.hierarchy[c].skinMatrix.clone():this.hierarchy[c].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=90,o=1,a=new THREE.PerspectiveCamera(i,o,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(1,0,0)),this.add(a);var n=new THREE.PerspectiveCamera(i,o,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var s=new THREE.PerspectiveCamera(i,o,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var h=new THREE.PerspectiveCamera(i,o,e,t);h.up.set(0,0,-1),h.lookAt(new THREE.Vector3(0,-1,0)),this.add(h);var l=new THREE.PerspectiveCamera(i,o,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,1)),this.add(l);var c=new THREE.PerspectiveCamera(i,o,e,t);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,-1)),this.add(c),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,a,r),r.activeCubeFace=1,e.render(t,n,r),r.activeCubeFace=2,e.render(t,s,r),r.activeCubeFace=3,e.render(t,h,r),r.activeCubeFace=4,e.render(t,l,r),r.generateMipmaps=i,r.activeCubeFace=5,e.render(t,c,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,o,a,n){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,n),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,o),this.zoom=1,this.toPerspective();var s=e/t},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=this.cameraP.near,i=this.cameraP.far,o=(r+i)/2,a=Math.tan(e/2)*o,n=2*a,s=n*t,h=s/2;a/=this.zoom,h/=this.zoom,this.cameraO.left=-h,this.cameraO.right=h,this.cameraO.top=a,this.cameraO.bottom=-a,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),e=e||50,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var o,a=[],n=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(n),a.push(s),o=0;t>=o;o++){var h=new THREE.Vector3,l=r+o/t*i;h.x=e*Math.cos(l),h.y=e*Math.sin(l),this.vertices.push(h),a.push(new THREE.Vector2((h.x/e+1)/2,(h.y/e+1)/2))}var c=new THREE.Vector3(0,0,1);for(o=1;t>=o;o++){var u=o,p=o+1,f=0;this.faces.push(new THREE.Face3(u,p,f,[c,c,c])),this.faceVertexUvs[0].push([a[o],a[o+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,o,a){function n(e,t,r,i,o,a,n,h){var l,c,u,p=s.widthSegments,f=s.heightSegments,E=o/2,d=a/2,m=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",f=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",p=s.depthSegments);var g=p+1,v=f+1,T=o/p,y=a/f,R=new THREE.Vector3;for(R[l]=n>0?1:-1,u=0;v>u;u++)for(c=0;g>c;c++){var x=new THREE.Vector3;x[e]=(c*T-E)*r,x[t]=(u*y-d)*i,x[l]=n,s.vertices.push(x)}for(u=0;f>u;u++)for(c=0;p>c;c++){var H=c+g*u,_=c+g*(u+1),b=c+1+g*(u+1),w=c+1+g*u,M=new THREE.Vector2(c/p,1-u/f),S=new THREE.Vector2(c/p,1-(u+1)/f),A=new THREE.Vector2((c+1)/p,1-(u+1)/f),C=new THREE.Vector2((c+1)/p,1-u/f),P=new THREE.Face3(H+m,_+m,w+m);P.normal.copy(R),P.vertexNormals.push(R.clone(),R.clone(),R.clone()),P.materialIndex=h,s.faces.push(P),s.faceVertexUvs[0].push([M,S,C]),P=new THREE.Face3(_+m,b+m,w+m),P.normal.copy(R),P.vertexNormals.push(R.clone(),R.clone(),R.clone()),P.materialIndex=h,s.faces.push(P),s.faceVertexUvs[0].push([S.clone(),A,C.clone()])}}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=o||1,this.depthSegments=a||1;var h=this.width/2,l=this.height/2,c=this.depth/2;n("z","y",-1,-1,this.depth,this.height,h,0),n("z","y",1,-1,this.depth,this.height,-h,1),n("x","z",1,1,this.width,this.depth,l,2),n("x","z",1,-1,this.width,this.depth,-l,3),n("x","y",1,-1,this.width,this.height,c,4),n("x","y",-1,-1,this.width,this.height,-c,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),this.radiusTop=e=void 0!==e?e:20,this.radiusBottom=t=void 0!==t?t:20,this.height=r=void 0!==r?r:100,this.radialSegments=i=i||8,this.heightSegments=o=o||1,this.openEnded=a=void 0!==a?a:!1;var n=r/2,s,h,l=[],c=[];for(h=0;o>=h;h++){var u=[],p=[],f=h/o,E=f*(t-e)+e;for(s=0;i>=s;s++){var d=s/i,m=new THREE.Vector3;m.x=E*Math.sin(d*Math.PI*2),m.y=-f*r+n,m.z=E*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(d,1-f))}l.push(u),c.push(p)}var g=(t-e)/r,v,T;for(s=0;i>s;s++)for(0!==e?(v=this.vertices[l[0][s]].clone(),T=this.vertices[l[0][s+1]].clone()):(v=this.vertices[l[1][s]].clone(),T=this.vertices[l[1][s+1]].clone()),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*g).normalize(),T.setY(Math.sqrt(T.x*T.x+T.z*T.z)*g).normalize(),h=0;o>h;h++){var y=l[h][s],R=l[h+1][s],x=l[h+1][s+1],H=l[h][s+1],_=v.clone(),b=v.clone(),w=T.clone(),M=T.clone(),S=c[h][s].clone(),A=c[h+1][s].clone(),C=c[h+1][s+1].clone(),P=c[h][s+1].clone();this.faces.push(new THREE.Face3(y,R,H,[_,b,M])),this.faceVertexUvs[0].push([S,A,P]),this.faces.push(new THREE.Face3(R,x,H,[b,w,M])),this.faceVertexUvs[0].push([A,C,P])}if(a===!1&&e>0)for(this.vertices.push(new THREE.Vector3(0,n,0)),s=0;i>s;s++){var y=l[0][s],R=l[0][s+1],x=this.vertices.length-1,_=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),S=c[0][s].clone(),A=c[0][s+1].clone(),C=new THREE.Vector2(A.u,0);this.faces.push(new THREE.Face3(y,R,x,[_,b,w])),this.faceVertexUvs[0].push([S,A,C])}if(a===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,-n,0)),s=0;i>s;s++){var y=l[h][s+1],R=l[h][s],x=this.vertices.length-1,_=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),S=c[h][s+1].clone(),A=c[h][s].clone(),C=new THREE.Vector2(A.u,1);this.faces.push(new THREE.Face3(y,R,x,[_,b,w])),this.faceVertexUvs[0].push([S,A,C])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){return"undefined"==typeof e?void(e=[]):(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++){var o=e[i];this.addShape(o,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){return a(e,t,r)}function o(e,t,r){var i=Math.atan2(t.y-e.y,t.x-e.x),o=Math.atan2(r.y-e.y,r.x-e.x);i>o&&(o+=2*Math.PI);var a=(i+o)/2,n=-Math.cos(a),s=-Math.sin(a),h=new THREE.Vector2(n,s);return h}function a(e,t,r){var i=THREE.ExtrudeGeometry.__v1,a=THREE.ExtrudeGeometry.__v2,n=THREE.ExtrudeGeometry.__v3,s=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,l=THREE.ExtrudeGeometry.__v6,c,u,p,f,E,d;return i.set(e.x-t.x,e.y-t.y),a.set(e.x-r.x,e.y-r.y),c=i.normalize(),u=a.normalize(),n.set(-c.y,c.x),s.set(u.y,-u.x),h.copy(e).add(n),l.copy(e).add(s),h.equals(l)?s.clone():(h.copy(t).add(n),l.copy(r).add(s),p=c.dot(s),f=l.sub(h).dot(s),0===p&&(console.log("Either infinite or no solutions!"),console.log(0===f?"Its finite solutions.":"Too bad, no solutions.")),E=f/p,0>E?o(e,t,r):(d=c.multiplyScalar(E).add(h),d.sub(e).clone()))}function n(){if(m){var e=0,t=Y*e;for(tt=0;K>tt;tt++)q=O[tt],c(q[2]+t,q[1]+t,q[0]+t,!0);for(e=v+2*d,t=Y*e,tt=0;K>tt;tt++)q=O[tt],c(q[0]+t,q[1]+t,q[2]+t,!1)}else{for(tt=0;K>tt;tt++)q=O[tt],c(q[2],q[1],q[0],!0);for(tt=0;K>tt;tt++)q=O[tt],c(q[0]+Y*v,q[1]+Y*v,q[2]+Y*v,!1)}}function s(){var e=0;for(h(I,e),e+=I.length,P=0,L=B.length;L>P;P++)C=B[P],h(C,e),e+=C.length}function h(e,t){var r,i;for(tt=e.length;--tt>=0;){r=tt,i=tt-1,0>i&&(i=e.length-1);var o=0,a=v+2*d;for(o=0;a>o;o++){var n=Y*o,s=Y*(o+1),h=t+r+n,l=t+i+n,c=t+i+s,p=t+r+s;u(h,l,c,p,e,o,a,r,i)}}}function l(e,t,r){D.vertices.push(new THREE.Vector3(e,t,r))}function c(r,i,o,a){r+=V,i+=V,o+=V,D.faces.push(new THREE.Face3(r,i,o,null,null,x));var n=a?_.generateBottomUV(D,e,t,r,i,o):_.generateTopUV(D,e,t,r,i,o);D.faceVertexUvs[0].push(n)}function u(r,i,o,a,n,s,h,l,c){r+=V,i+=V,o+=V,a+=V,D.faces.push(new THREE.Face3(r,i,a,null,null,H)),D.faces.push(new THREE.Face3(i,o,a,null,null,H));var u=_.generateSideWallUV(D,e,n,t,r,i,o,a,s,h,l,c);D.faceVertexUvs[0].push([u[0],u[1],u[3]]),D.faceVertexUvs[0].push([u[1],u[2],u[3]])}var p=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,E=void 0!==t.bevelSize?t.bevelSize:f-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,T=t.extrudePath,y,R=!1,x=t.material,H=t.extrudeMaterial,_=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,b=this.shapebb,w,M,S,A;T&&(y=T.getSpacedPoints(v),R=!0,m=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,v,!1),M=new THREE.Vector3,S=new THREE.Vector3,A=new THREE.Vector3),m||(d=0,f=0,E=0);var C,P,L,D=this,F=[],V=this.vertices.length,U=e.extractPoints(g),z=U.shape,B=U.holes,N=!THREE.Shape.Utils.isClockWise(z);if(N){for(z=z.reverse(),P=0,L=B.length;L>P;P++)C=B[P],THREE.Shape.Utils.isClockWise(C)&&(B[P]=C.reverse());N=!1}var O=THREE.Shape.Utils.triangulateShape(z,B),I=z;for(P=0,L=B.length;L>P;P++)C=B[P],z=z.concat(C);for(var k,G,j,W,X,Y=z.length,q,K=O.length,Q,Z=I.length,J=180/Math.PI,et=[],tt=0,rt=I.length,it=rt-1,ot=tt+1;rt>tt;tt++,it++,ot++){it===rt&&(it=0),ot===rt&&(ot=0);var at=I[tt],nt=I[it],st=I[ot];et[tt]=i(I[tt],I[it],I[ot])}var ht=[],lt,ct=et.concat();for(P=0,L=B.length;L>P;P++){for(C=B[P],lt=[],tt=0,rt=C.length,it=rt-1,ot=tt+1;rt>tt;tt++,it++,ot++)it===rt&&(it=0),ot===rt&&(ot=0),lt[tt]=i(C[tt],C[it],C[ot]);ht.push(lt),ct=ct.concat(lt)}for(k=0;d>k;k++){for(j=k/d,W=f*(1-j),G=E*Math.sin(j*Math.PI/2),tt=0,rt=I.length;rt>tt;tt++)X=r(I[tt],et[tt],G),l(X.x,X.y,-W);for(P=0,L=B.length;L>P;P++)for(C=B[P],lt=ht[P],tt=0,rt=C.length;rt>tt;tt++)X=r(C[tt],lt[tt],G),l(X.x,X.y,-W)}for(G=E,tt=0;Y>tt;tt++)X=m?r(z[tt],ct[tt],G):z[tt],R?(S.copy(w.normals[0]).multiplyScalar(X.x),M.copy(w.binormals[0]).multiplyScalar(X.y),A.copy(y[0]).add(S).add(M),l(A.x,A.y,A.z)):l(X.x,X.y,0);var ut;for(ut=1;v>=ut;ut++)for(tt=0;Y>tt;tt++)X=m?r(z[tt],ct[tt],G):z[tt],R?(S.copy(w.normals[ut]).multiplyScalar(X.x),M.copy(w.binormals[ut]).multiplyScalar(X.y),A.copy(y[ut]).add(S).add(M),l(A.x,A.y,A.z)):l(X.x,X.y,p/v*ut);for(k=d-1;k>=0;k--){for(j=k/d,W=f*(1-j),G=E*Math.sin(j*Math.PI/2),tt=0,rt=I.length;rt>tt;tt++)X=r(I[tt],et[tt],G),l(X.x,X.y,p+W);for(P=0,L=B.length;L>P;P++)for(C=B[P],lt=ht[P],tt=0,rt=C.length;rt>tt;tt++)X=r(C[tt],lt[tt],G),R?l(X.x,X.y+y[v-1].y,y[v-1].x+W):l(X.x,X.y,p+W)}n(),s()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,o,a){var n=e.vertices[i].x,s=e.vertices[i].y,h=e.vertices[o].x,l=e.vertices[o].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(n,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(e,t,r,i,o,a){return this.generateTopUV(e,t,r,i,o,a)},generateSideWallUV:function(e,t,r,i,o,a,n,s,h,l,c,u){var p=e.vertices[o].x,f=e.vertices[o].y,E=e.vertices[o].z,d=e.vertices[a].x,m=e.vertices[a].y,g=e.vertices[a].z,v=e.vertices[n].x,T=e.vertices[n].y,y=e.vertices[n].z,R=e.vertices[s].x,x=e.vertices[s].y,H=e.vertices[s].z;return Math.abs(f-m)<.01?[new THREE.Vector2(p,1-E),new THREE.Vector2(d,1-g),new THREE.Vector2(v,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(f,1-E),new THREE.Vector2(m,1-g),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=void 0!==t.curveSegments?t.curveSegments:12,i=t.material,o=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,a=this.shapebb,n,s,h,l,c=this.vertices.length,u=e.extractPoints(r),p=u.shape,f=u.holes,E=!THREE.Shape.Utils.isClockWise(p);if(E){for(p=p.reverse(),n=0,s=f.length;s>n;n++)h=f[n],THREE.Shape.Utils.isClockWise(h)&&(f[n]=h.reverse());E=!1}var d=THREE.Shape.Utils.triangulateShape(p,f),m=p;for(n=0,s=f.length;s>n;n++)h=f[n],p=p.concat(h);var g,v=p.length,T,y=d.length,R,x=m.length;for(n=0;v>n;n++)g=p[n],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(n=0;y>n;n++){T=d[n];var H=T[0]+c,_=T[1]+c,b=T[2]+c;this.faces.push(new THREE.Face3(H,_,b,null,null,i)),this.faceVertexUvs[0].push(o.generateBottomUV(this,e,t,H,_,b))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var o=1/(e.length-1),a=1/t,n=0,s=t;s>=n;n++)for(var h=r+n*a*i,l=Math.cos(h),c=Math.sin(h),u=0,p=e.length;p>u;u++){var f=e[u],E=new THREE.Vector3;E.x=l*f.x-c*f.y,E.y=c*f.x+l*f.y,E.z=f.z,this.vertices.push(E)}for(var d=e.length,n=0,s=t;s>n;n++)for(var u=0,p=e.length-1;p>u;u++){var m=u+d*n,g=m,v=m+d,l=m+1+d,T=m+1,y=n*a,R=u*o,x=y+a,H=R+o;this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(v,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var o,a,n=e/2,s=t/2,h=this.widthSegments,l=this.heightSegments,c=h+1,u=l+1,p=this.width/h,f=this.height/l,E=new THREE.Vector3(0,0,1);for(a=0;u>a;a++)for(o=0;c>o;o++){var d=o*p-n,m=a*f-s;this.vertices.push(new THREE.Vector3(d,-m,0))}for(a=0;l>a;a++)for(o=0;h>o;o++){var g=o+c*a,v=o+c*(a+1),T=o+1+c*(a+1),y=o+1+c*a,R=new THREE.Vector2(o/h,1-a/l),x=new THREE.Vector2(o/h,1-(a+1)/l),H=new THREE.Vector2((o+1)/h,1-(a+1)/l),_=new THREE.Vector2((o+1)/h,1-a/l),b=new THREE.Face3(g,v,y);b.normal.copy(E),b.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(b),this.faceVertexUvs[0].push([R,x,_]),b=new THREE.Face3(v,T,y),b.normal.copy(E),b.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(b),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),e=e||0,t=t||50,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(3,i):8;var n,s,h=[],l=e,c=(t-e)/i;for(n=0;i>=n;n++){for(s=0;r>=s;s++){var u=new THREE.Vector3,p=o+s/r*a;u.x=l*Math.cos(p),u.y=l*Math.sin(p),this.vertices.push(u),h.push(new THREE.Vector2((u.x/l+1)/2,-(u.y/l+1)/2+1))}l+=c}var f=new THREE.Vector3(0,0,1);for(n=0;i>n;n++){var E=n*r;for(s=0;r>=s;s++){var p=s+E,d=p+n,m=p+r+n,g=p+r+1+n;
this.faces.push(new THREE.Face3(d,m,g,[f,f,f])),this.faceVertexUvs[0].push([h[d],h[m],h[g]]),d=p+n,m=p+r+1+n,g=p+1+n,this.faces.push(new THREE.Face3(d,m,g,[f,f,f])),this.faceVertexUvs[0].push([h[d],h[m],h[g]])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=r=Math.max(2,Math.floor(r)||6),this.phiStart=i=void 0!==i?i:0,this.phiLength=o=void 0!==o?o:2*Math.PI,this.thetaStart=a=void 0!==a?a:0,this.thetaLength=n=void 0!==n?n:Math.PI;var s,h,l=[],c=[];for(h=0;r>=h;h++){var u=[],p=[];for(s=0;t>=s;s++){var f=s/t,E=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+f*o)*Math.sin(a+E*n),d.y=e*Math.cos(a+E*n),d.z=e*Math.sin(i+f*o)*Math.sin(a+E*n),this.vertices.push(d),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-E))}l.push(u),c.push(p)}for(h=0;h<this.heightSegments;h++)for(s=0;s<this.widthSegments;s++){var m=l[h][s+1],g=l[h][s],v=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[T].clone().normalize(),_=c[h][s+1].clone(),b=c[h][s].clone(),w=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===this.radius?(this.faces.push(new THREE.Face3(m,v,T,[y,x,H])),this.faceVertexUvs[0].push([_,w,M])):Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(m,g,v,[y,R,x])),this.faceVertexUvs[0].push([_,b,w])):(this.faces.push(new THREE.Face3(m,g,T,[y,R,H])),this.faceVertexUvs[0].push([_,b,M]),this.faces.push(new THREE.Face3(g,v,T,[R,x,H])),this.faceVertexUvs[0].push([b.clone(),w,M.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,o){THREE.Geometry.call(this);var a=this;this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=o||2*Math.PI;for(var n=new THREE.Vector3,s=[],h=[],l=0;l<=this.radialSegments;l++)for(var c=0;c<=this.tubularSegments;c++){var u=c/this.tubularSegments*this.arc,p=l/this.radialSegments*Math.PI*2;n.x=this.radius*Math.cos(u),n.y=this.radius*Math.sin(u);var f=new THREE.Vector3;f.x=(this.radius+this.tube*Math.cos(p))*Math.cos(u),f.y=(this.radius+this.tube*Math.cos(p))*Math.sin(u),f.z=this.tube*Math.sin(p),this.vertices.push(f),s.push(new THREE.Vector2(c/this.tubularSegments,l/this.radialSegments)),h.push(f.clone().sub(n).normalize())}for(var l=1;l<=this.radialSegments;l++)for(var c=1;c<=this.tubularSegments;c++){var E=(this.tubularSegments+1)*l+c-1,d=(this.tubularSegments+1)*(l-1)+c-1,m=(this.tubularSegments+1)*(l-1)+c,g=(this.tubularSegments+1)*l+c,v=new THREE.Face3(E,d,g,[h[E],h[d],h[g]]);v.normal.add(h[E]),v.normal.add(h[d]),v.normal.add(h[g]),v.normal.normalize(),this.faces.push(v),this.faceVertexUvs[0].push([s[E].clone(),s[d].clone(),s[g].clone()]),v=new THREE.Face3(d,m,g,[h[d],h[m],h[g]]),v.normal.add(h[d]),v.normal.add(h[m]),v.normal.add(h[g]),v.normal.normalize(),this.faces.push(v),this.faceVertexUvs[0].push([s[d].clone(),s[m].clone(),s[g].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,o,a,n){function s(e,t,r,i,o){var a=Math.cos(e),n=Math.sin(e),s=t/r*e,h=Math.cos(s),l=i*(2+h)*.5*a,c=i*(2+h)*n*.5,u=o*i*Math.sin(s)*.5;return new THREE.Vector3(l,c,u)}THREE.Geometry.call(this);var h=this;this.radius=e||100,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=o||2,this.q=a||3,this.heightScale=n||1,this.grid=new Array(this.radialSegments);for(var l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,p=0;p<this.radialSegments;++p){this.grid[p]=new Array(this.tubularSegments);var f=p/this.radialSegments*2*this.p*Math.PI,E=s(f,this.q,this.p,this.radius,this.heightScale),d=s(f+.01,this.q,this.p,this.radius,this.heightScale);l.subVectors(d,E),c.addVectors(d,E),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize();for(var m=0;m<this.tubularSegments;++m){var g=m/this.tubularSegments*2*Math.PI,v=-this.tube*Math.cos(g),T=this.tube*Math.sin(g),y=new THREE.Vector3;y.x=E.x+v*c.x+T*u.x,y.y=E.y+v*c.y+T*u.y,y.z=E.z+v*c.z+T*u.z,this.grid[p][m]=h.vertices.push(y)-1}}for(var p=0;p<this.radialSegments;++p)for(var m=0;m<this.tubularSegments;++m){var R=(p+1)%this.radialSegments,x=(m+1)%this.tubularSegments,H=this.grid[p][m],_=this.grid[R][m],b=this.grid[R][x],w=this.grid[p][x],M=new THREE.Vector2(p/this.radialSegments,m/this.tubularSegments),S=new THREE.Vector2((p+1)/this.radialSegments,m/this.tubularSegments),A=new THREE.Vector2((p+1)/this.radialSegments,(m+1)/this.tubularSegments),C=new THREE.Vector2(p/this.radialSegments,(m+1)/this.tubularSegments);this.faces.push(new THREE.Face3(H,_,w)),this.faceVertexUvs[0].push([M,S,C]),this.faces.push(new THREE.Face3(_,b,w)),this.faceVertexUvs[0].push([S.clone(),A,C.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,o){function a(e,t,r){return n.vertices.push(new THREE.Vector3(e,t,r))-1}THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radialSegments=i||8,this.closed=o||!1,this.grid=[];var n=this,s,h,l,c=this.segments+1,u,p,f,E,d,m,g,v,T,y,R,x=new THREE.Vector3,H,_,b,w,M,S,A,C,P,L,D,F,V=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),U=V.tangents,z=V.normals,B=V.binormals;for(this.tangents=U,this.normals=z,this.binormals=B,H=0;c>H;H++)for(this.grid[H]=[],g=H/(c-1),R=e.getPointAt(g),s=U[H],h=z[H],l=B[H],_=0;_<this.radialSegments;_++)v=_/this.radialSegments*2*Math.PI,T=-this.radius*Math.cos(v),y=this.radius*Math.sin(v),x.copy(R),x.x+=T*h.x+y*l.x,x.y+=T*h.y+y*l.y,x.z+=T*h.z+y*l.z,this.grid[H][_]=a(x.x,x.y,x.z);for(H=0;H<this.segments;H++)for(_=0;_<this.radialSegments;_++)b=this.closed?(H+1)%this.segments:H+1,w=(_+1)%this.radialSegments,M=this.grid[H][_],S=this.grid[b][_],A=this.grid[b][w],C=this.grid[H][w],P=new THREE.Vector2(H/this.segments,_/this.radialSegments),L=new THREE.Vector2((H+1)/this.segments,_/this.radialSegments),D=new THREE.Vector2((H+1)/this.segments,(_+1)/this.radialSegments),F=new THREE.Vector2(H/this.segments,(_+1)/this.radialSegments),this.faces.push(new THREE.Face3(M,S,C)),this.faceVertexUvs[0].push([P,L,F]),this.faces.push(new THREE.Face3(S,A,C)),this.faceVertexUvs[0].push([L.clone(),D,F.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){function i(e){c[0]=new THREE.Vector3,u[0]=new THREE.Vector3,void 0===e&&(e=new THREE.Vector3(0,0,1)),c[0].crossVectors(e,l[0]).normalize(),u[0].crossVectors(l[0],c[0]).normalize()}function o(){var t=e.getTangentAt(m);c[0]=(new THREE.Vector3).subVectors(t,l[0]).normalize(),u[0]=(new THREE.Vector3).crossVectors(l[0],c[0]),c[0].crossVectors(u[0],l[0]).normalize(),u[0].crossVectors(l[0],c[0]).normalize()}function a(){c[0]=new THREE.Vector3,u[0]=new THREE.Vector3,g=Number.MAX_VALUE,v=Math.abs(l[0].x),T=Math.abs(l[0].y),y=Math.abs(l[0].z),g>=v&&(g=v,s.set(1,0,0)),g>=T&&(g=T,s.set(0,1,0)),g>=y&&s.set(0,0,1),p.crossVectors(l[0],s).normalize(),c[0].crossVectors(l[0],p),u[0].crossVectors(l[0],c[0])}var n=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,l=[],c=[],u=[],p=new THREE.Vector3,f=new THREE.Matrix4,E=t+1,d,m=1e-4,g,v,T,y,R,x,H;for(this.tangents=l,this.normals=c,this.binormals=u,R=0;E>R;R++)x=R/(E-1),l[R]=e.getTangentAt(x),l[R].normalize();for(a(),R=1;E>R;R++)c[R]=c[R-1].clone(),u[R]=u[R-1].clone(),p.crossVectors(l[R-1],l[R]),p.length()>m&&(p.normalize(),d=Math.acos(THREE.Math.clamp(l[R-1].dot(l[R]),-1,1)),c[R].applyMatrix4(f.makeRotationAxis(p,d))),u[R].crossVectors(l[R],c[R]);if(r)for(d=Math.acos(THREE.Math.clamp(c[0].dot(c[E-1]),-1,1)),d/=E-1,l[0].dot(p.crossVectors(c[0],c[E-1]))>0&&(d=-d),R=1;E>R;R++)c[R].applyMatrix4(f.makeRotationAxis(l[R],d*R)),u[R].crossVectors(l[R],c[R])},THREE.PolyhedronGeometry=function(e,t,r,i){function o(e){var t=e.normalize().clone();t.index=c.vertices.push(t)-1;var r=s(e)/2/Math.PI+.5,i=h(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function a(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);i.centroid.add(e).add(t).add(r).divideScalar(3),c.faces.push(i);var o=s(i.centroid);c.faceVertexUvs[0].push([l(e.uv,e,o),l(t.uv,t,o),l(r.uv,r,o)])}function n(e,t){for(var r=Math.pow(2,t),i=Math.pow(4,t),n=o(c.vertices[e.a]),s=o(c.vertices[e.b]),h=o(c.vertices[e.c]),l=[],u=0;r>=u;u++){l[u]=[];for(var p=o(n.clone().lerp(h,u/r)),f=o(s.clone().lerp(h,u/r)),E=r-u,d=0;E>=d;d++)l[u][d]=0==d&&u==r?p:o(p.clone().lerp(f,d/E))}for(var u=0;r>u;u++)for(var d=0;2*(r-u)-1>d;d++){var m=Math.floor(d/2);d%2==0?a(l[u][m+1],l[u+1][m],l[u][m]):a(l[u][m+1],l[u+1][m+1],l[u+1][m])}}function s(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function l(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var c=this,u=0,p=e.length;p>u;u++)o(new THREE.Vector3(e[u][0],e[u][1],e[u][2]));for(var f=[],E=this.vertices,d=[],u=0,p=t.length;p>u;u++){var m=E[t[u][0]],g=E[t[u][1]],v=E[t[u][2]];d[u]=new THREE.Face3(m.index,g.index,v.index,[m.clone(),g.clone(),v.clone()])}for(var u=0,p=d.length;p>u;u++)n(d[u],i);for(var u=0,p=this.faceVertexUvs[0].length;p>u;u++){var T=this.faceVertexUvs[0][u],y=T[0].x,R=T[1].x,x=T[2].x,H=Math.max(y,Math.max(R,x)),_=Math.min(y,Math.min(R,x));H>.9&&.1>_&&(.2>y&&(T[0].x+=1),.2>R&&(T[1].x+=1),.2>x&&(T[2].x+=1))}for(var u=0,p=this.vertices.length;p>u;u++)this.vertices[u].multiplyScalar(r);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.radius=e,this.detail=t;var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]],o=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,i,o,e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){var r=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],i=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){var r=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],i=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i=this.vertices,o=this.faces,a=this.faceVertexUvs[0],n,s,h,l,c,u,p=r+1,f=t+1;for(n=0;r>=n;n++)for(u=n/r,h=0;t>=h;h++)c=h/t,l=e(c,u),i.push(l);var E,d,m,g,v,T,y,R;for(n=0;r>n;n++)for(h=0;t>h;h++)E=n*f+h,d=n*f+h+1,m=(n+1)*f+h+1,g=(n+1)*f+h,v=new THREE.Vector2(h/t,n/r),T=new THREE.Vector2((h+1)/t,n/r),y=new THREE.Vector2((h+1)/t,(n+1)/r),R=new THREE.Vector2(h/t,(n+1)/r),o.push(new THREE.Face3(E,d,g)),a.push([v,T,R]),o.push(new THREE.Face3(d,m,g)),a.push([T.clone(),y,R.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),this.position=t;var o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(o,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line);var a=new THREE.CylinderGeometry(0,.05,.25,5,1);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var r=new THREE.Geometry;r.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,i=t.boundingBox.max,o=this.vertices;o[0].set(i.x,i.y,i.z),o[1].set(r.x,i.y,i.z),o[2].set(r.x,r.y,i.z),o[3].set(i.x,r.y,i.z),o[4].set(i.x,i.y,r.z),o[5].set(r.x,i.y,r.z),o[6].set(r.x,r.y,r.z),o[7].set(i.x,r.y,r.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var r=t||8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(t)),void 0===a[e]&&(a[e]=[]),a[e].push(i.vertices.length-1)}var i=new THREE.Geometry,o=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),a={},n=16755200,s=16711680,h=43775,l=16777215,c=3355443;t("n1","n2",n),t("n2","n4",n),t("n4","n3",n),t("n3","n1",n),t("f1","f2",n),t("f2","f4",n),t("f4","f3",n),t("f3","f1",n),t("n1","f1",n),t("n2","f2",n),t("n3","f3",n),t("n4","f4",n),t("p","n1",s),t("p","n2",s),t("p","n3",s),t("p","n4",s),t("u1","u2",h),t("u2","u3",h),t("u3","u1",h),t("c","t",l),t("p","c",c),t("cn1","cn2",c),t("cn3","cn4",c),t("cf1","cf2",c),t("cf3","cf4",c),THREE.Line.call(this,i,o,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,a,n,s){e.set(a,n,s),r.unprojectVector(e,t);var h=o.pointMap[i];if(void 0!==h)for(var l=0,c=h.length;c>l;l++)o.geometry.vertices[h[l]].copy(e)}var o=this,a=1,n=1;t.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-a,-n,-1),i("n2",a,-n,-1),i("n3",-a,n,-1),i("n4",a,n,-1),i("f1",-a,-n,1),i("f2",a,-n,1),i("f3",-a,n,1),i("f4",a,n,1),i("u1",.7*a,1.1*n,-1),i("u2",.7*-a,1.1*n,-1),i("u3",0,2*n,-1),i("cf1",-a,0,1),i("cf2",a,0,1),i("cf3",0,-n,1),i("cf4",0,n,1),i("cn1",-a,0,-1),i("cn2",a,0,-1),i("cn3",0,-n,-1),i("cn4",0,n,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var r=new THREE.PlaneGeometry(t,t),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3),r.computeLineDistances(),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){e.getPositionFromMatrix(this.light.matrixWorld).negate(),this.lightPlane.lookAt(e),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(e),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||16776960,a=i||1,n=new THREE.Geometry,s=this.object.geometry.faces,h=0,l=s.length;l>h;h++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.faces,o=this.object.matrixWorld,a=0,n=i.length;n>a;a++){var s=i[a];t.copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var h=2*a;r[h].copy(s.centroid).applyMatrix4(o),r[h+1].addVectors(r[h],t)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var o=-e;e>=o;o+=t){r.vertices.push(new THREE.Vector3(-e,0,o),new THREE.Vector3(e,0,o),new THREE.Vector3(o,0,-e),new THREE.Vector3(o,0,e));var a=0===o?this.color1:this.color2;r.colors.push(a,a,a,a)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var o=new THREE.SphereGeometry(t,4,2);o.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var a=0,n=8;n>a;a++)o.faces[a].color=this.colors[4>a?0:1];var s=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(o,s),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.getPositionFromMatrix(this.light.matrixWorld),t.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||16711680,a=i||1,n=new THREE.Geometry,s=e.geometry.vertices,h=e.geometry.faces,l=0,c=h.length;c>l;l++)for(var u=h[l],p=0,f=u.vertexNormals.length;f>p;p++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;l>h;h++)for(var c=a[h],u=0,p=c.vertexNormals.length;p>u;u++){var f=c[r[u]],E=o[f],d=c.vertexNormals[u];i[s].copy(E).applyMatrix4(n),t.copy(d).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(i[s]),s+=1,i[s].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||255,a=i||1,n=new THREE.Geometry,s=e.geometry.vertices,h=e.geometry.faces,l=0,c=h.length;c>l;l++)for(var u=h[l],p=0,f=u.vertexTangents.length;f>p;p++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;l>h;h++)for(var c=a[h],u=0,p=c.vertexTangents.length;p>u;u++){var f=c[r[u]],E=o[f],d=c.vertexTangents[u];i[s].copy(E).applyMatrix4(n),t.copy(d).transformDirection(n).multiplyScalar(this.size),t.add(i[s]),s+=1,i[s].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e){for(var t=[0,0],r={},i=function(e,t){return e-t},o=["a","b","c","d"],a=new THREE.Geometry,n=e.geometry.vertices,s=e.geometry.faces,h=0,l=s.length;l>h;h++)for(var c=s[h],u=0;3>u;u++){t[0]=c[o[u]],t[1]=c[o[(u+1)%3]],t.sort(i);var p=t.toString();void 0===r[p]&&(a.vertices.push(n[t[0]]),a.vertices.push(n[t[1]]),r[p]=!0)}THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,o)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,o,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:o,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,r,i=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;t>e;e++)r=this.lensFlares[e],r.x=this.positionScreen.x+i*r.distance,r.y=this.positionScreen.y+o*r.distance,r.wantedRotation=r.x*Math.PI*.25,r.rotation+=.25*(r.wantedRotation-r.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",o=0,a=r-1,n=r/1;this.createAnimation(i,o,a,n),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var o={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=o,this.animationsList.push(o)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,r,i={},o=this.geometry,a=0,n=o.morphTargets.length;n>a;a++){var s=o.morphTargets[a],h=s.name.match(t);if(h&&h.length>1){var l=h[1],c=h[2];i[l]||(i[l]={start:1/0,end:-1/0});var u=i[l];a<u.start&&(u.start=a),a>u.end&&(u.end=a),r||(r=l)}}for(var l in i){var u=i[l];this.createAnimation(l,u.start,u.end,e)}this.firstAnimation=r},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var o=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/o),0,i.length-1),n=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*n,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%o/o;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*n,this.morphTargetInfluences[i.lastFrame]=(1-s)*n}}},THREE.LensFlarePlugin=function(){function e(e,r){var i=t.createProgram(),o=t.createShader(t.FRAGMENT_SHADER),a=t.createShader(t.VERTEX_SHADER),n="precision "+r+" float;\n";return t.shaderSource(o,n+e.fragmentShader),t.shaderSource(a,n+e.vertexShader),t.compileShader(o),t.compileShader(a),t.attachShader(i,o),t.attachShader(i,a),t.linkProgram(i),i}var t,r,i,o={};this.init=function(a){t=a.context,r=a,i=a.getPrecision(),o.vertices=new Float32Array(16),o.faces=new Uint16Array(6);var n=0;o.vertices[n++]=-1,o.vertices[n++]=-1,o.vertices[n++]=0,o.vertices[n++]=0,o.vertices[n++]=1,o.vertices[n++]=-1,o.vertices[n++]=1,o.vertices[n++]=0,o.vertices[n++]=1,o.vertices[n++]=1,o.vertices[n++]=1,o.vertices[n++]=1,o.vertices[n++]=-1,o.vertices[n++]=1,o.vertices[n++]=0,o.vertices[n++]=1,n=0,o.faces[n++]=0,o.faces[n++]=1,o.faces[n++]=2,o.faces[n++]=0,o.faces[n++]=2,o.faces[n++]=3,o.vertexBuffer=t.createBuffer(),o.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,o.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,o.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o.faces,t.STATIC_DRAW),o.tempTexture=t.createTexture(),o.occlusionTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,o.occlusionTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(o.hasVertexTexture=!1,o.program=e(THREE.ShaderFlares.lensFlare,i)):(o.hasVertexTexture=!0,o.program=e(THREE.ShaderFlares.lensFlareVertexTexture,i)),o.attributes={},o.uniforms={},o.attributes.vertex=t.getAttribLocation(o.program,"position"),o.attributes.uv=t.getAttribLocation(o.program,"uv"),o.uniforms.renderType=t.getUniformLocation(o.program,"renderType"),o.uniforms.map=t.getUniformLocation(o.program,"map"),o.uniforms.occlusionMap=t.getUniformLocation(o.program,"occlusionMap"),o.uniforms.opacity=t.getUniformLocation(o.program,"opacity"),o.uniforms.color=t.getUniformLocation(o.program,"color"),o.uniforms.scale=t.getUniformLocation(o.program,"scale"),o.uniforms.rotation=t.getUniformLocation(o.program,"rotation"),o.uniforms.screenPosition=t.getUniformLocation(o.program,"screenPosition")
},this.render=function(e,i,a,n){var s=e.__webglFlares,h=s.length;if(h){var l=new THREE.Vector3,c=n/a,u=.5*a,p=.5*n,f=16/n,E=new THREE.Vector2(f*c,f),d=new THREE.Vector3(1,1,0),m=new THREE.Vector2(1,1),g=o.uniforms,v=o.attributes;t.useProgram(o.program),t.enableVertexAttribArray(o.attributes.vertex),t.enableVertexAttribArray(o.attributes.uv),t.uniform1i(g.occlusionMap,0),t.uniform1i(g.map,1),t.bindBuffer(t.ARRAY_BUFFER,o.vertexBuffer),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.elementBuffer),t.disable(t.CULL_FACE),t.depthMask(!1);var T,y,R,x,H;for(T=0;h>T;T++)if(f=16/n,E.set(f*c,f),x=s[T],l.set(x.matrixWorld.elements[12],x.matrixWorld.elements[13],x.matrixWorld.elements[14]),l.applyMatrix4(i.matrixWorldInverse),l.applyProjection(i.projectionMatrix),d.copy(l),m.x=d.x*u+u,m.y=d.y*p+p,o.hasVertexTexture||m.x>0&&m.x<a&&m.y>0&&m.y<n)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,m.x-8,m.y-8,16,16,0),t.uniform1i(g.renderType,0),t.uniform2f(g.scale,E.x,E.y),t.uniform3f(g.screenPosition,d.x,d.y,d.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,o.occlusionTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,m.x-8,m.y-8,16,16,0),t.uniform1i(g.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,o.tempTexture),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),x.positionScreen.copy(d),x.customUpdateCallback?x.customUpdateCallback(x):x.updateLensFlares(),t.uniform1i(g.renderType,2),t.enable(t.BLEND),y=0,R=x.lensFlares.length;R>y;y++)H=x.lensFlares[y],H.opacity>.001&&H.scale>.001&&(d.x=H.x,d.y=H.y,d.z=H.z,f=H.size*H.scale/n,E.x=f*c,E.y=f,t.uniform3f(g.screenPosition,d.x,d.y,d.z),t.uniform2f(g.scale,E.x,E.y),t.uniform1f(g.rotation,H.rotation),t.uniform1f(g.opacity,H.opacity),t.uniform3f(g.color,H.color.r,H.color.g,H.color.b),r.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),r.setTexture(H.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function e(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,o=r.pointsFrustum,a=0;8>a;a++)i[a]=new THREE.Vector3,o[a]=new THREE.Vector3;var n=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return o[0].set(-1,-1,n),o[1].set(1,-1,n),o[2].set(-1,1,n),o[3].set(1,1,n),o[4].set(-1,-1,s),o[5].set(1,-1,s),o[6].set(-1,1,s),o[7].set(1,1,s),r}function t(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],o=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=o,a[5].z=o,a[6].z=o,a[7].z=o}function r(e,t){var r=t.shadowCamera,i=t.pointsFrustum,o=t.pointsWorld;p.set(1/0,1/0,1/0),f.set(-1/0,-1/0,-1/0);for(var a=0;8>a;a++){var n=o[a];n.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(n,e),n.applyMatrix4(r.matrixWorldInverse),n.x<p.x&&(p.x=n.x),n.x>f.x&&(f.x=n.x),n.y<p.y&&(p.y=n.y),n.y>f.y&&(f.y=n.y),n.z<p.z&&(p.z=n.z),n.z>f.z&&(f.z=n.z)}r.left=p.x,r.right=f.x,r.top=f.y,r.bottom=p.y,r.updateProjectionMatrix()}function i(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var o,a,n,s,h,l,c=new THREE.Frustum,u=new THREE.Matrix4,p=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3;this.init=function(e){o=e.context,a=e;var t=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(t.uniforms);n=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r}),s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0}),h=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,skinning:!0}),l=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),n._shadowPass=!0,s._shadowPass=!0,h._shadowPass=!0,l._shadowPass=!0},this.render=function(e,t){a.shadowMapEnabled&&a.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(p,f){var d,m,g,v,T,y,R,x,H,_,b,w,M,S,A,C=[],P=0,L=null;for(o.clearColor(1,1,1,1),o.disable(o.BLEND),o.enable(o.CULL_FACE),o.frontFace(o.CCW),o.cullFace(a.shadowMapCullFace===THREE.CullFaceFront?o.FRONT:o.BACK),a.setDepthTest(!0),d=0,m=p.__lights.length;m>d;d++)if(S=p.__lights[d],S.castShadow)if(S instanceof THREE.DirectionalLight&&S.shadowCascade)for(T=0;T<S.shadowCascadeCount;T++){var D;if(S.shadowCascadeArray[T])D=S.shadowCascadeArray[T];else{D=e(S,T),D.originalCamera=f;var F=new THREE.Gyroscope;F.position=S.shadowCascadeOffset,F.add(D),F.add(D.target),f.add(F),S.shadowCascadeArray[T]=D,console.log("Created virtualLight",D)}t(S,T),C[P]=D,P++}else C[P]=S,P++;for(d=0,m=C.length;m>d;d++){if(S=C[d],!S.shadowMap){var V=THREE.LinearFilter;a.shadowMapType===THREE.PCFSoftShadowMap&&(V=THREE.NearestFilter);var U={minFilter:V,magFilter:V,format:THREE.RGBAFormat};S.shadowMap=new THREE.WebGLRenderTarget(S.shadowMapWidth,S.shadowMapHeight,U),S.shadowMapSize=new THREE.Vector2(S.shadowMapWidth,S.shadowMapHeight),S.shadowMatrix=new THREE.Matrix4}if(!S.shadowCamera){if(S instanceof THREE.SpotLight)S.shadowCamera=new THREE.PerspectiveCamera(S.shadowCameraFov,S.shadowMapWidth/S.shadowMapHeight,S.shadowCameraNear,S.shadowCameraFar);else{if(!(S instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}S.shadowCamera=new THREE.OrthographicCamera(S.shadowCameraLeft,S.shadowCameraRight,S.shadowCameraTop,S.shadowCameraBottom,S.shadowCameraNear,S.shadowCameraFar)}p.add(S.shadowCamera),p.autoUpdate===!0&&p.updateMatrixWorld()}for(S.shadowCameraVisible&&!S.cameraHelper&&(S.cameraHelper=new THREE.CameraHelper(S.shadowCamera),S.shadowCamera.add(S.cameraHelper)),S.isVirtual&&D.originalCamera==f&&r(f,S),y=S.shadowMap,R=S.shadowMatrix,x=S.shadowCamera,x.position.getPositionFromMatrix(S.matrixWorld),E.getPositionFromMatrix(S.target.matrixWorld),x.lookAt(E),x.updateMatrixWorld(),x.matrixWorldInverse.getInverse(x.matrixWorld),S.cameraHelper&&(S.cameraHelper.visible=S.shadowCameraVisible),S.shadowCameraVisible&&S.cameraHelper.update(),R.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),R.multiply(x.projectionMatrix),R.multiply(x.matrixWorldInverse),u.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),c.setFromMatrix(u),a.setRenderTarget(y),a.clear(),A=p.__webglObjects,g=0,v=A.length;v>g;g++)w=A[g],M=w.object,w.render=!1,M.visible&&M.castShadow&&((M instanceof THREE.Mesh||M instanceof THREE.ParticleSystem)&&M.frustumCulled&&!c.intersectsObject(M)||(M._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,M.matrixWorld),w.render=!0));var z,B,N;for(g=0,v=A.length;v>g;g++)w=A[g],w.render&&(M=w.object,_=w.buffer,z=i(M),B=M.geometry.morphTargets.length>0&&z.morphTargets,N=M instanceof THREE.SkinnedMesh&&z.skinning,b=M.customDepthMaterial?M.customDepthMaterial:N?B?l:h:B?s:n,_ instanceof THREE.BufferGeometry?a.renderBufferDirect(x,p.__lights,L,b,_,M):a.renderBuffer(x,p.__lights,L,b,_,M));for(A=p.__webglObjectsImmediate,g=0,v=A.length;v>g;g++)w=A[g],M=w.object,M.visible&&M.castShadow&&(M._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,M.matrixWorld),a.renderImmediateObject(x,p.__lights,L,n,M))}var O=a.getClearColor(),I=a.getClearAlpha();o.clearColor(O.r,O.g,O.b,I),o.enable(o.BLEND),a.shadowMapCullFace===THREE.CullFaceFront&&o.cullFace(o.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){var i=r.createProgram(),o=r.createShader(r.FRAGMENT_SHADER),a=r.createShader(r.VERTEX_SHADER),n="precision "+t+" float;\n";return r.shaderSource(o,n+e.fragmentShader),r.shaderSource(a,n+e.vertexShader),r.compileShader(o),r.compileShader(a),r.attachShader(i,o),r.attachShader(i,a),r.linkProgram(i),i}function t(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var r,i,o,a={};this.init=function(t){r=t.context,i=t,o=t.getPrecision(),a.vertices=new Float32Array(16),a.faces=new Uint16Array(6);var n=0;a.vertices[n++]=-1,a.vertices[n++]=-1,a.vertices[n++]=0,a.vertices[n++]=0,a.vertices[n++]=1,a.vertices[n++]=-1,a.vertices[n++]=1,a.vertices[n++]=0,a.vertices[n++]=1,a.vertices[n++]=1,a.vertices[n++]=1,a.vertices[n++]=1,a.vertices[n++]=-1,a.vertices[n++]=1,a.vertices[n++]=0,a.vertices[n++]=1,n=0,a.faces[n++]=0,a.faces[n++]=1,a.faces[n++]=2,a.faces[n++]=0,a.faces[n++]=2,a.faces[n++]=3,a.vertexBuffer=r.createBuffer(),a.elementBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.bufferData(r.ARRAY_BUFFER,a.vertices,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,a.faces,r.STATIC_DRAW),a.program=e(THREE.ShaderSprite.sprite,o),a.attributes={},a.uniforms={},a.attributes.position=r.getAttribLocation(a.program,"position"),a.attributes.uv=r.getAttribLocation(a.program,"uv"),a.uniforms.uvOffset=r.getUniformLocation(a.program,"uvOffset"),a.uniforms.uvScale=r.getUniformLocation(a.program,"uvScale"),a.uniforms.rotation=r.getUniformLocation(a.program,"rotation"),a.uniforms.scale=r.getUniformLocation(a.program,"scale"),a.uniforms.alignment=r.getUniformLocation(a.program,"alignment"),a.uniforms.color=r.getUniformLocation(a.program,"color"),a.uniforms.map=r.getUniformLocation(a.program,"map"),a.uniforms.opacity=r.getUniformLocation(a.program,"opacity"),a.uniforms.useScreenCoordinates=r.getUniformLocation(a.program,"useScreenCoordinates"),a.uniforms.sizeAttenuation=r.getUniformLocation(a.program,"sizeAttenuation"),a.uniforms.screenPosition=r.getUniformLocation(a.program,"screenPosition"),a.uniforms.modelViewMatrix=r.getUniformLocation(a.program,"modelViewMatrix"),a.uniforms.projectionMatrix=r.getUniformLocation(a.program,"projectionMatrix"),a.uniforms.fogType=r.getUniformLocation(a.program,"fogType"),a.uniforms.fogDensity=r.getUniformLocation(a.program,"fogDensity"),a.uniforms.fogNear=r.getUniformLocation(a.program,"fogNear"),a.uniforms.fogFar=r.getUniformLocation(a.program,"fogFar"),a.uniforms.fogColor=r.getUniformLocation(a.program,"fogColor"),a.uniforms.alphaTest=r.getUniformLocation(a.program,"alphaTest")},this.render=function(e,o,n,s){var h=e.__webglSprites,l=h.length;if(l){var c=a.attributes,u=a.uniforms,p=s/n,f=.5*n,E=.5*s;r.useProgram(a.program),r.enableVertexAttribArray(c.position),r.enableVertexAttribArray(c.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.vertexAttribPointer(c.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(c.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.uniformMatrix4fv(u.projectionMatrix,!1,o.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(u.map,0);var d=0,m=0,g=e.fog;g?(r.uniform3f(u.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(r.uniform1f(u.fogNear,g.near),r.uniform1f(u.fogFar,g.far),r.uniform1i(u.fogType,1),d=1,m=1):g instanceof THREE.FogExp2&&(r.uniform1f(u.fogDensity,g.density),r.uniform1i(u.fogType,2),d=2,m=2)):(r.uniform1i(u.fogType,0),d=0,m=0);var v,T,y,R,x,H,_=[];for(v=0;l>v;v++)T=h[v],y=T.material,T.visible&&0!==y.opacity&&(y.useScreenCoordinates?T.z=-T.position.z:(T._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]));for(h.sort(t),v=0;l>v;v++)T=h[v],y=T.material,T.visible&&0!==y.opacity&&y.map&&y.map.image&&y.map.image.width&&(r.uniform1f(u.alphaTest,y.alphaTest),y.useScreenCoordinates===!0?(r.uniform1i(u.useScreenCoordinates,1),r.uniform3f(u.screenPosition,(T.position.x*i.devicePixelRatio-f)/f,(E-T.position.y*i.devicePixelRatio)/E,Math.max(0,Math.min(1,T.position.z))),_[0]=i.devicePixelRatio,_[1]=i.devicePixelRatio):(r.uniform1i(u.useScreenCoordinates,0),r.uniform1i(u.sizeAttenuation,y.sizeAttenuation?1:0),r.uniformMatrix4fv(u.modelViewMatrix,!1,T._modelViewMatrix.elements),_[0]=1,_[1]=1),H=e.fog&&y.fog?m:0,d!==H&&(r.uniform1i(u.fogType,H),d=H),x=1/(y.scaleByViewport?s:1),_[0]*=x*p*T.scale.x,_[1]*=x*T.scale.y,r.uniform2f(u.uvScale,y.uvScale.x,y.uvScale.y),r.uniform2f(u.uvOffset,y.uvOffset.x,y.uvOffset.y),r.uniform2f(u.alignment,y.alignment.x,y.alignment.y),r.uniform1f(u.opacity,y.opacity),r.uniform3f(u.color,y.color.r,y.color.g,y.color.b),r.uniform1f(u.rotation,T.rotation),r.uniform2fv(u.scale,_),i.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),i.setDepthTest(y.depthTest),i.setDepthWrite(y.depthWrite),i.setTexture(y.map,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0));r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function e(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.enabled=!1,this.renderTarget=null;var t,r,i,o,a,n,s=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(e){t=e.context,r=e;var s=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(s.uniforms);i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,skinning:!0}),n=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0,n._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(l,c){var u,p,f,E,d,m,g,v,T,y,R,x,H=null;for(t.clearColor(1,1,1,1),t.disable(t.BLEND),r.setDepthTest(!0),l.autoUpdate===!0&&l.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),h.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),s.setFromMatrix(h),r.setRenderTarget(this.renderTarget),r.clear(),x=l.__webglObjects,f=0,E=x.length;E>f;f++)T=x[f],y=T.object,T.render=!1,y.visible&&((y instanceof THREE.Mesh||y instanceof THREE.ParticleSystem)&&y.frustumCulled&&!s.intersectsObject(y)||(y._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,y.matrixWorld),T.render=!0));var _,b,w;for(f=0,E=x.length;E>f;f++)if(T=x[f],T.render){if(y=T.object,g=T.buffer,y instanceof THREE.ParticleSystem&&!y.customDepthMaterial)continue;_=e(y),_&&r.setMaterialFaces(y.material),b=y.geometry.morphTargets.length>0&&_.morphTargets,w=y instanceof THREE.SkinnedMesh&&_.skinning,v=y.customDepthMaterial?y.customDepthMaterial:w?b?n:a:b?o:i,g instanceof THREE.BufferGeometry?r.renderBufferDirect(c,l.__lights,H,v,g,y):r.renderBuffer(c,l.__lights,H,v,g,y)}for(x=l.__webglObjectsImmediate,f=0,E=x.length;E>f;f++)T=x[f],y=T.object,y.visible&&(y._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,y.matrixWorld),r.renderImmediateObject(c,l.__lights,H,i,y));var M=r.getClearColor(),S=r.getClearAlpha();t.clearColor(M.r,M.g,M.b,S),t.enable(t.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};